{
  String fileName="test_single_col.dat";
  File f=new File(fileName);
  f.delete();
  DataOutputStream dos=new DataOutputStream(new FileOutputStream(f));
  int[][] data=new int[100][];
  Random r=new Random();
  for (int i=0; i < data.length; i++) {
    int numValues=r.nextInt(100) + 1;
    data[i]=new int[numValues];
    for (int j=0; j < numValues; j++) {
      data[i][j]=r.nextInt();
    }
  }
  int cumValues=0;
  for (int i=0; i < data.length; i++) {
    dos.writeInt(cumValues);
    dos.writeInt(data[i].length);
    cumValues+=data[i].length;
  }
  for (int i=0; i < data.length; i++) {
    int numValues=data[i].length;
    for (int j=0; j < numValues; j++) {
      dos.writeInt(data[i][j]);
    }
  }
  dos.flush();
  dos.close();
  int[] readValues=new int[100];
  FixedByteWidthSingleColumnMultiValueReader heapReader=new FixedByteWidthSingleColumnMultiValueReader(f,data.length,4,false);
  for (int i=0; i < data.length; i++) {
    int numValues=heapReader.getIntArray(i,readValues);
    Assert.assertEquals(numValues,data[i].length);
    for (int j=0; j < numValues; j++) {
      Assert.assertEquals(readValues[j],data[i][j]);
    }
  }
  heapReader.close();
  FixedByteWidthSingleColumnMultiValueReader mmapReader=new FixedByteWidthSingleColumnMultiValueReader(f,data.length,4,true);
  for (int i=0; i < data.length; i++) {
    int numValues=mmapReader.getIntArray(i,readValues);
    Assert.assertEquals(numValues,data[i].length);
    for (int j=0; j < numValues; j++) {
      Assert.assertEquals(readValues[j],data[i][j]);
    }
  }
  mmapReader.close();
  f.delete();
}
