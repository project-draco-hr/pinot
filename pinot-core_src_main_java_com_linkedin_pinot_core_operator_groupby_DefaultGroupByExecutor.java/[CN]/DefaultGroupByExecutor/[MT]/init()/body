{
  if (_inited) {
    return;
  }
  List<String> groupByColumns=_groupBy.getColumns();
  _groupByColumns=groupByColumns.toArray(new String[groupByColumns.size()]);
  _aggrFuncContextList=new ArrayList<AggregationFunctionContext>(_aggregationsInfoList.size());
  _columnsLoaded=new HashSet<>();
  _columnToDictArrayMap=new HashMap<String,int[]>();
  _columnToValueArrayMap=new HashMap<String,double[]>();
  for (  AggregationInfo aggregationInfo : _aggregationsInfoList) {
    String[] columns=aggregationInfo.getAggregationParams().get("column").trim().split(",");
    for (    String column : columns) {
      if (!column.equals("*") && !_columnToDictArrayMap.containsKey(column)) {
        _columnToDictArrayMap.put(column,new int[DocIdSetPlanNode.MAX_DOC_PER_CALL]);
        _columnToValueArrayMap.put(column,new double[DocIdSetPlanNode.MAX_DOC_PER_CALL]);
      }
    }
    AggregationFunctionContext aggregationFunctionContext=new AggregationFunctionContext(_indexSegment,aggregationInfo.getAggregationType(),columns);
    _aggrFuncContextList.add(aggregationFunctionContext);
  }
  _hasMultiValuedColumns=hasMultiValueGroupByColumns(_indexSegment,_groupByColumns);
  _groupKeyGenerator=new DefaultGroupKeyGenerator(_indexSegment,_groupByColumns,_maxNumGroupKeys);
  _resultHolderArray=new GroupByResultHolder[_aggrFuncContextList.size()];
  for (int i=0; i < _aggrFuncContextList.size(); i++) {
    AggregationFunctionContext aggregationFunctionContext=_aggrFuncContextList.get(i);
    AggregationFunction aggregationFunction=aggregationFunctionContext.getAggregationFunction();
    _resultHolderArray[i]=ResultHolderFactory.getGroupByResultHolder(aggregationFunction,_maxNumGroupKeys);
  }
  if (_hasMultiValuedColumns) {
    _docIdToMVGroupKey=new int[DocIdSetPlanNode.MAX_DOC_PER_CALL][];
  }
 else {
    _docIdToSVGroupKey=new int[DocIdSetPlanNode.MAX_DOC_PER_CALL];
  }
  _inited=true;
}
