{
  DoubleMatrix state_transition_matrix_T=state_transition_matrix_ref_.transpose();
  DoubleMatrix observation_matrix_T=observation_matrix_ref_.transpose();
  for (int ii=0; ii < number_of_observations_; ii++) {
    DoubleMatrix previous_state_mean=(ii == 0) ? initial_state_mean_ref_ : estimated_state_means_[ii - 1];
    DoubleMatrix previous_state_covariance=(ii == 0) ? initial_state_covariance_ref_ : estimated_state_covariances_[ii - 1];
    DoubleMatrix a=state_transition_matrix_ref_.mmul(previous_state_mean);
    DoubleMatrix R=state_transition_matrix_ref_.mmul(previous_state_covariance).mmul(state_transition_matrix_T).addi(transition_covariance_matrix_ref_);
    predicted_observation_means_[ii]=observation_matrix_ref_.mmul(a);
    predicted_observation_covariances_[ii]=observation_matrix_ref_.mmul(R).mmul(observation_matrix_T).addi(observation_covariance_matrix_ref_);
    if (observations_ref_[ii] == null) {
      estimated_state_means_[ii]=a;
      estimated_state_covariances_[ii]=R;
    }
 else {
      DoubleMatrix inv_predicted_observation_covariances=InverseMatrix.inverse(predicted_observation_covariances_[ii]);
      DoubleMatrix R_obs_mat_T_inv_pred_obs_cov=R.mmul(observation_matrix_T).mmuli(inv_predicted_observation_covariances);
      estimated_state_means_[ii]=R_obs_mat_T_inv_pred_obs_cov.mmul(observations_ref_[ii].sub(predicted_observation_means_[ii])).addi(a);
      estimated_state_covariances_[ii]=R.sub(R_obs_mat_T_inv_pred_obs_cov.mmul(observation_matrix_ref_).mmuli(R));
      estimated_means_[ii]=observation_matrix_ref_.mmul(estimated_state_means_[ii]);
      estimated_covariances_[ii]=observation_matrix_ref_.mmul(estimated_state_covariances_[ii]).mmul(observation_matrix_T).addi(observation_covariance_matrix_ref_);
    }
  }
}
