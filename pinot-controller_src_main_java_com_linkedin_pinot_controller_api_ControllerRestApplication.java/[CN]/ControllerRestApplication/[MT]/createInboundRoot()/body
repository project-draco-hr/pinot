{
  getContext().getParameters().add("maxIoIdleTimeMs","0");
  getContext().getParameters().add("ioMaxIdleTimeMs","0");
  router=new Router(getContext());
  router.setDefaultMatchingMode(Template.MODE_EQUALS);
  attachRoutesForClass(router,PinotTenantRestletResource.class);
  attachRoutesForClass(router,PinotSchemaRestletResource.class);
  attachRoutesForClass(router,PinotTableRestletResource.class);
  attachRoutesForClass(router,PinotTableInstances.class);
  attachRoutesForClass(router,PinotTableSchema.class);
  attachRoutesForClass(router,PinotSegmentRestletResource.class);
  attachRoutesForClass(router,PinotTableSegmentConfigs.class);
  attachRoutesForClass(router,PinotTableIndexingConfigs.class);
  attachRoutesForClass(router,PinotTableTenantConfigs.class);
  attachRoutesForClass(router,PinotTableMetadataConfigs.class);
  attachRoutesForClass(router,PinotSegmentUploadRestletResource.class);
  router.attach("/api",SwaggerResource.class);
  attachRoutesForClass(router,PinotInstanceRestletResource.class);
  router.attach("/pinot-controller/admin",PinotControllerHealthCheck.class);
  router.attach("/pql",PqlQueryResource.class);
  final Restlet mainpage=new Restlet(){
    @Override public void handle(    Request request,    Response response){
      final StringBuilder stringBuilder=new StringBuilder();
      stringBuilder.append("<html>");
      stringBuilder.append("<head><title>Restlet Cluster Management page</title></head>");
      stringBuilder.append("<body bgcolor=white>");
      stringBuilder.append("<table border=\"0\">");
      stringBuilder.append("<tr>");
      stringBuilder.append("<td>");
      stringBuilder.append("<h1>Rest cluster management interface V1</h1>");
      stringBuilder.append("</td>");
      stringBuilder.append("</tr>");
      stringBuilder.append("</table>");
      stringBuilder.append("</body>");
      stringBuilder.append("</html>");
      response.setEntity(new StringRepresentation(stringBuilder.toString(),MediaType.TEXT_HTML));
    }
  }
;
  final Directory webdir=new Directory(getContext(),CONSOLE_WEBAPP_ROOT_PATH);
  webdir.setDeeplyAccessible(true);
  webdir.setIndexName("index.html");
  router.attach("/query",webdir);
  final Directory swaggerUiDir=new Directory(getContext(),getClass().getClassLoader().getResource("META-INF/resources/webjars/swagger-ui/2.1.8-M1").toString());
  swaggerUiDir.setDeeplyAccessible(true);
  router.attach("/swagger-ui",swaggerUiDir);
  final Redirector redirector=new Redirector(getContext(),"/swagger-ui/index.html?url=/api",Redirector.MODE_CLIENT_TEMPORARY);
  router.attach("/help",redirector);
  return router;
}
