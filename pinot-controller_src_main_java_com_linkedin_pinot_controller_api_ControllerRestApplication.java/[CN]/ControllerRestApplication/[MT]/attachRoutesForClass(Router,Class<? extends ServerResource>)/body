{
  TreeSet<String> pathsOrderedByLength=new TreeSet<String>(ComparatorUtils.chainedComparator(new Comparator<String>(){
    private IntComparator _intComparator=IntComparators.NATURAL_COMPARATOR;
    @Override public int compare(    String o1,    String o2){
      return _intComparator.compare(o1.length(),o2.length());
    }
  }
,ComparatorUtils.NATURAL_COMPARATOR));
  for (  Method method : clazz.getDeclaredMethods()) {
    Annotation annotationInstance=method.getAnnotation(Paths.class);
    if (annotationInstance != null) {
      pathsOrderedByLength.addAll(Arrays.asList(((Paths)annotationInstance).value()));
    }
  }
  for (  String routePath : pathsOrderedByLength) {
    LOGGER.info("Attaching route {} -> {}",routePath,clazz.getSimpleName());
    router.attach(routePath,new AddHeaderFilter(getContext(),createFinder(clazz)));
  }
}
