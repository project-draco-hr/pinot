{
  long lastBranch=0;
  Node parent=null;
  Node current=root;
  while (true) {
    if (current == null) {
      setChild(parent,lastBranch,createLeaf(bits,weight));
      return;
    }
 else     if (!inSameSubtree(bits,current.bits,current.level)) {
      setChild(parent,lastBranch,makeSiblings(current,createLeaf(bits,weight)));
      return;
    }
 else     if (current.level == 0 && current.bits == bits) {
      double oldWeight=current.weightedCount;
      current.weightedCount+=weight;
      if (current.weightedCount >= ZERO_WEIGHT_THRESHOLD && oldWeight < ZERO_WEIGHT_THRESHOLD) {
        ++nonZeroNodeCount;
      }
      weightedCount+=weight;
      return;
    }
    long branch=bits & current.getBranchMask();
    parent=current;
    lastBranch=branch;
    if (branch == 0) {
      current=current.left;
    }
 else {
      current=current.right;
    }
  }
}
