{
  ZkTestUtils.startLocalZkServer();
  _zkClient=new ZkClient(ZK_SERVER);
  final String zkPath="/" + HELIX_CLUSTER_NAME;
  if (_zkClient.exists(zkPath)) {
    _zkClient.deleteRecursive(zkPath);
  }
  final String instanceId="localhost_helixController";
  _pinotResourceManager=new PinotHelixResourceManager(ZK_SERVER,HELIX_CLUSTER_NAME,instanceId,null);
  _pinotResourceManager.start();
  final String helixZkURL=HelixConfig.getAbsoluteZkPathForHelix(ZK_SERVER);
  _helixZkManager=HelixSetupUtils.setup(HELIX_CLUSTER_NAME,helixZkURL,instanceId);
  _helixAdmin=_helixZkManager.getClusterManagmentTool();
  ControllerRequestBuilderUtil.addFakeDataInstancesToAutoJoinHelixCluster(HELIX_CLUSTER_NAME,ZK_SERVER,_numServerInstance);
  ControllerRequestBuilderUtil.addFakeBrokerInstancesToAutoJoinHelixCluster(HELIX_CLUSTER_NAME,ZK_SERVER,_numBrokerInstance);
  Thread.sleep(3000);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,CommonConstants.Helix.UNTAGGED_SERVER_INSTANCE).size(),_numServerInstance);
}
