{
  final String tableName=(String)getRequest().getAttributes().get(TABLE_NAME);
  final String state=getReference().getQueryAsForm().getValues(STATE);
  final String tableType=getReference().getQueryAsForm().getValues(TABLE_TYPE);
  if (tableType != null && !isValidTableType(tableType)) {
    LOGGER.error(INVALID_TABLE_TYPE_ERROR);
    setStatus(Status.CLIENT_ERROR_BAD_REQUEST);
    return new StringRepresentation(INVALID_TABLE_TYPE_ERROR);
  }
  if (tableName == null) {
    try {
      return getAllTables();
    }
 catch (    Exception e) {
      LOGGER.error("Caught exception while fetching table ",e);
      ControllerRestApplication.getControllerMetrics().addMeteredValue(null,ControllerMeter.CONTROLLER_TABLE_GET_ERROR,1L);
      setStatus(Status.SERVER_ERROR_INTERNAL);
      return PinotSegmentUploadRestletResource.exceptionToStringRepresentation(e);
    }
  }
  try {
    if (state == null) {
      return getTable(tableName,tableType);
    }
 else     if (isValidState(state)) {
      return setTablestate(tableName,tableType,state);
    }
 else {
      LOGGER.error(INVALID_STATE_ERROR);
      setStatus(Status.CLIENT_ERROR_BAD_REQUEST);
      return new StringRepresentation(INVALID_STATE_ERROR);
    }
  }
 catch (  Exception e) {
    LOGGER.error("Caught exception while fetching table ",e);
    ControllerRestApplication.getControllerMetrics().addMeteredValue(null,ControllerMeter.CONTROLLER_TABLE_GET_ERROR,1L);
    setStatus(Status.SERVER_ERROR_INTERNAL);
    return PinotSegmentUploadRestletResource.exceptionToStringRepresentation(e);
  }
}
