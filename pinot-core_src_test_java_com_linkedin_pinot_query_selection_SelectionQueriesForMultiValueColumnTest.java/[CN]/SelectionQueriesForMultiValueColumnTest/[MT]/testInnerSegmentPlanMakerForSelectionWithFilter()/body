{
  setupSegment();
  final BrokerRequest brokerRequest=getSelectionWithFilterBrokerRequest();
  System.out.println(brokerRequest);
  final PlanMaker instancePlanMaker=new InstancePlanMakerImplV2();
  final PlanNode rootPlanNode=instancePlanMaker.makeInnerSegmentPlan(_indexSegment,brokerRequest);
  rootPlanNode.showTree("");
  final MSelectionOrderByOperator operator=(MSelectionOrderByOperator)rootPlanNode.run();
  final IntermediateResultsBlock resultBlock=(IntermediateResultsBlock)operator.nextBlock();
  System.out.println("RunningTime : " + resultBlock.getTimeUsedMs());
  System.out.println("NumDocsScanned : " + resultBlock.getNumDocsScanned());
  System.out.println("TotalDocs : " + resultBlock.getTotalRawDocs());
  Assert.assertEquals(resultBlock.getNumDocsScanned(),10);
  Assert.assertEquals(resultBlock.getTotalRawDocs(),100000);
  final SelectionOperatorService selectionOperatorService=new SelectionOperatorService(brokerRequest.getSelections(),resultBlock.getSelectionDataSchema());
  SelectionResults selectionResults=getSelectionResults(resultBlock,selectionOperatorService);
  assertColumnsInResult(selectionResults);
  List<Serializable[]> rows=selectionResults.getRows();
  for (  Serializable[] row : rows) {
    Assert.assertEquals(row[0],"1787748327");
  }
}
