{
  setupSegment();
  final BrokerRequest brokerRequest=getSelectionNoFilterBrokerRequest();
  final PlanMaker instancePlanMaker=new InstancePlanMakerImplV0();
  final PlanNode rootPlanNode=instancePlanMaker.makeInnerSegmentPlan(_indexSegment,brokerRequest);
  rootPlanNode.showTree("");
  final MSelectionOrderByOperator operator=(MSelectionOrderByOperator)rootPlanNode.run();
  final IntermediateResultsBlock resultBlock=(IntermediateResultsBlock)operator.nextBlock();
  System.out.println("RunningTime : " + resultBlock.getTimeUsedMs());
  System.out.println("NumDocsScanned : " + resultBlock.getNumDocsScanned());
  System.out.println("TotalDocs : " + resultBlock.getTotalRawDocs());
  final SelectionOperatorService selectionOperatorService=new SelectionOperatorService(brokerRequest.getSelections(),resultBlock.getSelectionDataSchema());
  final JSONObject jsonResult=getJsonResult(resultBlock,selectionOperatorService);
  assertColumnsInResult(jsonResult);
  JSONArray resultsJsonArray=jsonResult.getJSONArray("results");
  for (int i=0; i < resultsJsonArray.length(); ++i) {
    JSONArray rowJsonArray=resultsJsonArray.getJSONArray(i);
    Assert.assertEquals(rowJsonArray.getString(0),"2147434110");
  }
}
