{
  ThirdEyeRequestBuilder builder=new ThirdEyeRequestBuilder();
  builder.setCollection(timeSeriesRequest.getCollectionName());
  List<Range<DateTime>> timeranges=new ArrayList<>();
  TimeGranularity aggregationTimeGranularity=timeSeriesRequest.getAggregationTimeGranularity();
  timeranges=TimeRangeUtils.computeTimeRanges(aggregationTimeGranularity,timeSeriesRequest.getStart(),timeSeriesRequest.getEnd());
  ThirdEyeRequest request=createThirdEyeRequest("timeseries",timeSeriesRequest,timeSeriesRequest.getStart(),timeSeriesRequest.getEnd());
  Future<ThirdEyeResponse> responseFuture=queryCache.getQueryResultAsync(request);
  ThirdEyeResponse response=responseFuture.get(60,TimeUnit.SECONDS);
  TimeSeriesResponseParser timeSeriesResponseParser=new TimeSeriesResponseParser(response,timeranges,timeSeriesRequest.getAggregationTimeGranularity(),timeSeriesRequest.getGroupByDimensions());
  List<TimeSeriesRow> rows=timeSeriesResponseParser.parseResponse();
  computeDerivedMetrics(timeSeriesRequest,rows);
  return new TimeSeriesResponse(rows);
}
