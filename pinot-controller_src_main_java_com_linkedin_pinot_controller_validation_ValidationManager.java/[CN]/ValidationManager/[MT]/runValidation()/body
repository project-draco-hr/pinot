{
  if (!_pinotHelixResourceManager.isLeader()) {
    LOGGER.info("Skipping validation, not leader!");
    return;
  }
  LOGGER.info("Starting validation");
  List<String> allTableNames=_pinotHelixResourceManager.getAllPinotTableNames();
  ZkHelixPropertyStore<ZNRecord> propertyStore=_pinotHelixResourceManager.getPropertyStore();
  for (  String tableName : allTableNames) {
    if (TableNameBuilder.getTableTypeFromTableName(tableName) != TableType.OFFLINE) {
      continue;
    }
    List<OfflineSegmentZKMetadata> offlineSegmentZKMetadatas=ZKMetadataProvider.getOfflineSegmentZKMetadataListForTable(propertyStore,tableName);
    List<SegmentMetadata> segmentMetadataList=new ArrayList<SegmentMetadata>();
    for (    OfflineSegmentZKMetadata offlineSegmentZKMetadata : offlineSegmentZKMetadatas) {
      SegmentMetadata segmentMetadata=new SegmentMetadataImpl(offlineSegmentZKMetadata);
      segmentMetadataList.add(segmentMetadata);
    }
    int missingSegmentCount=0;
    if (2 < segmentMetadataList.size()) {
      List<Interval> segmentIntervals=new ArrayList<Interval>();
      for (      SegmentMetadata segmentMetadata : segmentMetadataList) {
        Interval timeInterval=segmentMetadata.getTimeInterval();
        if (timeInterval != null)         segmentIntervals.add(timeInterval);
      }
      List<Interval> missingIntervals=computeMissingIntervals(segmentIntervals,segmentMetadataList.get(0).getTimeGranularity());
      missingSegmentCount=missingIntervals.size();
    }
    _validationMetrics.updateMissingSegmentsGauge(tableName,missingSegmentCount);
    long maxSegmentEndTime=Long.MIN_VALUE;
    long maxSegmentPushTime=Long.MIN_VALUE;
    for (    SegmentMetadata segmentMetadata : segmentMetadataList) {
      Interval segmentInterval=segmentMetadata.getTimeInterval();
      if (segmentInterval != null && maxSegmentEndTime < segmentInterval.getEndMillis()) {
        maxSegmentEndTime=segmentInterval.getEndMillis();
      }
      long segmentPushTime=segmentMetadata.getPushTime();
      long segmentRefreshTime=segmentMetadata.getRefreshTime();
      long segmentUpdateTime=Math.max(segmentPushTime,segmentRefreshTime);
      if (maxSegmentPushTime < segmentUpdateTime) {
        maxSegmentPushTime=segmentUpdateTime;
      }
    }
    _validationMetrics.updateOfflineSegmentDelayGauge(tableName,maxSegmentEndTime);
    _validationMetrics.updateLastPushTimeGauge(tableName,maxSegmentPushTime);
    _validationMetrics.updateTotalDocumentsGauge(tableName,computeTotalDocumentInSegments(segmentMetadataList));
    _validationMetrics.updateSegmentCountGauge(tableName,segmentMetadataList.size());
  }
  LOGGER.info("Validation completed");
}
