{
  Preconditions.checkNotNull(indexDir);
  Preconditions.checkArgument(indexDir.exists(),"Index directory: {} does not exist",indexDir);
  Preconditions.checkArgument(indexDir.isDirectory(),"Index directory: {} is not a directory",indexDir);
  SegmentMetadataImpl metadata=new SegmentMetadataImpl(indexDir);
  SegmentVersion configuredVersionToLoad=getSegmentVersionToLoad(indexLoadingConfigMetadata);
  SegmentVersion metadataVersion=metadata.getSegmentVersion();
  if (shouldConvertFormat(metadataVersion,configuredVersionToLoad) && !targetFormatAlreadyExists(indexDir,configuredVersionToLoad)) {
    LOGGER.info("segment:{} needs to be converted from :{} to {} version.",indexDir.getName(),metadataVersion,configuredVersionToLoad);
    SegmentFormatConverter converter=SegmentFormatConverterFactory.getConverter(metadataVersion,configuredVersionToLoad);
    LOGGER.info("Using converter:{} to up-convert the format",converter.getClass().getName());
    converter.convert(indexDir);
    LOGGER.info("Successfully up-converted segment:{} from :{} to {} version.",indexDir.getName(),metadataVersion,configuredVersionToLoad);
  }
  File segmentDirectoryPath=SegmentDirectoryPaths.segmentDirectoryFor(indexDir,configuredVersionToLoad);
  metadata=new SegmentMetadataImpl(segmentDirectoryPath);
  try (SegmentPreProcessor preProcessor=new SegmentPreProcessor(segmentDirectoryPath,metadata,indexLoadingConfigMetadata)){
    preProcessor.process();
  }
   SegmentDirectory segmentDirectory=SegmentDirectory.createFromLocalFS(segmentDirectoryPath,metadata,readMode);
  Map<String,ColumnIndexContainer> indexContainerMap=new HashMap<String,ColumnIndexContainer>();
  for (  String column : metadata.getColumnMetadataMap().keySet()) {
    indexContainerMap.put(column,ColumnIndexContainer.init(segmentDirectory.createReader(),metadata.getColumnMetadataFor(column),indexLoadingConfigMetadata));
  }
  StarTree starTree=null;
  if (metadata.hasStarTree()) {
    File starTreeFile=new File(indexDir,V1Constants.STAR_TREE_INDEX_FILE);
    LOGGER.debug("Loading star tree index file {}",starTreeFile);
    starTree=StarTree.fromBytes(new FileInputStream(starTreeFile));
  }
  return new IndexSegmentImpl(segmentDirectory,metadata,indexContainerMap,starTree);
}
