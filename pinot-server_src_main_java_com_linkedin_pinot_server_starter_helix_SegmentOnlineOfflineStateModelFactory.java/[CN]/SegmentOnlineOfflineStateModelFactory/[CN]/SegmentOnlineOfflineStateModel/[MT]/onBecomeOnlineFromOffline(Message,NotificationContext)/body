{
  LOGGER.debug("SegmentOnlineOfflineStateModel.onBecomeOnlineFromOffline() : " + message);
  final String segmentId=message.getPartitionName();
  final String resourceName=message.getResourceName();
  final String pathToPropertyStore="/" + StringUtil.join("/",resourceName,segmentId);
  final ZNRecord record=context.getManager().getHelixPropertyStore().get(pathToPropertyStore,null,AccessOption.PERSISTENT);
  LOGGER.info("Trying to load segment : " + segmentId + " for resource : "+ resourceName);
  try {
    SegmentMetadata segmentMetadataForCheck=new SegmentMetadataImpl(record);
    SegmentMetadata segmentMetadataFromServer=INSTANCE_DATA_MANAGER.getSegmentMetadata(resourceName,segmentMetadataForCheck.getName());
    if (segmentMetadataFromServer == null) {
      LOGGER.info("Loading new segment - " + segmentMetadataForCheck.getName());
      final String localSegmentDir=new File(new File(INSTANCE_DATA_MANAGER.getSegmentDataDirectory(),resourceName),segmentId).toString();
      if (new File(localSegmentDir).exists()) {
        LOGGER.info("Cannot get segmentMetadata from Server will try to load from disk!");
        segmentMetadataFromServer=SEGMENT_METADATA_LOADER.loadIndexSegmentMetadataFromDir(localSegmentDir);
        INSTANCE_DATA_MANAGER.addSegment(segmentMetadataFromServer);
      }
    }
 else {
      if (isNewSegmentMetadata(segmentMetadataFromServer,segmentMetadataForCheck)) {
        LOGGER.info("Trying to refresh a segment with new data.");
        final String uri=record.getSimpleField(V1Constants.SEGMENT_DOWNLOAD_URL);
        final String localSegmentDir=downloadSegmentToLocal(uri,resourceName,segmentId);
        final SegmentMetadata segmentMetadata=SEGMENT_METADATA_LOADER.loadIndexSegmentMetadataFromDir(localSegmentDir);
        INSTANCE_DATA_MANAGER.addSegment(segmentMetadata);
      }
 else {
        LOGGER.info("Get already loaded segment again, will do nothing.");
      }
    }
  }
 catch (  final Exception e) {
    LOGGER.error("Cannot load segment : " + segmentId + "!\n",e);
  }
}
