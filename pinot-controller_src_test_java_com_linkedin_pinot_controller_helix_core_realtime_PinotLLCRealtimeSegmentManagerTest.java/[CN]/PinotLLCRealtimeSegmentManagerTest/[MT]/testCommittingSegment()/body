{
  FakePinotLLCRealtimeSegmentManager segmentManager=new FakePinotLLCRealtimeSegmentManager(true,null);
  final String topic="someTopic";
  final String rtTableName="table_REALTIME";
  final String rawTableName=TableNameBuilder.extractRawTableName(rtTableName);
  final int nInstances=6;
  final int nPartitions=16;
  final int nReplicas=3;
  final boolean existingIS=false;
  List<String> instances=getInstanceList(nInstances);
  final String startOffset=KAFKA_OFFSET;
  IdealState idealState=PinotTableIdealStateBuilder.buildEmptyKafkaConsumerRealtimeIdealStateFor(rtTableName,nReplicas);
  segmentManager.setupHelixEntries(topic,rtTableName,nPartitions,instances,nReplicas,startOffset,DUMMY_HOST,idealState,!existingIS);
  final int committingPartition=6;
  final long nextOffset=3425666L;
  LLCRealtimeSegmentZKMetadata committingSegmentMetadata=new LLCRealtimeSegmentZKMetadata(segmentManager._records.get(committingPartition));
  boolean status=segmentManager.commitSegment(rawTableName,committingSegmentMetadata.getSegmentName(),nextOffset);
  segmentManager.verifyMetadataInteractions();
  Assert.assertTrue(status);
  Assert.assertEquals(segmentManager._paths.size(),2);
  ZNRecord oldZnRec=segmentManager._records.get(0);
  ZNRecord newZnRec=segmentManager._records.get(1);
  LLCRealtimeSegmentZKMetadata oldMetadata=new LLCRealtimeSegmentZKMetadata(oldZnRec);
  LLCRealtimeSegmentZKMetadata newMetadata=new LLCRealtimeSegmentZKMetadata(newZnRec);
  LLCSegmentName oldSegmentName=new LLCSegmentName(oldMetadata.getSegmentName());
  LLCSegmentName newSegmentName=new LLCSegmentName(newMetadata.getSegmentName());
  Assert.assertEquals(oldSegmentName.getSegmentName(),committingSegmentMetadata.getSegmentName());
  Assert.assertEquals(newSegmentName.getPartitionId(),oldSegmentName.getPartitionId());
  Assert.assertEquals(newSegmentName.getSequenceNumber(),oldSegmentName.getSequenceNumber() + 1);
  Assert.assertEquals(oldMetadata.getStatus(),CommonConstants.Segment.Realtime.Status.DONE);
  Assert.assertEquals(newMetadata.getStatus(),CommonConstants.Segment.Realtime.Status.IN_PROGRESS);
  Assert.assertNotNull(oldMetadata.getDownloadUrl());
  Assert.assertEquals(Long.valueOf(oldMetadata.getCrc()),Long.valueOf(FakePinotLLCRealtimeSegmentManager.CRC));
  Assert.assertEquals(oldMetadata.getStartTime(),FakePinotLLCRealtimeSegmentManager.INTERVAL.getStartMillis());
  Assert.assertEquals(oldMetadata.getEndTime(),FakePinotLLCRealtimeSegmentManager.INTERVAL.getEndMillis());
  Assert.assertEquals(oldMetadata.getTotalRawDocs(),FakePinotLLCRealtimeSegmentManager.NUM_DOCS);
  Assert.assertEquals(oldMetadata.getIndexVersion(),FakePinotLLCRealtimeSegmentManager.SEGMENT_VERSION);
}
