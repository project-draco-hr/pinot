{
  int startPredictionIndex=-1;
  for (int i=0; i < inputTimeStamps.length; i++) {
    if (inputTimeStamps[i] > trainEnd) {
      startPredictionIndex=i;
      break;
    }
  }
  if (startPredictionIndex == -1) {
    return null;
  }
 else {
    int endPredictionIndex=startPredictionIndex + stepsAhead;
    if (endPredictionIndex > inputTimeStamps.length) {
      endPredictionIndex=inputTimeStamps.length;
    }
    return Arrays.copyOfRange(inputTimeSeries,startPredictionIndex,endPredictionIndex);
  }
}
