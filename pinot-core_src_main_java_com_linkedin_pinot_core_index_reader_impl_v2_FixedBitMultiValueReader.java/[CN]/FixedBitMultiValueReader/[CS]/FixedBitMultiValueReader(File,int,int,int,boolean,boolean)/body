{
  this.numDocs=numDocs;
  this.totalNumValues=totalNumValues;
  float averageValuesPerDoc=totalNumValues / numDocs;
  this.docsPerChunk=(int)(Math.ceil(PREFERRED_NUM_VALUES_PER_CHUNK / averageValuesPerDoc));
  LOGGER.info(" Loading multi value file:{} of size:{} totalDocs:{} totalNumOfEntries:{} docsPerChunk:{}",file.getName(),file.length(),numDocs,totalNumValues,docsPerChunk);
  this.numChunks=(numDocs + docsPerChunk - 1) / docsPerChunk;
  chunkOffsetHeaderSize=numChunks * SIZE_OF_INT * NUM_COLS_IN_HEADER;
  bitsetSize=(totalNumValues + 7) / 8;
  rawDataSize=SizeUtil.computeBytesRequired(totalNumValues,columnSizeInBits,SizeUtil.BIT_UNPACK_BATCH_SIZE);
  totalSize=chunkOffsetHeaderSize + bitsetSize + rawDataSize;
  raf=new RandomAccessFile(file,"rw");
  this.isMmap=isMmap;
  if (isMmap) {
    chunkOffsetsBuffer=MmapUtils.mmapFile(raf,FileChannel.MapMode.READ_WRITE,0,chunkOffsetHeaderSize,file,this.getClass().getSimpleName() + " chunkOffsetsBuffer");
    bitsetBuffer=MmapUtils.mmapFile(raf,FileChannel.MapMode.READ_WRITE,chunkOffsetHeaderSize,bitsetSize,file,this.getClass().getSimpleName() + " bitsetBuffer");
    rawDataBuffer=MmapUtils.mmapFile(raf,FileChannel.MapMode.READ_WRITE,chunkOffsetHeaderSize + bitsetSize,rawDataSize,file,this.getClass().getSimpleName() + " rawDataBuffer");
    chunkOffsetsReader=new FixedByteSingleValueMultiColReader(chunkOffsetsBuffer,numDocs,NUM_COLS_IN_HEADER,new int[]{SIZE_OF_INT});
    customBitSet=CustomBitSet.withByteBuffer(bitsetSize,bitsetBuffer);
    rawDataReader=FixedBitSingleValueReader.forByteBuffer(rawDataBuffer,totalNumValues,columnSizeInBits,signed);
  }
 else {
    chunkOffsetsBuffer=MmapUtils.allocateDirectByteBuffer(chunkOffsetHeaderSize,file,this.getClass().getSimpleName() + " chunkOffsetsBuffer");
    raf.getChannel().read(chunkOffsetsBuffer);
    chunkOffsetsReader=new FixedByteSingleValueMultiColReader(chunkOffsetsBuffer,numDocs,NUM_COLS_IN_HEADER,new int[]{SIZE_OF_INT});
    bitsetBuffer=MmapUtils.allocateDirectByteBuffer(bitsetSize,file,this.getClass().getSimpleName() + " bitsetBuffer");
    raf.getChannel().read(bitsetBuffer);
    customBitSet=CustomBitSet.withByteBuffer(bitsetSize,bitsetBuffer);
    rawDataBuffer=MmapUtils.allocateDirectByteBuffer(rawDataSize,file,this.getClass().getSimpleName() + " rawDataBuffer");
    raf.getChannel().read(rawDataBuffer);
    rawDataReader=FixedBitSingleValueReader.forByteBuffer(rawDataBuffer,totalNumValues,columnSizeInBits,signed);
    raf.close();
  }
}
