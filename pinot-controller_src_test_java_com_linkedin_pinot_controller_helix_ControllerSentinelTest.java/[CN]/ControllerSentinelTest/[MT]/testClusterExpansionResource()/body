{
  String tag="testExpansionResource";
  JSONObject payload=ControllerRequestBuilderUtil.buildCreateResourceJSON(tag,2,2);
  String res=sendPostRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forResourceCreate(),payload.toString());
  System.out.println(res);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,tag).size(),2);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_" + tag).size(),1);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfCopies")),2);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfDataInstances")),2);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfBrokerInstances")),1);
  payload=ControllerRequestBuilderUtil.buildUpdateDataResourceJSON(tag,4,3);
  res=sendPutRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forResourceCreate(),payload.toString());
  System.out.println(res);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,tag).size(),4);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_" + tag).size(),1);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfCopies")),3);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfDataInstances")),4);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfBrokerInstances")),1);
  payload=ControllerRequestBuilderUtil.buildUpdateDataResourceJSON(tag,6,5);
  res=sendPutRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forResourceCreate(),payload.toString());
  System.out.println(res);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,tag).size(),6);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_" + tag).size(),1);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfCopies")),5);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfDataInstances")),6);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfBrokerInstances")),1);
  payload=ControllerRequestBuilderUtil.buildUpdateBrokerResourceJSON(tag,2);
  res=sendPutRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forResourceCreate(),payload.toString());
  System.out.println(res);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,tag).size(),6);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_" + tag).size(),2);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfCopies")),5);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfDataInstances")),6);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfBrokerInstances")),2);
  payload=ControllerRequestBuilderUtil.buildUpdateBrokerResourceJSON(tag,4);
  res=sendPutRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forResourceCreate(),payload.toString());
  System.out.println(res);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,tag).size(),6);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_" + tag).size(),4);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfCopies")),5);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfDataInstances")),6);
  Assert.assertEquals(Integer.parseInt(HelixHelper.getResourceConfigsFor(HELIX_CLUSTER_NAME,tag,_helixAdmin).get("numberOfBrokerInstances")),4);
}
