{
  StringRepresentation presentation=null;
  try {
    final String resourceName=(String)getRequest().getAttributes().get("resourceName");
    if (resourceName == null) {
      final JSONObject ret=new JSONObject();
      final JSONArray retArray=new JSONArray();
      for (      final String resource : manager.getAllResourceNames()) {
        retArray.put(resource);
      }
      ret.put("resources",retArray);
      presentation=new StringRepresentation(ret.toString());
    }
 else {
      final JSONObject ret=new JSONObject();
      for (      final String resource : manager.getAllResourceNames()) {
        if (resource.equals(BrokerRequestUtils.getOfflineResourceNameForResource(resourceName))) {
          ret.put(BrokerRequestUtils.getOfflineResourceNameForResource(resourceName),manager.getOfflineDataResourceZKMetadata(BrokerRequestUtils.getOfflineResourceNameForResource(resourceName)));
        }
        if (resource.equals(BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName))) {
          ret.put(BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName),manager.getRealtimeDataResourceZKMetadata(BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName)));
        }
      }
      JSONObject resourceGetRet=new JSONObject();
      resourceGetRet.put(CommonConstants.Helix.DataSource.RESOURCE_NAME,resourceName);
      resourceGetRet.put("config",resourceName);
      presentation=new StringRepresentation(resourceGetRet.toString());
    }
  }
 catch (  final Exception e) {
    presentation=exceptionToStringRepresentation(e);
    logger.error("Caught exception while processing get request",e);
    setStatus(Status.SERVER_ERROR_INTERNAL);
  }
  return presentation;
}
