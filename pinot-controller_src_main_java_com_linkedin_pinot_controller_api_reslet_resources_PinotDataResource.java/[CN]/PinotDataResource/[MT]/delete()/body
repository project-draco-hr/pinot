{
  StringRepresentation presentation=null;
  try {
    final String resourceName=(String)getRequest().getAttributes().get("resourceName");
    String resourceRealtimeName=BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName);
    String offlineResourceName=BrokerRequestUtils.getOfflineResourceNameForResource(resourceName);
    String respString="";
    if (ZKMetadataProvider.getOfflineResourceZKMetadata(manager.getPropertyStore(),offlineResourceName) != null) {
      PinotResourceManagerResponse offlineResp=manager.deleteResource(offlineResourceName);
      respString+=offlineResp.toJSON().toString() + "\n";
    }
    if (ZKMetadataProvider.getRealtimeResourceZKMetadata(manager.getPropertyStore(),resourceRealtimeName) != null) {
      PinotResourceManagerResponse realtimeResp=manager.deleteResource(resourceRealtimeName);
      respString+=realtimeResp.toJSON().toString() + "\n";
    }
    if (respString.length() < 1) {
      respString="No related resource found.\n";
    }
    presentation=new StringRepresentation(respString);
  }
 catch (  final Exception e) {
    presentation=exceptionToStringRepresentation(e);
    LOGGER.error("Caught exception while processing delete request",e);
    setStatus(Status.SERVER_ERROR_INTERNAL);
  }
  return presentation;
}
