{
  StringRepresentation presentation=null;
  try {
    final String resourceName=(String)getRequest().getAttributes().get("resourceName");
    final String tableName=(String)getRequest().getAttributes().get("tableName");
    if (tableName == null) {
      String respString="";
      if (HelixHelper.getOfflineResourceZKMetadata(manager.getClusterZkClient(),BrokerRequestUtils.getOfflineResourceNameForResource(resourceName)) != null) {
        PinotResourceManagerResponse offlineResp=manager.deleteResource(BrokerRequestUtils.getOfflineResourceNameForResource(resourceName));
        respString+=offlineResp.toJSON().toString() + "\n";
      }
      if (HelixHelper.getRealtimeResourceZKMetadata(manager.getClusterZkClient(),BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName)) != null) {
        PinotResourceManagerResponse realtimeResp=manager.deleteResource(BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName));
        respString+=realtimeResp.toJSON().toString() + "\n";
      }
      if (respString.length() < 1) {
        respString="No related resource found.\n";
      }
      presentation=new StringRepresentation(respString);
    }
 else {
      String respString="";
      if (HelixHelper.getOfflineResourceZKMetadata(manager.getClusterZkClient(),BrokerRequestUtils.getOfflineResourceNameForResource(resourceName)) != null) {
        PinotResourceManagerResponse offlineResp=manager.handleRemoveTableFromDataResource(createTableDeletionDataResource(resourceName,tableName,ResourceType.OFFLINE.toString()));
        respString+=offlineResp.toJSON().toString() + "\n";
      }
      if (HelixHelper.getRealtimeResourceZKMetadata(manager.getClusterZkClient(),BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName)) != null) {
        PinotResourceManagerResponse realtimeResp=manager.handleRemoveTableFromDataResource(createTableDeletionDataResource(resourceName,tableName,ResourceType.REALTIME.toString()));
        respString+=realtimeResp.toJSON().toString() + "\n";
      }
      if (respString.length() < 1) {
        respString="No related resource found.\n";
      }
      presentation=new StringRepresentation(respString);
    }
  }
 catch (  final Exception e) {
    presentation=exceptionToStringRepresentation(e);
    logger.error("Caught exception while processing delete request",e);
    setStatus(Status.SERVER_ERROR_INTERNAL);
  }
  return presentation;
}
