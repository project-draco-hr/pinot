{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetSegmentId()).compareTo(other.isSetSegmentId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSegmentId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.segmentId,other.segmentId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNumDocsScanned()).compareTo(other.isSetNumDocsScanned());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumDocsScanned()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numDocsScanned,other.numDocsScanned);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimeUsedMs()).compareTo(other.isSetTimeUsedMs());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimeUsedMs()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timeUsedMs,other.timeUsedMs);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
