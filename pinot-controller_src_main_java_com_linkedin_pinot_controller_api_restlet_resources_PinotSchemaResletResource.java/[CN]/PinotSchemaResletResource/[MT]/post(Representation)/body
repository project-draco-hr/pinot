{
  Representation rep=null;
  File dataFile=null;
  try {
    final DiskFileItemFactory factory=new DiskFileItemFactory();
    final RestletFileUpload upload=new RestletFileUpload(factory);
    final List<FileItem> items;
    items=upload.parseRequest(getRequest());
    boolean found=false;
    for (final Iterator<FileItem> it=items.iterator(); it.hasNext() && !found; ) {
      final FileItem fi=it.next();
      if (fi.getFieldName() != null) {
        found=true;
        dataFile=new File(tempDir,fi.getFieldName() + "-" + System.currentTimeMillis());
        fi.write(dataFile);
      }
    }
    if (found) {
      Schema schema=Schema.fromFile(dataFile);
      try {
        manager.addSchema(schema);
        rep=new StringRepresentation(dataFile + " sucessfully added",MediaType.TEXT_PLAIN);
      }
 catch (      Exception e) {
        LOGGER.error("error adding schema ",e);
        rep=PinotSegmentUploadRestletResource.exceptionToStringRepresentation(e);
        LOGGER.error("Caught exception in file upload",e);
        setStatus(Status.SERVER_ERROR_INTERNAL);
      }
    }
 else {
      rep=new StringRepresentation("schema not added",MediaType.TEXT_PLAIN);
      LOGGER.warn("No file was uploaded");
      setStatus(Status.SERVER_ERROR_INTERNAL);
    }
  }
 catch (  final Exception e) {
    rep=PinotSegmentUploadRestletResource.exceptionToStringRepresentation(e);
    LOGGER.error("Caught exception in file upload",e);
    setStatus(Status.SERVER_ERROR_INTERNAL);
  }
  return rep;
}
