{
  AnomalyFunctionSpec anomalyFunctionSpec=anomalyFunctionDAO.findById(id);
  if (anomalyFunctionSpec == null) {
    throw new IllegalArgumentException("No function with id " + id);
  }
  if (!anomalyFunctionSpec.getIsActive()) {
    throw new IllegalStateException("Anomaly function spec with id " + id + " is not active");
  }
  String jobKey=getJobKey(anomalyFunctionSpec.getId(),anomalyFunctionSpec.getFunctionName());
  if (quartzScheduler.checkExists(JobKey.jobKey(jobKey))) {
    throw new IllegalStateException("Anomaly function with id " + id + " is already scheduled");
  }
  DetectionJobContext detectionJobContext=new DetectionJobContext();
  detectionJobContext.setAnomalyFunctionDAO(anomalyFunctionDAO);
  detectionJobContext.setAnomalyJobDAO(anomalyJobDAO);
  detectionJobContext.setAnomalyTaskDAO(anomalyTaskDAO);
  detectionJobContext.setAnomalyFunctionFactory(anomalyFunctionFactory);
  detectionJobContext.setAnomalyFunctionId(anomalyFunctionSpec.getId());
  detectionJobContext.setJobName(jobKey);
  scheduleJob(detectionJobContext,anomalyFunctionSpec);
}
