{
  Schema schema=new Schema();
  Set<String> transformDimensions=thirdeyeConfig.getTransformDimensions();
  for (  DimensionSpec dimensionSpec : thirdeyeConfig.getDimensions()) {
    FieldSpec fieldSpec=new DimensionFieldSpec();
    String dimensionName=dimensionSpec.getName();
    fieldSpec.setName(dimensionName);
    fieldSpec.setFieldType(FieldType.DIMENSION);
    fieldSpec.setDataType(DataType.STRING);
    fieldSpec.setSingleValueField(true);
    schema.addField(dimensionName,fieldSpec);
    if (transformDimensions.contains(dimensionName)) {
      fieldSpec=new DimensionFieldSpec();
      dimensionName=dimensionName + ThirdEyeConstants.RAW_DIMENSION_SUFFIX;
      fieldSpec.setName(dimensionName);
      fieldSpec.setFieldType(FieldType.DIMENSION);
      fieldSpec.setDataType(DataType.STRING);
      fieldSpec.setSingleValueField(true);
      schema.addField(dimensionName,fieldSpec);
    }
  }
  boolean countIncluded=false;
  for (  MetricSpec metricSpec : thirdeyeConfig.getMetrics()) {
    FieldSpec fieldSpec=new MetricFieldSpec();
    String metricName=metricSpec.getName();
    if (metricName.equals(ThirdEyeConstants.AUTO_METRIC_COUNT)) {
      countIncluded=true;
    }
    fieldSpec.setName(metricName);
    fieldSpec.setFieldType(FieldType.METRIC);
    fieldSpec.setDataType(DataType.valueOf(metricSpec.getType().toString()));
    fieldSpec.setSingleValueField(true);
    schema.addField(metricName,fieldSpec);
  }
  if (!countIncluded) {
    FieldSpec fieldSpec=new MetricFieldSpec();
    String metricName=ThirdEyeConstants.AUTO_METRIC_COUNT;
    fieldSpec.setName(metricName);
    fieldSpec.setFieldType(FieldType.METRIC);
    fieldSpec.setDataType(DataType.LONG);
    fieldSpec.setDefaultNullValue(1);
    schema.addField(metricName,fieldSpec);
  }
  TimeGranularitySpec incoming=new TimeGranularitySpec(DataType.LONG,thirdeyeConfig.getTime().getTimeGranularity().getSize(),thirdeyeConfig.getTime().getTimeGranularity().getUnit(),thirdeyeConfig.getTime().getColumnName());
  TimeGranularitySpec outgoing=new TimeGranularitySpec(DataType.LONG,thirdeyeConfig.getTime().getTimeGranularity().getSize(),thirdeyeConfig.getTime().getTimeGranularity().getUnit(),thirdeyeConfig.getTime().getColumnName());
  FieldSpec fieldSpec=new TimeFieldSpec(incoming,outgoing);
  fieldSpec.setFieldType(FieldType.TIME);
  schema.addField(thirdeyeConfig.getTime().getColumnName(),new TimeFieldSpec(incoming,outgoing));
  schema.setSchemaName(thirdeyeConfig.getCollection());
  return schema;
}
