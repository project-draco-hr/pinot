{
  final String pql=request.getString("pql");
  try {
    final long startTime=System.nanoTime();
    final JSONObject compiled=requestCompiler.compile(pql);
    final BrokerRequest brokerRequest=convertToBrokerRequest(compiled);
    brokerMetrics.addMeteredValue(brokerRequest,BrokerMeter.QUERIES,1);
    final long requestCompilationTime=System.nanoTime() - startTime;
    brokerMetrics.addPhaseTiming(brokerRequest,BrokerQueryPhase.REQUEST_COMPILATION,requestCompilationTime);
    final BrokerResponse resp=brokerMetrics.timePhase(brokerRequest,BrokerQueryPhase.QUERY_EXECUTION,new Callable<BrokerResponse>(){
      @Override public BrokerResponse call() throws Exception {
        final BucketingSelection bucketingSelection=getBucketingSelection(brokerRequest);
        return (BrokerResponse)broker.processBrokerRequest(brokerRequest,bucketingSelection);
      }
    }
);
    LOGGER.info("Broker Response : " + resp);
    return resp;
  }
 catch (  RecognitionException re) {
    LOGGER.warn("Malformed or unrecognized query " + pql,re);
    brokerMetrics.addMeteredValue(null,BrokerMeter.REQUEST_COMPILATION_EXCEPTIONS,1);
    throw re;
  }
}
