def add_anomaly_results_subparser(subparsers):
    ' GET <id>, GET <collection> <start> [<end>], POST <data>, DELETE <id> '
    results = subparsers.add_parser('results', help='anomaly results')
    results_subparser = results.add_subparsers()
    find_parser = results_subparser.add_parser('find', help='find an anomaly result')
    find_parser.add_argument('inps', type=int, nargs='+', help='result ids', metavar='ids')
    find_parser.set_defaults(func=find_anomaly_result)
    show_by_collection_parser = results_subparser.add_parser('show_by_collection', help='show anomaly results for a collection + time frame')
    show_by_collection_parser.add_argument('collection', help='thirdeye collection')
    show_by_collection_parser.add_argument('--start', help='start time in IS08601 or as daysago(#), default=daysago(7)', required=False, default=convert_to_iso('daysago(7)'))
    show_by_collection_parser.add_argument('--end', help='end time in IS08601 or as daysago(#)', required=False)
    show_by_collection_parser.set_defaults(func=show_anomaly_results_for_collection)
    show_by_function_parser = results_subparser.add_parser('show_by_function', help='show anomaly results for a set of function ids + time frame')
    show_by_function_parser.add_argument('inps', type=int, nargs='+', help='thirdeye function ids', metavar='ids')
    show_by_function_parser.add_argument('--start', help='start time in IS08601 or as daysago(#), default=daysago(7)', required=False, default=convert_to_iso('daysago(7)'))
    show_by_function_parser.add_argument('--end', help='end time in IS08601 or as daysago(#)', required=False)
    show_by_function_parser.set_defaults(func=show_anomaly_results_for_function)
