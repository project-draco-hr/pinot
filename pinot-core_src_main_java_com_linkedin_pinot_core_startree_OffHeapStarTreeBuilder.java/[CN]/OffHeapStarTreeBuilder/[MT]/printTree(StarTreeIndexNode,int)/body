{
  for (int i=0; i < level; i++) {
    LOG.debug("  ");
  }
  BiMap<Integer,String> inverse=dimensionNameToIndexMap.inverse();
  String dimName="ALL";
  Object dimValue="ALL";
  if (node.getDimensionName() != StarTreeIndexNodeInterf.ALL) {
    dimName=inverse.get(node.getDimensionName());
  }
  if (node.getDimensionValue() != StarTreeIndexNodeInterf.ALL) {
    dimValue=dictionaryMap.get(dimName).inverse().get(node.getDimensionValue());
  }
  String formattedOutput=Objects.toStringHelper(node).add("nodeId",node.getNodeId()).add("level",level).add("dimensionName",dimName).add("dimensionValue",dimValue).add("childDimensionName",inverse.get(node.getChildDimensionName())).add("childCount",node.getNumChildren()).add("startDocumentId",node.getStartDocumentId()).add("endDocumentId",node.getEndDocumentId()).add("documentCount",(node.getEndDocumentId() - node.getStartDocumentId())).toString();
  LOG.debug(formattedOutput);
  if (!node.isLeaf()) {
    Iterator<StarTreeIndexNode> childrenIterator=node.getChildrenIterator();
    while (childrenIterator.hasNext()) {
      printTree(childrenIterator.next(),level + 1);
    }
  }
}
