{
  super.init(spec);
  Properties props=getProperties();
  this.seasonal=Integer.valueOf(props.getProperty(SEASONAL,PROP_DEFAULT_SEASONAL));
  this.maxWindowLength=Integer.valueOf(props.getProperty(MAX_WINDOW_LENGTH,PROP_DEFAULT_MAX_WINDOW_LEN));
  this.numSimulations=Integer.valueOf(props.getProperty(NUM_SIMULATIONS,PROP_DEFAULT_NUM_SIMULATIONS));
  this.minWindowLength=Integer.valueOf(props.getProperty(MIN_WINDOW_LENGTH,PROP_DEFAULT_MIN_WINDOW_LEN));
  this.pValueThreshold=Double.valueOf(props.getProperty(P_VALUE_THRESHOLD,PROP_DEFAULT_P_VALUE_THRESHOLD));
  this.pattern=ScanStatistics.Pattern.valueOf(props.getProperty(PATTERN));
  this.minIncrement=Integer.valueOf(props.getProperty(MIN_INCREMENT,PROP_DEFAULT_MIN_INCREMENT));
  this.bootstrap=Boolean.valueOf(props.getProperty(BOOTSTRAP,PROP_DEFAULT_BOOTSTRAP));
  this.stlTrendBandwidth=Double.valueOf(props.getProperty(STL_TREND_BANDWIDTH,PROP_DEFAULT_STL_TREND_BANDWIDTH));
  this.monitoringWindow=Integer.valueOf(props.getProperty(MONITORING_WINDOW,PROP_DEFAULT_MONITORING_WINDOW_SIZE));
}
