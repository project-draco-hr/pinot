{
  long startTimeUtc=monitoringTimestamps[anomalousInterval.lowerEndpoint()];
  long endTimeUtc=monitoringTimestamps[anomalousInterval.upperEndpoint() - 1];
  List<AnomalyResult> anomalyResults=new ArrayList<AnomalyResult>();
  Properties startProperties=new Properties();
  startProperties.setProperty("anomalyStart",new DateTime(startTimeUtc,DateTimeZone.UTC).toString());
  startProperties.setProperty("anomalyEnd",new DateTime(endTimeUtc,DateTimeZone.UTC).toString());
  startProperties.setProperty("bound","START");
  AnomalyResult startResult=new AnomalyResult();
  startResult.setScore(pValueThreshold);
  startResult.setProperties(AnomalyResult.encodeCompactedProperties(startProperties));
  startResult.setWeight(averageValue);
  startResult.setStartTimeUtc(startTimeUtc);
  startResult.setEndTimeUtc(endTimeUtc);
  startResult.setCollection(getSpec().getCollection());
  startResult.setDimensions(CSV.join(dimensionKey.getDimensionValues()));
  startResult.setFunctionId(getSpec().getId());
  startResult.setMetric(getSpec().getMetric());
  anomalyResults.add(startResult);
  return anomalyResults;
}
