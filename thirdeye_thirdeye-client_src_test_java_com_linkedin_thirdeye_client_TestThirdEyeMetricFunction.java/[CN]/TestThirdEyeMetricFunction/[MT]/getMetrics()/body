{
  ThirdEyeMetricFunction function=new ThirdEyeMetricFunction(DEFAULT_GRANULARITY,DEFAULT_METRICS);
  List<Expression> metricExpressions=function.getMetricExpressions();
  Assert.assertEquals(DEFAULT_METRICS.size(),metricExpressions.size());
  for (int i=0; i < DEFAULT_METRICS.size(); i++) {
    String defaultMetric=DEFAULT_METRICS.get(i);
    Expression expression=metricExpressions.get(i);
    if (defaultMetric.startsWith(ThirdEyeMetricFunction.Expression.RATIO)) {
      Assert.assertFalse(expression.isAtomic());
      Assert.assertEquals("RATIO",expression.getFunctionName());
      List<String> args=expression.getArguments();
      Assert.assertEquals(2,args.size());
      Assert.assertEquals(defaultMetric,String.format("RATIO(%s,%s)",args.get(0),args.get(1)));
    }
 else {
      Assert.assertTrue(expression.isAtomic());
      Assert.assertEquals(defaultMetric,expression.getAtomicValue());
    }
  }
}
