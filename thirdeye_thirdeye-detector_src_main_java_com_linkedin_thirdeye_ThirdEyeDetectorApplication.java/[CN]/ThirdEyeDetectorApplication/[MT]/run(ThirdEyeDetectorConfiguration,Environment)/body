{
  final AnomalyFunctionSpecDAO anomalyFunctionSpecDAO=new AnomalyFunctionSpecDAO(hibernate.getSessionFactory());
  final AnomalyResultDAO anomalyResultDAO=new AnomalyResultDAO(hibernate.getSessionFactory());
  final ContextualEventDAO contextualEventDAO=new ContextualEventDAO(hibernate.getSessionFactory());
  final EmailConfigurationDAO emailConfigurationDAO=new EmailConfigurationDAO(hibernate.getSessionFactory());
  final ThirdEyeClient thirdEyeClient=new DefaultThirdEyeClient(config.getThirdEyeHost(),config.getThirdEyePort());
  environment.lifecycle().manage(new Managed(){
    @Override public void start() throws Exception {
    }
    @Override public void stop() throws Exception {
      thirdEyeClient.close();
    }
  }
);
  SchedulerFactory schedulerFactory=new StdSchedulerFactory();
  final Scheduler quartzScheduler=schedulerFactory.getScheduler();
  environment.lifecycle().manage(new Managed(){
    @Override public void start() throws Exception {
      quartzScheduler.start();
    }
    @Override public void stop() throws Exception {
      quartzScheduler.shutdown();
    }
  }
);
  final AnomalyDetectionJobManager jobManager=new AnomalyDetectionJobManager(quartzScheduler,thirdEyeClient,anomalyFunctionSpecDAO,anomalyResultDAO,hibernate.getSessionFactory(),environment.metrics());
  environment.lifecycle().manage(new Managed(){
    @Override public void start() throws Exception {
      new HibernateSessionWrapper<Void>(hibernate.getSessionFactory()).execute(new Callable<Void>(){
        @Override public Void call() throws Exception {
          List<AnomalyFunctionSpec> functions;
          functions=anomalyFunctionSpecDAO.findAll();
          for (          AnomalyFunctionSpec function : functions) {
            if (function.isActive()) {
              jobManager.start(function.getId());
              LOG.info("Starting {}",function);
            }
          }
          return null;
        }
      }
);
    }
    @Override public void stop() throws Exception {
    }
  }
);
  final EmailReportJobManager emailReportJobManager=new EmailReportJobManager(quartzScheduler,emailConfigurationDAO,anomalyResultDAO,hibernate.getSessionFactory());
  environment.lifecycle().manage(new Managed(){
    @Override public void start() throws Exception {
      new HibernateSessionWrapper<Void>(hibernate.getSessionFactory()).execute(new Callable<Void>(){
        @Override public Void call() throws Exception {
          emailReportJobManager.start();
          return null;
        }
      }
);
    }
    @Override public void stop() throws Exception {
      new HibernateSessionWrapper<Void>(hibernate.getSessionFactory()).execute(new Callable<Void>(){
        @Override public Void call() throws Exception {
          emailReportJobManager.stop();
          return null;
        }
      }
);
    }
  }
);
  environment.jersey().register(new AnomalyFunctionSpecResource(anomalyFunctionSpecDAO));
  environment.jersey().register(new AnomalyResultResource(anomalyResultDAO));
  environment.jersey().register(new ContextualEventResource(contextualEventDAO));
  environment.jersey().register(new MetricsGraphicsTimeSeriesResource(thirdEyeClient,anomalyResultDAO));
  environment.jersey().register(new AnomalyDetectionJobResource(jobManager,anomalyFunctionSpecDAO));
  environment.jersey().register(new EmailConfigurationResource(emailConfigurationDAO));
  environment.admin().addTask(new EmailReportJobManagerTask(emailReportJobManager,hibernate.getSessionFactory()));
}
