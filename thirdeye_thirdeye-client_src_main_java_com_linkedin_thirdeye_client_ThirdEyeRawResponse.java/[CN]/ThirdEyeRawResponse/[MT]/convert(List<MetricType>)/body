{
  List<MetricType> filteredMetricTypes=new ArrayList<>(metricTypes);
  for (int i=0; i < filteredMetricTypes.size(); i++) {
    MetricType metricType=filteredMetricTypes.get(i);
    if (metricType == null) {
      filteredMetricTypes.set(i,MetricType.DOUBLE);
    }
  }
  MetricSchema metricSchema=new MetricSchema(metrics,filteredMetricTypes);
  Map<DimensionKey,MetricTimeSeries> converted=new HashMap<>();
  for (  Map.Entry<String,Map<String,Number[]>> entry : data.entrySet()) {
    String dimensionString=entry.getKey();
    List<String> dimensionValues=OBJECT_MAPPER.readValue(dimensionString,LIST_TYPE_REF);
    String[] valueArray=new String[dimensionValues.size()];
    dimensionValues.toArray(valueArray);
    DimensionKey dimensionKey=new DimensionKey(valueArray);
    MetricTimeSeries timeSeries=new MetricTimeSeries(metricSchema);
    for (    Map.Entry<String,Number[]> point : entry.getValue().entrySet()) {
      Long time=Long.valueOf(point.getKey());
      for (int i=0; i < metrics.size(); i++) {
        String metricName=metrics.get(i);
        Number metricValue=point.getValue()[i];
        timeSeries.increment(time,metricName,metricValue);
      }
    }
    converted.put(dimensionKey,timeSeries);
  }
  return converted;
}
