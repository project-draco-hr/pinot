{
  BrokerRequest brokerRequest=getAggregationGroupByWithFilterBrokerRequest();
  brokerRequest.getGroupBy().getColumns().clear();
  brokerRequest.getGroupBy().getColumns().add("dim0");
  brokerRequest.getGroupBy().getColumns().add("dim1");
  PlanMaker instancePlanMaker=new InstancePlanMakerImplV2();
  PlanNode rootPlanNode=instancePlanMaker.makeInnerSegmentPlan(_indexSegment,brokerRequest);
  rootPlanNode.showTree("");
  IntermediateResultsBlock resultBlock=(IntermediateResultsBlock)rootPlanNode.run().nextBlock();
  LOGGER.debug("RunningTime: {}",resultBlock.getTimeUsedMs());
  LOGGER.debug("NumDocsScanned: {}",resultBlock.getNumDocsScanned());
  LOGGER.debug("TotalDocs: {}",resultBlock.getTotalRawDocs());
  List<Map<String,Serializable>> combinedGroupByResult=resultBlock.getAggregationGroupByOperatorResult();
  for (int i=0; i < combinedGroupByResult.size(); ++i) {
    LOGGER.debug("function: {}",brokerRequest.getAggregationsInfo().get(i));
    for (    String keyString : combinedGroupByResult.get(i).keySet()) {
      LOGGER.debug("grouped key: {}, value: {}",keyString,combinedGroupByResult.get(i).get(keyString));
    }
  }
}
