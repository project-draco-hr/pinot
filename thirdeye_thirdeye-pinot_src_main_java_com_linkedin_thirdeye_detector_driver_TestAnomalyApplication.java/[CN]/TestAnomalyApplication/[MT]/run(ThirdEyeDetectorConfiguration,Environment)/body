{
  final AnomalyResultDAO anomalyResultDAO=new AnomalyResultDAO(hibernate.getSessionFactory());
  SchedulerFactory schedulerFactory=new StdSchedulerFactory();
  final Scheduler quartzScheduler=schedulerFactory.getScheduler();
  quartzScheduler.start();
  final ThirdEyeClient thirdEyeClient=PinotThirdEyeClient.getDefaultTestClient();
  QueryCache queryCache=new QueryCache(thirdEyeClient,Executors.newFixedThreadPool(10));
  environment.lifecycle().manage(new Managed(){
    @Override public void start() throws Exception {
    }
    @Override public void stop() throws Exception {
      thirdEyeClient.close();
    }
  }
);
  if (testType == TestType.FUNCTION) {
    int existingFunctionId=this.impersonatedId;
    final AnomalyFunctionSpecDAO anomalyFunctionSpecDAO=new AnomalyFunctionSpecDAO(hibernate.getSessionFactory());
    final AnomalyFunctionRelationDAO anomalyFunctionRelationDAO=new AnomalyFunctionRelationDAO(hibernate.getSessionFactory());
    final TimeSeriesHandler timeSeriesHandler=new TimeSeriesHandler(queryCache);
    TimeSeriesResponseConverter timeSeriesResponseConverter=TimeSeriesResponseConverter.getInstance();
    final AnomalyFunctionFactory anomalyFunctionFactory=new AnomalyFunctionFactory(config.getFunctionConfigPath());
    final AnomalyDetectionJobManager jobManager=new AnomalyDetectionJobManager(quartzScheduler,timeSeriesHandler,timeSeriesResponseConverter,anomalyFunctionSpecDAO,anomalyFunctionRelationDAO,anomalyResultDAO,hibernate.getSessionFactory(),environment.metrics(),anomalyFunctionFactory);
    jobManager.runAdhocFile(filePath,existingFunctionId,startISO,endISO);
  }
 else   if (testType == TestType.EMAIL) {
    final TimeOnTimeComparisonHandler timeOnTimeComparisonHandler=new TimeOnTimeComparisonHandler(queryCache);
    final EmailConfigurationDAO emailConfigurationDAO=new EmailConfigurationDAO(hibernate.getSessionFactory());
    final EmailReportJobManager emailReportJobManager=new EmailReportJobManager(quartzScheduler,emailConfigurationDAO,anomalyResultDAO,hibernate.getSessionFactory(),new AtomicInteger(-1),timeOnTimeComparisonHandler);
    emailReportJobManager.runAdhocFile(filePath);
  }
 else {
    throw new IllegalArgumentException("Unknown test type: " + testType);
  }
  Thread.sleep(1000);
  quartzScheduler.shutdown(true);
  Thread.sleep(1000);
  System.exit(0);
}
