{
  Predicate predicate=getPredicate();
  final SortedInvertedIndexReader invertedIndex=(SortedInvertedIndexReader)dataSource.getInvertedIndex();
  Dictionary dictionary=dataSource.getDictionary();
  DataSourceMetadata dataSourceMetadata=dataSource.getDataSourceMetadata();
  List<Pair<Integer,Integer>> pairs=new ArrayList<Pair<Integer,Integer>>();
  PredicateEvaluator evaluator=PredicateEvaluatorProvider.getPredicateFunctionFor(predicate,dictionary);
  int[] dictionaryIds=evaluator.getDictionaryIds();
  for (int i=0; i < dictionaryIds.length; i++) {
    int[] minMax=invertedIndex.getMinMaxRangeFor(dictionaryIds[i]);
    pairs.add(ImmutablePair.of(minMax[0],minMax[1]));
  }
  LOGGER.info("Creating a Sorted Block with pairs: {}",pairs);
  sortedBlock=new SortedBlock(pairs);
  return sortedBlock;
}
