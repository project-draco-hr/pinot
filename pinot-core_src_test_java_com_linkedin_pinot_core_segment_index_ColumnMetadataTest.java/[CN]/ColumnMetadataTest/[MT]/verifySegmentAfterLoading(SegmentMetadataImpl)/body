{
  ColumnMetadata col7Meta=metadata.getColumnMetadataFor("column7");
  Assert.assertEquals(col7Meta.getColumnName(),"column7");
  Assert.assertEquals(col7Meta.getCardinality(),359);
  Assert.assertEquals(col7Meta.getTotalDocs(),100000);
  Assert.assertEquals(col7Meta.getTotalRawDocs(),100000);
  Assert.assertEquals(col7Meta.getTotalAggDocs(),0);
  Assert.assertEquals(col7Meta.getDataType(),FieldSpec.DataType.INT);
  Assert.assertEquals(col7Meta.getBitsPerElement(),9);
  Assert.assertEquals(col7Meta.getStringColumnMaxLength(),0);
  Assert.assertEquals(col7Meta.getFieldType(),FieldSpec.FieldType.DIMENSION);
  Assert.assertFalse(col7Meta.isSorted());
  Assert.assertFalse(col7Meta.hasNulls());
  Assert.assertTrue(col7Meta.hasDictionary());
  Assert.assertTrue(col7Meta.hasInvertedIndex());
  Assert.assertFalse(col7Meta.isSingleValue());
  Assert.assertEquals(col7Meta.getMaxNumberOfMultiValues(),24);
  Assert.assertEquals(col7Meta.getTotalNumberOfEntries(),134090);
  Assert.assertFalse(col7Meta.isAutoGenerated());
  Assert.assertEquals(col7Meta.getDefaultNullValueString(),String.valueOf(Integer.MIN_VALUE));
  ColumnMetadata col3Meta=metadata.getColumnMetadataFor("column3");
  Assert.assertEquals(col3Meta.getColumnName(),"column3");
  Assert.assertEquals(col3Meta.getCardinality(),5);
  Assert.assertEquals(col3Meta.getTotalDocs(),100000);
  Assert.assertEquals(col3Meta.getTotalRawDocs(),100000);
  Assert.assertEquals(col3Meta.getTotalAggDocs(),0);
  Assert.assertEquals(col3Meta.getDataType(),FieldSpec.DataType.STRING);
  Assert.assertEquals(col3Meta.getBitsPerElement(),3);
  Assert.assertEquals(col3Meta.getStringColumnMaxLength(),4);
  Assert.assertEquals(col3Meta.getFieldType(),FieldSpec.FieldType.DIMENSION);
  Assert.assertFalse(col3Meta.isSorted());
  Assert.assertFalse(col3Meta.hasNulls());
  Assert.assertTrue(col3Meta.hasDictionary());
  Assert.assertTrue(col3Meta.hasInvertedIndex());
  Assert.assertTrue(col3Meta.isSingleValue());
  Assert.assertEquals(col3Meta.getMaxNumberOfMultiValues(),0);
  Assert.assertEquals(col3Meta.getTotalNumberOfEntries(),100000);
  Assert.assertFalse(col3Meta.isAutoGenerated());
  Assert.assertEquals(col3Meta.getDefaultNullValueString(),"null");
  ColumnMetadata timeColumn=metadata.getColumnMetadataFor("daysSinceEpoch");
  Assert.assertEquals(timeColumn.getColumnName(),"daysSinceEpoch");
  Assert.assertEquals(timeColumn.getCardinality(),1);
  Assert.assertEquals(timeColumn.getTotalDocs(),100000);
  Assert.assertEquals(timeColumn.getTotalRawDocs(),100000);
  Assert.assertEquals(timeColumn.getTotalAggDocs(),0);
  Assert.assertEquals(timeColumn.getDataType(),FieldSpec.DataType.INT);
  Assert.assertEquals(timeColumn.getBitsPerElement(),1);
  Assert.assertEquals(timeColumn.getStringColumnMaxLength(),0);
  Assert.assertEquals(timeColumn.getFieldType(),FieldSpec.FieldType.DIMENSION);
  Assert.assertTrue(timeColumn.isSorted());
  Assert.assertFalse(timeColumn.hasNulls());
  Assert.assertTrue(timeColumn.hasDictionary());
  Assert.assertTrue(timeColumn.hasInvertedIndex());
  Assert.assertTrue(timeColumn.isSingleValue());
  Assert.assertEquals(timeColumn.getMaxNumberOfMultiValues(),0);
  Assert.assertEquals(timeColumn.getTotalNumberOfEntries(),100000);
  Assert.assertFalse(timeColumn.isAutoGenerated());
  Assert.assertEquals(timeColumn.getDefaultNullValueString(),String.valueOf(Integer.MIN_VALUE));
}
