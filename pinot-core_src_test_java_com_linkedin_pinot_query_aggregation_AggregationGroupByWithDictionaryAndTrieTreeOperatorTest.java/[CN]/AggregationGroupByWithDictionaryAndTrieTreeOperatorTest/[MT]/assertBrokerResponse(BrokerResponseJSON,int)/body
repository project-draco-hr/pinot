{
  Assert.assertEquals(_numAggregations,brokerResponse.getAggregationResults().size());
  for (int i=0; i < _numAggregations; ++i) {
    Assert.assertEquals("[\"column11\",\"column10\"]",brokerResponse.getAggregationResults().get(i).getJSONArray("groupByColumns").toString());
    Assert.assertEquals(groupSize,brokerResponse.getAggregationResults().get(i).getJSONArray("groupByResult").length());
  }
  Assert.assertEquals("count_star",brokerResponse.getAggregationResults().get(0).getString("function").toString());
  Assert.assertEquals("sum_met_impressionCount",brokerResponse.getAggregationResults().get(1).getString("function").toString());
  Assert.assertEquals("max_met_impressionCount",brokerResponse.getAggregationResults().get(2).getString("function").toString());
  Assert.assertEquals("min_met_impressionCount",brokerResponse.getAggregationResults().get(3).getString("function").toString());
  Assert.assertEquals("avg_met_impressionCount",brokerResponse.getAggregationResults().get(4).getString("function").toString());
  Assert.assertEquals("distinctCount_column12",brokerResponse.getAggregationResults().get(5).getString("function").toString());
}
