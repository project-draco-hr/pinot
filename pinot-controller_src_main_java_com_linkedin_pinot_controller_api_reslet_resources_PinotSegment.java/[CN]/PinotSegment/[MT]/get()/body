{
  StringRepresentation presentation=null;
  try {
    final String resourceName=(String)getRequest().getAttributes().get("resourceName");
    final String tableName=(String)getRequest().getAttributes().get("tableName");
    final String segmentName=(String)getRequest().getAttributes().get("segmentName");
    if (resourceName != null && segmentName == null) {
      final JSONArray segmentsArray=new JSONArray();
      final JSONObject ret=new JSONObject();
      ret.put("resource",resourceName);
      if (tableName == null) {
        for (        final String segmentId : manager.getAllSegmentsForResource(resourceName)) {
          segmentsArray.put(segmentId);
        }
      }
 else {
        for (        final String segmentId : manager.getAllSegmentsForTable(resourceName,tableName)) {
          segmentsArray.put(segmentId);
        }
      }
      ret.put("segments",segmentsArray);
      presentation=new StringRepresentation(ret.toString());
    }
 else {
      final JSONObject medata=new JSONObject();
      try {
        OfflineSegmentZKMetadata offlineSegmentZKMetadata=ZKMetadataProvider.getOfflineSegmentZKMetadata(manager.getPropertyStore(),BrokerRequestUtils.getOfflineResourceNameForResource(resourceName),segmentName);
        for (        final String key : offlineSegmentZKMetadata.toMap().keySet()) {
          medata.put(key,offlineSegmentZKMetadata.toMap().get(key));
        }
        final JSONObject ret=new JSONObject();
        ret.put("segmentName",segmentName);
        ret.put("segmentType","OFFLINE");
        ret.put("metadata",medata);
        presentation=new StringRepresentation(ret.toString());
      }
 catch (      Exception e) {
        logger.warn("Caught exception while fetching offline segment metadata",e);
        presentation=null;
      }
      try {
        if (presentation == null) {
          RealtimeSegmentZKMetadata realtimeSegmentZKMetadata=ZKMetadataProvider.getRealtimeSegmentZKMetadata(manager.getPropertyStore(),BrokerRequestUtils.getRealtimeResourceNameForResource(resourceName),segmentName);
          for (          final String key : realtimeSegmentZKMetadata.toMap().keySet()) {
            medata.put(key,realtimeSegmentZKMetadata.toMap().get(key));
          }
          final JSONObject ret=new JSONObject();
          ret.put("segmentName",segmentName);
          ret.put("segmentType","REALTIME");
          ret.put("metadata",medata);
          presentation=new StringRepresentation(ret.toString());
        }
      }
 catch (      Exception e) {
        logger.warn("Caught exception while fetching realtime segment metadata",e);
        throw new RuntimeException("Cannot get matched segment from realtime and offline data resource!",e);
      }
    }
  }
 catch (  final Exception e) {
    presentation=new StringRepresentation(e.getMessage() + "\n" + ExceptionUtils.getStackTrace(e));
    logger.error("Caught exception while processing get request",e);
    setStatus(Status.SERVER_ERROR_INTERNAL);
  }
  return presentation;
}
