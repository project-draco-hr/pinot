{
  File tempSegmentFile=null;
  File tempFile=null;
  try {
    tempSegmentFile=new File(_dataManager.getSegmentFileDirectory() + "/" + tableName+ "/temp_"+ segmentId+ "_"+ System.currentTimeMillis());
    tempFile=new File(_dataManager.getSegmentFileDirectory(),segmentId + ".tar.gz");
    SegmentFetcherFactory.getSegmentFetcherBasedOnURI(uri).fetchSegmentToLocal(uri,tempFile);
    LOGGER.info("Downloaded file from {} to {}; Length of downloaded file: {}; segmentName: {}; table: {}",uri,tempFile,tempFile.length(),segmentId,tableName);
    LOGGER.info("Trying to uncompress segment tar file from {} to {} for table {}",tempFile,tempSegmentFile,tableName);
    TarGzCompressionUtils.unTar(tempFile,tempSegmentFile);
    FileUtils.deleteQuietly(tempFile);
    final File segmentDir=new File(new File(_dataManager.getSegmentDataDirectory(),tableName),segmentId);
    Thread.sleep(1000);
    if (segmentDir.exists()) {
      LOGGER.info("Deleting the directory {} and recreating it again table {} ",segmentDir.getAbsolutePath(),tableName);
      FileUtils.deleteDirectory(segmentDir);
    }
    LOGGER.info("Move the dir - " + tempSegmentFile.listFiles()[0] + " to "+ segmentDir.getAbsolutePath()+ " for "+ segmentId+ " of table "+ tableName);
    FileUtils.moveDirectory(tempSegmentFile.listFiles()[0],segmentDir);
    FileUtils.deleteDirectory(tempSegmentFile);
    Thread.sleep(1000);
    LOGGER.info("Was able to succesfully rename the dir to match the segment {} for table {}",segmentId,tableName);
    new File(segmentDir,"finishedLoading").createNewFile();
    return segmentDir.getAbsolutePath();
  }
 catch (  Exception e) {
    FileUtils.deleteQuietly(tempSegmentFile);
    FileUtils.deleteQuietly(tempFile);
    LOGGER.error("Caught exception downloading segment {} for table {}",segmentId,tableName,e);
    Utils.rethrowException(e);
    throw new AssertionError("Should not reach this");
  }
}
