{
  if (connectionPool == null) {
    LOGGER.info("init hasn't been called yet on the live instances listener...");
    return;
  }
  LOGGER.info("Connection pool found, moving on...");
  for (  LiveInstance instance : liveInstances) {
    LOGGER.info("working on instance : " + instance.getInstanceName());
    String instanceId=instance.getInstanceName();
    String sessionId=instance.getSessionId();
    if (instanceId.startsWith("Broker_")) {
      LOGGER.info("skipping broker instances {}",instanceId);
      continue;
    }
    LOGGER.info("found instance Id : {} with session Id : {}",instanceId,sessionId);
    String namePortStr=instanceId.split("Server_")[1];
    String hostName=namePortStr.split("_")[0];
    int port;
    try {
      port=Integer.parseInt(namePortStr.split("_")[1]);
    }
 catch (    Exception e) {
      port=CommonConstants.Helix.DEFAULT_SERVER_NETTY_PORT;
    }
    ServerInstance ins=new ServerInstance(hostName,port);
    if (liveInstanceToSessionIdMap.containsKey(instanceId)) {
      if (!sessionId.equals(liveInstanceToSessionIdMap.get(instanceId))) {
        try {
          KeyedFuture<ServerInstance,NettyClientConnection> c=connectionPool.checkoutObject(ins);
          for (          Map.Entry<ServerInstance,NettyClientConnection> entry : c.get().entrySet()) {
            if (!entry.getValue().validate()) {
              connectionPool.destroyObject(ins,entry.getValue());
            }
          }
          liveInstanceToSessionIdMap.put(instanceId,sessionId);
        }
 catch (        Exception e) {
          LOGGER.error("error trying to destroy dead connections : {} ",e);
        }
      }
    }
 else {
      try {
        KeyedFuture<ServerInstance,NettyClientConnection> c=connectionPool.checkoutObject(ins);
        NettyClientConnection conn=c.getOne(timeout,TimeUnit.MILLISECONDS);
        if (conn != null) {
          if (!conn.validate()) {
            for (            Map.Entry<ServerInstance,NettyClientConnection> entry : c.get().entrySet()) {
              if (!entry.getValue().validate()) {
                connectionPool.destroyObject(ins,entry.getValue());
              }
            }
          }
          liveInstanceToSessionIdMap.put(instanceId,sessionId);
        }
      }
 catch (      Exception e) {
        LOGGER.error("error trying to destroy dead connections : {}",e);
      }
    }
  }
}
