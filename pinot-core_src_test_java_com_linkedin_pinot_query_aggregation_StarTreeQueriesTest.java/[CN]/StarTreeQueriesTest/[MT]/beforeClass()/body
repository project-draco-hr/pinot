{
  testName=StarTreeQueriesTest.class.getSimpleName();
  indexDir=new File(System.getProperty("java.io.tmpdir"),testName);
  if (indexDir.exists()) {
    FileUtils.forceDelete(indexDir);
  }
  System.out.println(indexDir);
  avroFile=new File(System.getProperty("java.io.tmpdir"),testName + ".avro");
  if (avroFile.exists()) {
    FileUtils.forceDelete(avroFile);
  }
  avroFile.deleteOnExit();
  createSampleAvroData(avroFile,numRecords,numTimeBuckets);
  final SegmentGeneratorConfig config=SegmentTestUtils.getSegmentGenSpecWithSchemAndProjectedColumns(avroFile,indexDir,"daysSinceEpoch",TimeUnit.DAYS,"testTable");
  config.setSegmentNamePostfix("1");
  config.setTimeColumnName("daysSinceEpoch");
  StarTreeIndexSpec starTreeIndexSpec=new StarTreeIndexSpec();
  starTreeIndexSpec.setSplitExcludes(Arrays.asList("daysSinceEpoch"));
  starTreeIndexSpec.setMaxLeafRecords(4);
  config.getSchema().setStarTreeIndexSpec(starTreeIndexSpec);
  final SegmentIndexCreationDriver driver=SegmentCreationDriverFactory.get(null);
  driver.init(config);
  driver.build();
  File segmentFile=new File(indexDir,driver.getSegmentName());
  indexSegment=ColumnarSegmentLoader.load(segmentFile,ReadMode.heap);
}
