{
  AnalyzeMapper mapper=new AnalyzeMapper();
  AnalyzeReducer reducer=new AnalyzeReducer();
  mapDriver=MapDriver.newMapDriver(mapper);
  reduceDriver=ReduceDriver.newReduceDriver(reducer);
  Configuration configuration=mapDriver.getConfiguration();
  configuration.set("io.serializations","org.apache.hadoop.io.serializer.JavaSerialization," + "org.apache.hadoop.io.serializer.WritableSerialization");
  configuration.set(AnalysisJobConstants.ANALYSIS_CONFIG_PATH.toString(),ClassLoader.getSystemResource(CONF_FILE).toString());
  Schema schema=new Schema.Parser().parse(ClassLoader.getSystemResourceAsStream(SCHEMA_FILE));
  setUpAvroSerialization(mapDriver.getConfiguration(),schema);
  configuration=reduceDriver.getConfiguration();
  TemporaryPath tmpDir=new TemporaryPath();
  outputPath=tmpDir.toString();
  configuration.set(AnalysisJobConstants.ANALYSIS_OUTPUT_PATH.toString(),tmpDir.toString());
  configuration.set(AnalysisJobConstants.ANALYSIS_FILE_NAME.toString(),RESULT_FILE);
}
