{
  DataTableBuilder dataTableBuilder=new DataTableBuilder(dataSchema);
  dataTableBuilder.open();
  int numRows=dataSchema.size();
  for (  Serializable[] row : rowEventsSet) {
    dataTableBuilder.startRow();
    for (int i=0; i < numRows; i++) {
switch (dataSchema.getColumnType(i)) {
case INT:
        dataTableBuilder.setColumn(i,((Integer)row[i]).intValue());
      break;
case LONG:
    dataTableBuilder.setColumn(i,((Long)row[i]).longValue());
  break;
case FLOAT:
dataTableBuilder.setColumn(i,((Float)row[i]).floatValue());
break;
case DOUBLE:
dataTableBuilder.setColumn(i,((Double)row[i]).doubleValue());
break;
case STRING:
dataTableBuilder.setColumn(i,((String)row[i]));
break;
case INT_ARRAY:
dataTableBuilder.setColumn(i,(int[])row[i]);
break;
case LONG_ARRAY:
dataTableBuilder.setColumn(i,(long[])row[i]);
break;
case FLOAT_ARRAY:
dataTableBuilder.setColumn(i,(float[])row[i]);
break;
case DOUBLE_ARRAY:
dataTableBuilder.setColumn(i,(double[])row[i]);
break;
case STRING_ARRAY:
dataTableBuilder.setColumn(i,(String[])row[i]);
break;
default :
throw new RuntimeException("Unsupported data type " + dataSchema.getColumnType(i) + " for column "+ dataSchema.getColumnName(i));
}
}
dataTableBuilder.finishRow();
}
dataTableBuilder.seal();
return dataTableBuilder.build();
}
