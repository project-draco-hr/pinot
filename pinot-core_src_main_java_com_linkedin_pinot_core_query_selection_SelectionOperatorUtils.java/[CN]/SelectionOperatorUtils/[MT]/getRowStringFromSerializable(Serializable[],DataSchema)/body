{
  StringBuilder rowStringBuilder=new StringBuilder();
  int numColumns=dataSchema.size();
  for (int i=0; i < numColumns; ++i) {
    if (i != 0) {
      rowStringBuilder.append(" : ");
    }
    DataType columnType=dataSchema.getColumnType(i);
    if (columnType.isSingleValue()) {
      rowStringBuilder.append(row[i]);
    }
 else {
      rowStringBuilder.append("[ ");
      int arrayLength;
switch (columnType) {
case INT_ARRAY:
        int[] intValues=(int[])row[i];
      arrayLength=intValues.length;
    for (int j=0; j < arrayLength; j++) {
      rowStringBuilder.append(intValues[j]).append(' ');
    }
  break;
case LONG_ARRAY:
long[] longValues=(long[])row[i];
arrayLength=longValues.length;
for (int j=0; j < arrayLength; j++) {
rowStringBuilder.append(longValues[j]).append(' ');
}
break;
case FLOAT_ARRAY:
float[] floatValues=(float[])row[i];
arrayLength=floatValues.length;
for (int j=0; j < arrayLength; j++) {
rowStringBuilder.append(floatValues[j]).append(' ');
}
break;
case DOUBLE_ARRAY:
double[] doubleValues=(double[])row[i];
arrayLength=doubleValues.length;
for (int j=0; j < arrayLength; j++) {
rowStringBuilder.append(doubleValues[j]).append(' ');
}
break;
case STRING_ARRAY:
String[] stringValues=(String[])row[i];
arrayLength=stringValues.length;
for (int j=0; j < arrayLength; j++) {
rowStringBuilder.append(stringValues[j]).append(' ');
}
break;
default :
throw new RuntimeException("Unsupported data type " + dataSchema.getColumnType(i) + " for column "+ dataSchema.getColumnName(i));
}
rowStringBuilder.append(']');
}
}
return rowStringBuilder.toString();
}
