{
switch (predicate.getOper()) {
case AND:
case OR:
    whereClause.append("(");
  String delim="";
for (Predicate childPredicate : predicate.getChildPredicates()) {
  whereClause.append(delim);
  generateWhereClause(entityNameToDBNameMapping,childPredicate,parametersMap,whereClause);
  delim="  " + predicate.getOper().toString() + " ";
}
whereClause.append(")");
break;
case EQ:
case GT:
case IN:
case LT:
case NEQ:
case LE:
case GE:
whereClause.append(entityNameToDBNameMapping.get(predicate.getLhs())).append(predicate.getOper().toString()).append("?");
parametersMap.put(entityNameToDBNameMapping.get(predicate.getLhs()),predicate.getRhs());
break;
case BETWEEN:
whereClause.append(entityNameToDBNameMapping.get(predicate.getLhs())).append(predicate.getOper().toString()).append("? AND ?");
ImmutablePair<Object,Object> pair=(ImmutablePair<Object,Object>)predicate.getRhs();
parametersMap.put(entityNameToDBNameMapping.get(predicate.getLhs()),pair.getLeft());
parametersMap.put(entityNameToDBNameMapping.get(predicate.getLhs()),pair.getRight());
break;
default :
throw new RuntimeException("Unsupported predicate type:" + predicate.getOper());
}
}
