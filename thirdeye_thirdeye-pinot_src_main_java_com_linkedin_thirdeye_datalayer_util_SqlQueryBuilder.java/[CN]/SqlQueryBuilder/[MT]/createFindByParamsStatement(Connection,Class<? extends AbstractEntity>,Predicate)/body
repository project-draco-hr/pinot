{
  String tableName=entityMappingHolder.tableToEntityNameMap.inverse().get(entityClass.getSimpleName());
  BiMap<String,String> entityNameToDBNameMapping=entityMappingHolder.columnMappingPerTable.get(tableName).inverse();
  StringBuilder sqlBuilder=new StringBuilder("SELECT * FROM " + tableName);
  StringBuilder whereClause=new StringBuilder(" WHERE ");
  List<Pair<String,Object>> parametersList=new ArrayList<>();
  generateWhereClause(entityNameToDBNameMapping,predicate,parametersList,whereClause);
  sqlBuilder.append(whereClause.toString());
  System.out.println("createFindByParamsStatement Query " + sqlBuilder.toString());
  PreparedStatement prepareStatement=connection.prepareStatement(sqlBuilder.toString());
  int parameterIndex=1;
  LinkedHashMap<String,ColumnInfo> columnInfoMap=entityMappingHolder.columnInfoPerTable.get(tableName);
  for (  Pair<String,Object> pair : parametersList) {
    String dbFieldName=pair.getKey();
    ColumnInfo info=columnInfoMap.get(dbFieldName);
    prepareStatement.setObject(parameterIndex++,pair.getValue(),info.sqlType);
    System.out.println("Setting " + pair.getKey() + " to "+ pair.getValue());
  }
  return prepareStatement;
}
