{
  File indexDir=new File("/tmp/dict.test");
  FieldSpec fieldSpec=new DimensionFieldSpec("test",DataType.STRING,true);
  String[] inputStrings=new String[1];
  String[] paddedStrings=new String[1];
  inputStrings[0]="null";
  Arrays.sort(inputStrings);
  try {
    SegmentDictionaryCreator dictionaryCreator=new SegmentDictionaryCreator(false,inputStrings,fieldSpec,indexDir,V1Constants.Str.DEFAULT_STRING_PAD_CHAR);
    boolean[] isSorted=new boolean[1];
    isSorted[0]=true;
    dictionaryCreator.build(isSorted);
    int targetPaddedLength=dictionaryCreator.getStringColumnMaxLength();
    Assert.assertTrue(targetPaddedLength == 4);
    for (int i=0; i < inputStrings.length; i++) {
      paddedStrings[i]=SegmentDictionaryCreator.getPaddedString(inputStrings[i],targetPaddedLength,V1Constants.Str.DEFAULT_STRING_PAD_CHAR);
    }
    Arrays.sort(paddedStrings);
    for (int i=0; i < inputStrings.length; i++) {
      int paddedIndex=dictionaryCreator.indexOfSV(inputStrings[i]);
      Assert.assertTrue(paddedStrings[paddedIndex].equals(SegmentDictionaryCreator.getPaddedString(inputStrings[i],targetPaddedLength,V1Constants.Str.DEFAULT_STRING_PAD_CHAR)));
    }
    Assert.assertTrue(paddedStrings[0].equals("null"));
    dictionaryCreator.close();
  }
 catch (  Exception e) {
    throw e;
  }
 finally {
    FileUtils.deleteQuietly(indexDir);
  }
}
