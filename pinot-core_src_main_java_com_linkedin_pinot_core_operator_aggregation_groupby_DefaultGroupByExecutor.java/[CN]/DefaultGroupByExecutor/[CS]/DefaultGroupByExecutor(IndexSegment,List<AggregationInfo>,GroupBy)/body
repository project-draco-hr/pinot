{
  Preconditions.checkNotNull(indexSegment);
  Preconditions.checkNotNull(aggregationInfoList);
  Preconditions.checkArgument(aggregationInfoList.size() > 0);
  Preconditions.checkNotNull(groupBy);
  DataFetcher dataFetcher=new DataFetcher(indexSegment);
  _singleValueBlockCache=new SingleValueBlockCache(dataFetcher);
  List<String> groupByColumnList=groupBy.getColumns();
  String[] groupByColumns=groupByColumnList.toArray(new String[groupByColumnList.size()]);
  _groupKeyGenerator=new DefaultGroupKeyGenerator(dataFetcher,groupByColumns);
  int maxNumResults=_groupKeyGenerator.getGlobalGroupKeyUpperBound();
  _hasMultiValuedColumns=_groupKeyGenerator.hasMultiValueGroupByColumn();
  _numAggrFunc=aggregationInfoList.size();
  _aggrFuncContextArray=new AggregationFunctionContext[_numAggrFunc];
  _resultHolderArray=new GroupByResultHolder[_numAggrFunc];
  _segmentMetadata=indexSegment.getSegmentMetadata();
  for (int i=0; i < _numAggrFunc; i++) {
    AggregationInfo aggregationInfo=aggregationInfoList.get(i);
    String[] columns=aggregationInfo.getAggregationParams().get("column").trim().split(",");
    _aggrFuncContextArray[i]=new AggregationFunctionContext(aggregationInfo.getAggregationType(),columns,_segmentMetadata);
    _resultHolderArray[i]=ResultHolderFactory.getGroupByResultHolder(_aggrFuncContextArray[i].getAggregationFunction(),maxNumResults);
  }
}
