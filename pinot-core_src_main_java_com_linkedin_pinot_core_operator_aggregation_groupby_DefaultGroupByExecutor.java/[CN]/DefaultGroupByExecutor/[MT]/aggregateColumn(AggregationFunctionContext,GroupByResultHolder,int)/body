{
  AggregationFunction aggregationFunction=aggrFuncContext.getAggregationFunction();
  String[] aggrColumns=aggrFuncContext.getAggregationColumns();
  String aggrFuncName=aggregationFunction.getName();
  Preconditions.checkState(aggrColumns.length == 1);
  String aggrColumn=aggrColumns[0];
switch (aggrFuncName) {
case AggregationFunctionFactory.COUNT_AGGREGATION_FUNCTION:
    if (_hasMultiValuedColumns) {
      aggregationFunction.aggregateGroupByMV(length,_docIdToMVGroupKey,resultHolder);
    }
 else {
      aggregationFunction.aggregateGroupBySV(length,_docIdToSVGroupKey,resultHolder);
    }
  break;
case AggregationFunctionFactory.DISTINCTCOUNT_AGGREGATION_FUNCTION:
case AggregationFunctionFactory.DISTINCTCOUNTHLL_AGGREGATION_FUNCTION:
double[] hashCodeArray=_singleValueBlockCache.getHashCodeArrayForColumn(aggrColumn);
if (_hasMultiValuedColumns) {
aggregationFunction.aggregateGroupByMV(length,_docIdToMVGroupKey,resultHolder,hashCodeArray);
}
 else {
aggregationFunction.aggregateGroupBySV(length,_docIdToSVGroupKey,resultHolder,hashCodeArray);
}
break;
default :
double[] valueArray=_singleValueBlockCache.getDoubleValueArrayForColumn(aggrColumn);
if (_hasMultiValuedColumns) {
aggregationFunction.aggregateGroupByMV(length,_docIdToMVGroupKey,resultHolder,valueArray);
}
 else {
aggregationFunction.aggregateGroupBySV(length,_docIdToSVGroupKey,resultHolder,valueArray);
}
break;
}
}
