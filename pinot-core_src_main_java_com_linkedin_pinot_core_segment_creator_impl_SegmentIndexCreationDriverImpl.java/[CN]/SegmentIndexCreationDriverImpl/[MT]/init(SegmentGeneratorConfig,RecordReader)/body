{
  this.config=config;
  this.createStarTree=config.isEnableStarTreeIndex();
  recordReader=reader;
  recordReader.init();
  dataSchema=recordReader.getSchema();
  if (config.getHllConfig() != null) {
    if (!createStarTree) {
      throw new IllegalArgumentException("Derived HLL fields generation will not work if StarTree is not enabled.");
    }
 else {
      enableHllIndex=true;
    }
  }
  addDerivedFieldsInSchema();
  extractor=(PlainFieldExtractor)FieldExtractorFactory.getPlainFieldExtractor(dataSchema);
  statsCollector=new SegmentPreIndexStatsCollectorImpl(recordReader.getSchema());
  statsCollector.init();
  segmentIndexCreationInfo=new SegmentIndexCreationInfo();
  indexCreationInfoMap=new HashMap<String,ColumnIndexCreationInfo>();
  indexCreator=new SegmentColumnarIndexCreator();
  final File indexDir=new File(config.getOutDir());
  if (!indexDir.exists()) {
    indexDir.mkdirs();
  }
  tempIndexDir=new File(indexDir,com.linkedin.pinot.common.utils.FileUtils.getRandomFileName());
  starTreeTempDir=new File(indexDir,com.linkedin.pinot.common.utils.FileUtils.getRandomFileName());
  LOGGER.debug("tempIndexDir:{}",tempIndexDir);
  LOGGER.debug("starTreeTempDir:{}",starTreeTempDir);
}
