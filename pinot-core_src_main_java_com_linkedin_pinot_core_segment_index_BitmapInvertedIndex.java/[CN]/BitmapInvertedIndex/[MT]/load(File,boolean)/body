{
  final int[] offsets=new int[numberOfBitmaps + 1];
  final DataInputStream dis=new DataInputStream(new BufferedInputStream(new FileInputStream(file)));
  for (int i=0; i <= numberOfBitmaps; ++i) {
    offsets[i]=dis.readInt();
  }
  dis.close();
  ByteBuffer buffer;
  final int lastOffset=offsets[numberOfBitmaps];
  _rndFile=new RandomAccessFile(file,"r");
  if (isMmap) {
    buffer=_rndFile.getChannel().map(MapMode.READ_ONLY,0,lastOffset);
  }
 else {
    buffer=ByteBuffer.allocate(lastOffset);
    _rndFile.getChannel().read(buffer);
  }
  for (int i=0; i < numberOfBitmaps; i++) {
    buffer.position(offsets[i]);
    final ByteBuffer bb=buffer.slice();
    final long offsetLimit=i < 199 ? offsets[i + 1] : lastOffset;
    bb.limit((int)(offsetLimit - offsets[i]));
    bitmaps[i]=new ImmutableRoaringBitmap(bb);
  }
}
