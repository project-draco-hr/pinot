{
  int[] list1=new int[]{2,3,10,15,16,28};
  int[] list2=new int[]{3,6,8,20,28};
  ;
  List<Operator> operators=new ArrayList<Operator>();
  operators.add(makeFilterOperator(list1));
  operators.add(makeFilterOperator(list2));
  final OrOperator orOperator=new OrOperator(operators);
  orOperator.open();
  Block block;
  TreeSet<Integer> set=new TreeSet<Integer>();
  set.addAll(Lists.newArrayList(ArrayUtils.toObject(list1)));
  set.addAll(Lists.newArrayList(ArrayUtils.toObject(list2)));
  Iterator<Integer> expectedIterator=set.iterator();
  while ((block=orOperator.nextBlock()) != null) {
    final BlockDocIdSet blockDocIdSet=block.getBlockDocIdSet();
    final BlockDocIdIterator iterator=blockDocIdSet.iterator();
    int docId;
    while ((docId=iterator.next()) != Constants.EOF) {
      Assert.assertEquals(expectedIterator.next().intValue(),docId);
    }
  }
  orOperator.close();
}
