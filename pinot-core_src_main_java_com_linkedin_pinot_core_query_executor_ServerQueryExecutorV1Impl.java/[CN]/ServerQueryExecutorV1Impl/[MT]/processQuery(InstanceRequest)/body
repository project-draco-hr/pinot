{
  DataTable instanceResponse;
  try {
    long start=System.currentTimeMillis();
    final BrokerRequest brokerRequest=instanceRequest.getQuery();
    LOGGER.info("Incoming query is :" + brokerRequest);
    final List<IndexSegment> queryableSegmentDataManagerList=_serverMetrics.timePhase(brokerRequest,ServerQueryPhase.SEGMENT_PRUNING,new Callable<List<IndexSegment>>(){
      @Override public List<IndexSegment> call() throws Exception {
        return getPrunedQueryableSegments(instanceRequest);
      }
    }
);
    LOGGER.info("Matched " + queryableSegmentDataManagerList.size() + " segments! ");
    if (queryableSegmentDataManagerList.isEmpty()) {
      return null;
    }
    final Plan globalQueryPlan=_serverMetrics.timePhase(brokerRequest,ServerQueryPhase.BUILD_QUERY_PLAN,new Callable<Plan>(){
      @Override public Plan call() throws Exception {
        return _planMaker.makeInterSegmentPlan(queryableSegmentDataManagerList,brokerRequest,_instanceDataManager.getResourceDataManager(brokerRequest.getQuerySource().getResourceName()).getExecutorService(),getResourceTimeOut(instanceRequest.getQuery()));
      }
    }
);
    if (_printQueryPlan) {
      LOGGER.debug("***************************** Query Plan for Request " + instanceRequest.getRequestId() + "***********************************");
      globalQueryPlan.print();
      LOGGER.debug("*********************************** End Query Plan ***********************************");
    }
    _serverMetrics.timePhase(brokerRequest,ServerQueryPhase.QUERY_PLAN_EXECUTION,new Callable<Object>(){
      @Override public Object call() throws Exception {
        globalQueryPlan.execute();
        return null;
      }
    }
);
    instanceResponse=globalQueryPlan.getInstanceResponse();
    long end=System.currentTimeMillis();
    LOGGER.info("Searching Instance for Request Id - " + instanceRequest.getRequestId() + ", browse took: "+ (end - start));
    LOGGER.debug("InstanceResponse for Request Id - " + instanceRequest.getRequestId() + " : "+ instanceResponse.toString());
    instanceResponse.getMetadata().put("timeUsedMs",Long.toString((end - start)));
    instanceResponse.getMetadata().put("requestId",Long.toString(instanceRequest.getRequestId()));
  }
 catch (  Exception e) {
    _serverMetrics.addMeteredValue(instanceRequest.getQuery(),ServerMeter.QUERY_EXECUTION_EXCEPTIONS,1);
    LOGGER.error(e.getMessage());
    instanceResponse=null;
  }
 finally {
  }
  return instanceResponse;
}
