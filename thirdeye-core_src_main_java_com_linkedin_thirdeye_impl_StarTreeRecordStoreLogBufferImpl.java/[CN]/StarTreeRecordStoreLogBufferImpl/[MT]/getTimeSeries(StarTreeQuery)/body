{
  if (query.getTimeRange() == null) {
    throw new IllegalArgumentException("Query must have time range " + query);
  }
synchronized (sync) {
    MetricTimeSeries timeSeries=new MetricTimeSeries(metricSchema);
    ByteBuffer buffer=getBuffer();
    buffer.rewind();
    while (buffer.position() < buffer.limit()) {
      boolean matches=true;
      StarTreeRecord record=getRecord(buffer);
      for (int i=0; i < dimensionSpecs.size(); i++) {
        String recordValue=record.getDimensionKey().getDimensionValues()[i];
        String queryValue=query.getDimensionKey().getDimensionValues()[i];
        if (!StarTreeConstants.STAR.equals(queryValue) && !queryValue.equals(recordValue)) {
          matches=false;
        }
      }
      if (matches) {
        for (        Long time : record.getMetricTimeSeries().getTimeWindowSet()) {
          if (query.getTimeRange() == null || query.getTimeRange().contains(time)) {
            for (            MetricSpec metricSpec : metricSpecs) {
              timeSeries.increment(time,metricSpec.getName(),record.getMetricTimeSeries().get(time,metricSpec.getName()));
            }
          }
        }
      }
    }
    return timeSeries;
  }
}
