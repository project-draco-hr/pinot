{
  for (int i=0; i < dimensionSpecs.size(); i++) {
    DimensionSpec dimensionSpec=dimensionSpecs.get(i);
    String dimensionValue=record.getDimensionKey().getDimensionValues()[i];
    if (StarTreeConstants.STAR.equals(dimensionValue)) {
      buffer.putInt(STAR_VALUE);
    }
 else {
      Map<String,Integer> valueIds=getForwardIndex().get(dimensionSpec.getName());
      if (valueIds == null) {
        valueIds=new HashMap<String,Integer>();
        getForwardIndex().put(dimensionSpec.getName(),valueIds);
      }
      Integer valueId=valueIds.get(dimensionValue);
      if (valueId == null) {
        valueId=nextValueId.getAndIncrement();
        valueIds.put(dimensionValue,valueId);
        reverseIndex.get(dimensionSpec.getName()).put(valueId,dimensionValue);
      }
      buffer.putInt(valueId);
    }
  }
  Set<Long> times=record.getMetricTimeSeries().getTimeWindowSet();
  buffer.putInt(times.size());
  for (  Long time : times) {
    buffer.putLong(time);
    for (int i=0; i < metricSpecs.size(); i++) {
      String metricName=metricSpecs.get(i).getName();
      Number value=record.getMetricTimeSeries().get(time,metricName);
      NumberUtils.addToBuffer(buffer,value,metricSpecs.get(i).getType());
    }
  }
}
