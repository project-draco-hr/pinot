{
synchronized (sync) {
    Number[] sums=new Number[metricNames.size()];
    Arrays.fill(sums,0);
    ByteBuffer buffer=getBuffer();
    buffer.rewind();
    while (buffer.position() < buffer.limit()) {
      boolean matches=true;
      for (      String dimensionName : dimensionNames) {
        int valueId=buffer.getInt();
        String recordValue=reverseIndex.get(dimensionName).get(valueId);
        String queryValue=query.getDimensionValues().get(dimensionName);
        if (!StarTreeConstants.STAR.equals(queryValue) && !queryValue.equals(recordValue)) {
          matches=false;
        }
      }
      long time=buffer.getLong();
      if (query.getTimeBuckets() != null && !query.getTimeBuckets().contains(time)) {
        matches=false;
      }
 else       if (query.getTimeRange() != null && (time < query.getTimeRange().getKey() || time > query.getTimeRange().getValue())) {
        matches=false;
      }
      for (int i=0; i < metricNames.size(); i++) {
        Number value=NumberUtils.readFromBuffer(buffer,metricTypes.get(i));
        if (matches) {
          sums[i]=NumberUtils.sum(sums[i],value,metricTypes.get(i));
        }
      }
    }
    return sums;
  }
}
