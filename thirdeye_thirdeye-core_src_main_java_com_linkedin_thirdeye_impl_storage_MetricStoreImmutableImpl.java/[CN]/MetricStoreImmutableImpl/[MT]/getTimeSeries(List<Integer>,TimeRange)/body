{
  MetricTimeSeries timeSeries=new MetricTimeSeries(metricSchema);
  Set<Long> times=getTimes(timeRange);
  Collections.sort(logicalOffsets);
  for (  Map.Entry<TimeRange,List<ByteBuffer>> entry : buffers.entrySet()) {
    TimeRange bufferTimeRange=entry.getKey();
    if (bufferTimeRange.getStart() >= 0 && (timeRange == null || !bufferTimeRange.isDisjoint(timeRange))) {
      for (      ByteBuffer originalBuffer : entry.getValue()) {
        ByteBuffer buffer=originalBuffer.duplicate();
        computeAggregateTimeSeries(logicalOffsets,timeRange,timeSeries,times,buffer);
      }
    }
  }
  return timeSeries;
}
