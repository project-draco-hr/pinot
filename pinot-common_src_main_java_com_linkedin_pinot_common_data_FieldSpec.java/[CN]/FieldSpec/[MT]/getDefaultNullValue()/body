{
  FieldType fieldType=getFieldType();
  if (_cachedDefaultNullValue == null) {
    if (_stringDefaultNullValue != null) {
switch (_dataType) {
case INT:
        _cachedDefaultNullValue=Integer.valueOf(_stringDefaultNullValue);
      break;
case LONG:
    _cachedDefaultNullValue=Long.valueOf(_stringDefaultNullValue);
  break;
case FLOAT:
_cachedDefaultNullValue=Float.valueOf(_stringDefaultNullValue);
break;
case DOUBLE:
_cachedDefaultNullValue=Double.valueOf(_stringDefaultNullValue);
break;
case STRING:
_cachedDefaultNullValue=_stringDefaultNullValue;
break;
default :
throw new UnsupportedOperationException("Unsupported data type: " + _dataType);
}
}
 else {
switch (fieldType) {
case METRIC:
switch (_dataType) {
case INT:
_cachedDefaultNullValue=DEFAULT_METRIC_NULL_VALUE_OF_INT;
break;
case LONG:
_cachedDefaultNullValue=DEFAULT_METRIC_NULL_VALUE_OF_LONG;
break;
case FLOAT:
_cachedDefaultNullValue=DEFAULT_METRIC_NULL_VALUE_OF_FLOAT;
break;
case DOUBLE:
_cachedDefaultNullValue=DEFAULT_METRIC_NULL_VALUE_OF_DOUBLE;
break;
case STRING:
_cachedDefaultNullValue=DEFAULT_METRIC_NULL_VALUE_OF_STRING;
break;
default :
throw new UnsupportedOperationException("Unknown default null value for metric field of data type: " + _dataType);
}
break;
case DIMENSION:
case TIME:
switch (_dataType) {
case INT:
_cachedDefaultNullValue=DEFAULT_DIM_NULL_VALUE_OF_INT;
break;
case LONG:
_cachedDefaultNullValue=DEFAULT_DIM_NULL_VALUE_OF_LONG;
break;
case FLOAT:
_cachedDefaultNullValue=DEFAULT_DIM_NULL_VALUE_OF_FLOAT;
break;
case DOUBLE:
_cachedDefaultNullValue=DEFAULT_DIM_NULL_VALUE_OF_DOUBLE;
break;
case STRING:
_cachedDefaultNullValue=DEFAULT_DIM_NULL_VALUE_OF_STRING;
break;
default :
throw new UnsupportedOperationException("Unknown default null value for dimension/time field of data type: " + _dataType);
}
break;
default :
throw new UnsupportedOperationException("Unsupported field type: " + fieldType);
}
}
}
return _cachedDefaultNullValue;
}
