{
  StarTree starTree=new StarTreeImpl(config);
  starTree.open();
  Properties consumerConfig=new Properties();
  consumerConfig.setProperty("zookeeper.connect","localhost:" + zkPort);
  consumerConfig.setProperty("group.id","1000");
  consumerConfig.put("zookeeper.session.timeout.ms","400");
  consumerConfig.put("zookeeper.sync.time.ms","200");
  consumerConfig.put("auto.commit.interval.ms","1000");
  consumerConfig.put("auto.offset.reset","smallest");
  kafkaConsumer=new ThirdEyeKafkaConsumer(executorService,TOPIC,consumerConfig,schema,starTree);
  kafkaConsumer.run();
  long start=System.currentTimeMillis();
  long timeout=30000;
  while (System.currentTimeMillis() - start < timeout && kafkaConsumer.getMessagesReceived() < 100) {
    Thread.sleep(1000);
  }
  Assert.assertEquals(kafkaConsumer.getMessagesReceived(),100);
  StarTreeQuery query=new StarTreeQueryImpl.Builder().setDimensionValue("A","*").setDimensionValue("B","*").setDimensionValue("C","*").build();
  StarTreeRecord starTreeRecord=starTree.getAggregate(query);
  Assert.assertEquals(starTreeRecord.getMetricValues().get("M").intValue(),100);
}
