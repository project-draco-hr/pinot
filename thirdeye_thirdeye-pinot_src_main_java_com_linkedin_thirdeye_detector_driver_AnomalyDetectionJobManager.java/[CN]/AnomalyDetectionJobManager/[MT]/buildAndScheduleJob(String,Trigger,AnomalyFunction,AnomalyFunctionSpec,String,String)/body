{
  JobDetail job=JobBuilder.newJob(AnomalyDetectionJob.class).withIdentity(jobKey).build();
  job.getJobDataMap().put(AnomalyDetectionJob.FUNCTION,anomalyFunction);
  job.getJobDataMap().put(AnomalyDetectionJob.TIME_SERIES_HANDLER,timeSeriesHandler);
  job.getJobDataMap().put(AnomalyDetectionJob.TIME_SERIES_RESPONSE_CONVERTER,timeSeriesResponseConverter);
  job.getJobDataMap().put(AnomalyDetectionJob.WINDOW_START,windowStartIsoString);
  job.getJobDataMap().put(AnomalyDetectionJob.WINDOW_END,windowEndIsoString);
  job.getJobDataMap().put(AnomalyDetectionJob.RESULT_DAO,resultDAO);
  job.getJobDataMap().put(AnomalyDetectionJob.METRIC_REGISTRY,metricRegistry);
  job.getJobDataMap().put(FailureEmailConfiguration.FAILURE_EMAIL_CONFIG_KEY,failureEmailConfig);
  quartzScheduler.scheduleJob(job,trigger);
  LOG.info("buildAndScheduleJob anomalyFunction: {}, windowStartIsoString: {}, windowEndIsoString: {}",anomalyFunction,windowStartIsoString,windowEndIsoString);
  LOG.info("Started {}: {}",jobKey,spec);
}
