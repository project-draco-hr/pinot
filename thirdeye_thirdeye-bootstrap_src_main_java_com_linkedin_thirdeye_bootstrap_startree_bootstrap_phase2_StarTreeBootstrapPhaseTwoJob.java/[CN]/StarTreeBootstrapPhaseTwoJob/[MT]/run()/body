{
  Job job=Job.getInstance(getConf());
  job.setJobName(name);
  job.setJarByClass(StarTreeBootstrapPhaseTwoJob.class);
  job.setMapperClass(BootstrapPhaseTwoMapper.class);
  job.setInputFormatClass(SequenceFileInputFormat.class);
  job.setMapOutputKeyClass(BytesWritable.class);
  job.setMapOutputValueClass(BytesWritable.class);
  job.setReducerClass(BootstrapPhaseTwoReducer.class);
  job.setOutputKeyClass(NullWritable.class);
  job.setOutputValueClass(NullWritable.class);
  int numberOfReducers=10;
  if (this.props.getProperty(ThirdEyeJobConstants.THIRDEYE_STARTREE_BOOTSTRAP_PHASE2_REDUCERS.getPropertyName()) != null) {
    numberOfReducers=Integer.parseInt(this.props.getProperty(ThirdEyeJobConstants.THIRDEYE_STARTREE_BOOTSTRAP_PHASE2_REDUCERS.getPropertyName()));
  }
  job.setNumReduceTasks(numberOfReducers);
  LOG.info("Setting number of reducers : " + numberOfReducers);
  Configuration configuration=job.getConfiguration();
  String inputPathDir=getAndSetConfiguration(configuration,STAR_TREE_BOOTSTRAP_PHASE2_INPUT_PATH);
  getAndSetConfiguration(configuration,STAR_TREE_GENERATION_OUTPUT_PATH);
  getAndSetConfiguration(configuration,STAR_TREE_BOOTSTRAP_PHASE2_CONFIG_PATH);
  getAndSetConfiguration(configuration,STAR_TREE_BOOTSTRAP_PHASE2_OUTPUT_PATH);
  LOG.info("Input path dir: " + inputPathDir);
  for (  String inputPath : inputPathDir.split(",")) {
    LOG.info("Adding input:" + inputPath);
    Path input=new Path(inputPath);
    FileInputFormat.addInputPath(job,input);
  }
  FileOutputFormat.setOutputPath(job,new Path(getAndCheck(STAR_TREE_BOOTSTRAP_PHASE2_OUTPUT_PATH.toString())));
  String thirdEyeUri=props.getProperty(ThirdEyeJobConstants.THIRDEYE_SERVER_URI.getPropertyName());
  if (thirdEyeUri != null) {
    job.getConfiguration().set(ThirdEyeJobConstants.THIRDEYE_SERVER_URI.getPropertyName(),thirdEyeUri);
  }
  job.waitForCompletion(true);
}
