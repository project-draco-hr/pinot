{
  Job job=Job.getInstance(getConf());
  job.setJobName(name);
  job.setJarByClass(RollupPhaseFourJob.class);
  job.setMapperClass(RollupPhaseFourMapper.class);
  job.setInputFormatClass(SequenceFileInputFormat.class);
  job.setMapOutputKeyClass(BytesWritable.class);
  job.setMapOutputValueClass(BytesWritable.class);
  job.setCombinerClass(RollupPhaseFourReducer.class);
  job.setReducerClass(RollupPhaseFourReducer.class);
  job.setOutputKeyClass(BytesWritable.class);
  job.setOutputValueClass(BytesWritable.class);
  job.setOutputFormatClass(SequenceFileOutputFormat.class);
  String numReducers=props.getProperty("num.reducers");
  if (numReducers != null) {
    job.setNumReduceTasks(Integer.parseInt(numReducers));
  }
 else {
    job.setNumReduceTasks(10);
  }
  LOG.info("Setting number of reducers : " + job.getNumReduceTasks());
  Configuration configuration=job.getConfiguration();
  String inputPathDir=getAndSetConfiguration(configuration,ROLLUP_PHASE4_INPUT_PATH);
  getAndSetConfiguration(configuration,ROLLUP_PHASE4_CONFIG_PATH);
  getAndSetConfiguration(configuration,ROLLUP_PHASE4_OUTPUT_PATH);
  LOG.info("Input path dir: " + inputPathDir);
  for (  String inputPath : inputPathDir.split(",")) {
    LOG.info("Adding input:" + inputPath);
    Path input=new Path(inputPath);
    FileInputFormat.addInputPath(job,input);
  }
  FileOutputFormat.setOutputPath(job,new Path(getAndCheck(ROLLUP_PHASE4_OUTPUT_PATH.toString())));
  job.waitForCompletion(true);
}
