{
  List<AggregationInfo> aggregationsInfo=brokerRequest.getAggregationsInfo();
  if (aggregationsInfo == null || aggregationsInfo.isEmpty()) {
    return false;
  }
  StarTreeMetadata starTreeMetadata=segmentMetadata.getStarTreeMetadata();
  if (starTreeMetadata == null) {
    return false;
  }
  List<String> skipMaterializationList=starTreeMetadata.getSkipMaterializationForDimensions();
  Set<String> skipMaterializationSet=null;
  if (skipMaterializationList != null && !skipMaterializationList.isEmpty()) {
    skipMaterializationSet=new HashSet<String>(skipMaterializationList);
    GroupBy groupBy=brokerRequest.getGroupBy();
    if (groupBy != null) {
      for (      String groupByColumn : groupBy.getColumns()) {
        if (skipMaterializationSet.contains(groupByColumn)) {
          return false;
        }
      }
    }
  }
  for (  AggregationInfo aggregationInfo : aggregationsInfo) {
    String aggregationFunctionName=aggregationInfo.getAggregationType().toLowerCase();
    if (!ALLOWED_AGGREGATION_FUNCTIONS.contains(aggregationFunctionName)) {
      return false;
    }
  }
  Set<String> metricColumnSet=new HashSet<String>();
  metricColumnSet.addAll(segmentMetadata.getSchema().getMetricNames());
  if (filterTree != null && filterTree.getChildren() != null && !filterTree.getChildren().isEmpty()) {
    if (filterTree.getOperator() != FilterOperator.AND) {
      return false;
    }
    Set<String> predicateColumns=new HashSet<>();
    for (    FilterQueryTree child : filterTree.getChildren()) {
      if (child.getChildren() != null && !child.getChildren().isEmpty()) {
        return false;
      }
      String column=child.getColumn();
      if (predicateColumns.contains(column)) {
        return false;
      }
      if ((skipMaterializationSet != null) && skipMaterializationSet.contains(column)) {
        return false;
      }
      if (metricColumnSet.contains(column)) {
        return false;
      }
      predicateColumns.add(column);
    }
  }
 else   if (filterTree != null) {
    String rootColumn=filterTree.getColumn();
    if (skipMaterializationSet != null && skipMaterializationSet.contains(rootColumn)) {
      return false;
    }
    if (metricColumnSet.contains(rootColumn)) {
      return false;
    }
  }
  return true;
}
