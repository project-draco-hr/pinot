{
  if (javaObject == null) {
    return null;
  }
  if (javaObject instanceof JSON) {
    return javaObject;
  }
  if (javaObject instanceof FastJSONObject) {
    return ((FastJSONObject)javaObject).getInnerJSONObject();
  }
  if (javaObject instanceof FastJSONArray) {
    return ((FastJSONArray)javaObject).getInnerJSONArray();
  }
  if (javaObject instanceof Map) {
    Map<Object,Object> map=(Map<Object,Object>)javaObject;
    com.alibaba.fastjson.JSONObject json=new com.alibaba.fastjson.JSONObject(map.size());
    for (    Map.Entry<Object,Object> entry : map.entrySet()) {
      Object key=entry.getKey();
      String jsonKey=TypeUtils.castToString(key);
      Object jsonValue=toJSON(entry.getValue());
      json.put(jsonKey,jsonValue);
    }
    return json;
  }
  if (javaObject instanceof Collection) {
    Collection<Object> collection=(Collection<Object>)javaObject;
    com.alibaba.fastjson.JSONArray array=new com.alibaba.fastjson.JSONArray(collection.size());
    for (    Object item : collection) {
      Object jsonValue=toJSON(item);
      array.add(jsonValue);
    }
    return array;
  }
  Class<?> clazz=javaObject.getClass();
  if (clazz.isEnum()) {
    return ((Enum<?>)javaObject).name();
  }
  if (clazz.isArray()) {
    int len=Array.getLength(javaObject);
    com.alibaba.fastjson.JSONArray array=new com.alibaba.fastjson.JSONArray(len);
    for (int i=0; i < len; ++i) {
      Object item=Array.get(javaObject,i);
      Object jsonValue=toJSON(item);
      array.add(jsonValue);
    }
    return array;
  }
  if (ParserConfig.getGlobalInstance().isPrimitive(clazz)) {
    return javaObject;
  }
  try {
    List<FieldInfo> getters=TypeUtils.computeGetters(clazz,null);
    com.alibaba.fastjson.JSONObject json=new com.alibaba.fastjson.JSONObject(getters.size());
    for (    FieldInfo field : getters) {
      Object value=field.get(javaObject);
      Object jsonValue=toJSON(value);
      json.put(field.getName(),jsonValue);
    }
    return json;
  }
 catch (  Exception e) {
    throw new com.alibaba.fastjson.JSONException("toJSON error",e);
  }
}
