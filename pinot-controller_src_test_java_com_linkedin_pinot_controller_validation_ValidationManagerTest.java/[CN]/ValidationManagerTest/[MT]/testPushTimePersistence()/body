{
  String testResourceName="testResource";
  Thread.sleep(1000);
  ControllerRequestBuilderUtil.addFakeDataInstancesToAutoJoinHelixCluster(HELIX_CLUSTER_NAME,ZK_STR,2);
  ControllerRequestBuilderUtil.addFakeBrokerInstancesToAutoJoinHelixCluster(HELIX_CLUSTER_NAME,ZK_STR,2);
  Tenant brokerTenant=new TenantBuilder("testBroker").setType(TenantRole.BROKER).setTotalInstances(2).setOfflineInstances(-1).setRealtimeInstances(-1).build();
  _pinotHelixResourceManager.createBrokerTenant(brokerTenant);
  Tenant serverTenant=new TenantBuilder("testServer").setType(TenantRole.SERVER).setTotalInstances(2).setOfflineInstances(2).setRealtimeInstances(0).build();
  _pinotHelixResourceManager.createBrokerTenant(serverTenant);
  String OfflineTableConfigJson=ControllerRequestBuilderUtil.buildCreateOfflineTableV2JSON(testResourceName,"testServer","testBroker","timestamp","millsSinceEpoch","DAYS","5",2,"BalanceNumSegmentAssignmentStrategy").toString();
  AbstractTableConfig offlineTableConfig=AbstractTableConfig.init(OfflineTableConfigJson);
  _pinotHelixResourceManager.addTable(offlineTableConfig);
  DummyMetadata metadata=new DummyMetadata(testResourceName);
  _pinotHelixResourceManager.addSegmentV2(metadata,"http://dummy/");
  Thread.sleep(1000);
  OfflineSegmentZKMetadata offlineSegmentZKMetadata=ZKMetadataProvider.getOfflineSegmentZKMetadata(_pinotHelixResourceManager.getPropertyStore(),metadata.getResourceName(),metadata.getName());
  SegmentMetadata fetchedMetadata=new SegmentMetadataImpl(offlineSegmentZKMetadata);
  long pushTime=fetchedMetadata.getPushTime();
  Assert.assertTrue(System.currentTimeMillis() - pushTime < 30000);
  Assert.assertEquals(fetchedMetadata.getRefreshTime(),Long.MIN_VALUE);
  metadata.setCrc("anotherfakecrc");
  _pinotHelixResourceManager.addSegment(metadata,"http://dummy/");
  Thread.sleep(1000);
  offlineSegmentZKMetadata=ZKMetadataProvider.getOfflineSegmentZKMetadata(_pinotHelixResourceManager.getPropertyStore(),metadata.getResourceName(),metadata.getName());
  fetchedMetadata=new SegmentMetadataImpl(offlineSegmentZKMetadata);
  Assert.assertEquals(fetchedMetadata.getPushTime(),pushTime);
  Assert.assertTrue(System.currentTimeMillis() - fetchedMetadata.getRefreshTime() < 30000);
}
