{
  SequenceFileReader<NullWritable,ByteBuffer> fileReader=new SequenceFileReader<NullWritable,ByteBuffer>(inputFile);
  while (fileReader.hasNext()) {
    Pair<NullWritable,ByteBuffer> next=fileReader.next();
    ByteBuffer bytes=next.value();
    DataInputStream dis=new DataInputStream(new ByteBufferBackedInputStream(bytes));
    while (dis.available() > 0) {
      UUID nodeId=UUID.fromString(new String(readNext(dis)));
      byte[] index=readNext(dis);
      byte[] buffer=readNext(dis);
      File indexFile=new File(outputDir,nodeId + StarTreeConstants.INDEX_FILE_SUFFIX);
      if (!indexFile.createNewFile()) {
        throw new IOException(indexFile + " already exists");
      }
      IOUtils.copy(new ByteArrayInputStream(index),new FileOutputStream(indexFile));
      File bufferFile=new File(outputDir,nodeId + StarTreeConstants.BUFFER_FILE_SUFFIX);
      if (!bufferFile.createNewFile()) {
        throw new IOException(bufferFile + " already exists");
      }
      IOUtils.copy(new ByteArrayInputStream(buffer),new FileOutputStream(bufferFile));
      LOG.info("Extracted node {}",nodeId);
    }
    dis.close();
  }
  fileReader.close();
}
