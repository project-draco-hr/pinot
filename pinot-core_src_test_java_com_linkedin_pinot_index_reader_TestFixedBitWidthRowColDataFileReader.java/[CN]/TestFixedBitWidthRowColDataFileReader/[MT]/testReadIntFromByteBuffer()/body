{
  int maxBits=1;
  while (maxBits < 32) {
    System.out.println("START MAX BITS:" + maxBits);
    int numElements=100;
    CustomBitSet customBitSet=CustomBitSet.withBitLength(numElements * maxBits);
    int max=(int)Math.pow(2,maxBits);
    Random r=new Random();
    int[] values=new int[numElements];
    for (int i=0; i < numElements; i++) {
      int value=r.nextInt(max);
      values[i]=value;
      System.out.println(value);
      for (int j=maxBits - 1; j >= 0; j--) {
        if ((value & (1 << j)) != 0) {
          System.out.print("1");
          customBitSet.setBit(i * maxBits + (maxBits - j - 1));
        }
 else {
          System.out.print("0");
        }
      }
      System.out.println();
    }
    customBitSet.print();
    int bitPos=0;
    for (int i=0; i < numElements; i++) {
      bitPos=i * maxBits;
      int readInt=customBitSet.readInt(bitPos,bitPos + maxBits);
      if (readInt != values[i]) {
        readInt=customBitSet.readInt(bitPos,bitPos + maxBits);
      }
      System.out.println(i + "  Expected:" + values[i]+ " Actual:"+ readInt);
      Assert.assertEquals(readInt,values[i]);
    }
    System.out.println("END MAX BITS:" + maxBits);
    maxBits=maxBits + 1;
  }
}
