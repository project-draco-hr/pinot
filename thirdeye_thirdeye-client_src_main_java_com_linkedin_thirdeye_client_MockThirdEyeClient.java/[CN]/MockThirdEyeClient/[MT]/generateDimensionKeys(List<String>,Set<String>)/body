{
  if (Math.pow(dimensionValueCardinality,dimensions.size()) > 1000) {
    throw new IllegalArgumentException("Mock client does not support more than 100 distinct dimension keys");
  }
  String baseKey=calculateBaseDimensionKey(dimensions,groupBy);
  List<List<String>> current=Collections.singletonList(Collections.<String>emptyList());
  for (int i=0; i < dimensions.size(); i++) {
    List<List<String>> next=new LinkedList<>();
    String dimension=dimensions.get(i);
    if (groupBy.contains(dimension)) {
      continue;
    }
    for (int dimVal=1; dimVal <= dimensionValueCardinality; dimVal++) {
      String dimensionValue=dimension + "_val" + dimVal;
      for (      List<String> key : current) {
        LinkedList<String> newKey=new LinkedList<>(key);
        newKey.addFirst(dimensionValue);
        next.add(newKey);
      }
    }
    current=next;
  }
  List<String> results=new LinkedList<>();
  for (  List<String> keyList : current) {
    String formattedKey=String.format(baseKey,keyList.toArray());
    String finalKey=MAPPER.writeValueAsString(formattedKey.split(","));
    results.add(finalKey);
  }
  return results;
}
