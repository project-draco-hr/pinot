{
  AnomalyFunctionManager hibernateManager=PersistenceUtil.getInstance(com.linkedin.thirdeye.datalayer.bao.hibernate.AnomalyFunctionManagerImpl.class);
  AnomalyFunctionManager jdbcManager=DaoProviderUtil.getInstance(com.linkedin.thirdeye.datalayer.bao.jdbc.AnomalyFunctionManagerImpl.class);
  List<AnomalyFunctionDTO> dtoSrcList=hibernateManager.findAll();
  List<AnomalyFunctionDTO> dtoTgtList=jdbcManager.findAll();
  Set<String> uniques=new HashSet<>();
  for (  AnomalyFunctionDTO dto : dtoTgtList) {
    uniques.add(dto.getFunctionName());
  }
  for (  AnomalyFunctionDTO dto : dtoSrcList) {
    if (!uniques.contains(dto.getFunctionName())) {
      dto.setId(null);
      jdbcManager.save(dto);
    }
 else {
      System.out.println("Skipping creating function for key:" + dto.getFunctionName() + " since it already exists.");
    }
  }
}
