{
  List<Pair<Long,Long>> optimizedTimeRanges;
  if (startEndTimeRanges.size() > 1) {
    optimizedTimeRanges=new ArrayList<>();
    Pair<Long,Long> lastTimePair=startEndTimeRanges.get(0);
    for (int i=1; i < startEndTimeRanges.size(); i++) {
      Pair<Long,Long> currentTimePair=startEndTimeRanges.get(i);
      if (lastTimePair.getSecond() < currentTimePair.getFirst()) {
        optimizedTimeRanges.add(lastTimePair);
        lastTimePair=currentTimePair;
      }
 else {
        if (lastTimePair.getSecond() < currentTimePair.getSecond()) {
          lastTimePair.setSecond(currentTimePair.getSecond());
        }
      }
      if (i == startEndTimeRanges.size() - 1) {
        optimizedTimeRanges.add(lastTimePair);
      }
    }
  }
 else {
    optimizedTimeRanges=startEndTimeRanges;
  }
  return optimizedTimeRanges;
}
