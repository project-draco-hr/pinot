{
  File dataFile=new File(Quickstart.class.getClassLoader().getResource("sample_data/baseball.csv").getFile());
  File schemaFile=new File(Quickstart.class.getClassLoader().getResource("sample_data/baseball.schema").getFile());
  File tempDir=new File("/tmp/" + String.valueOf(System.currentTimeMillis()));
  String tableName="baseballStats";
  final Quickstart runner=new Quickstart(schemaFile,dataFile,tempDir,tableName);
  runner.startAll();
  runner.addSchema();
  runner.addTable();
  runner.buildSegment();
  runner.pushSegment();
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      try {
        runner.clean();
        runner.stop();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
  Desktop desktop=Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
  if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
    try {
      desktop.browse(new URI("http://localhost:9000/query/"));
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  System.out.println("quickstart setup complete");
  try {
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    String line;
    while ((line=br.readLine()) != null) {
      try {
        if (line.startsWith("run")) {
          String query=line.substring(line.indexOf("run") + "run".length(),line.length());
          System.out.println("running query : " + query);
          System.out.println(runner.runQuery(query).toString(1));
          continue;
        }
        quickstartCommands cmd=quickstartCommands.valueOf(line);
        if (cmd == quickstartCommands.quit || cmd == quickstartCommands.exit) {
          runner.clean();
          runner.stop();
          System.exit(0);
        }
        runner.printUsageAndInfo();
      }
 catch (      Exception e) {
        System.out.println("cannot understand command : " + line + " : only commands understood are : ");
      }
    }
  }
 catch (  IOException io) {
    io.printStackTrace();
  }
}
