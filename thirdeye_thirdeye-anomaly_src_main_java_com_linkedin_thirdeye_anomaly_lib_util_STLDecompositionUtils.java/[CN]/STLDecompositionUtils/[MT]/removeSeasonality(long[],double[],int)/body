{
  int numDataPoints=timestamps.length;
  if (numDataPoints != series.length) {
    throw new IllegalArgumentException("time series lengths do not match");
  }
  if (seasonality < 0) {
    throw new IllegalArgumentException("seasonality cannot be negative");
  }
  Process process=null;
  BufferedReader stdout=null;
  BufferedWriter stdin=null;
  try {
    ProcessBuilder processBuilder=new ProcessBuilder("Rscript",TMP_STL_WRAPPER_R_PATH,"" + seasonality);
    processBuilder.redirectErrorStream(true);
    process=processBuilder.start();
    stdout=new BufferedReader(new InputStreamReader(process.getInputStream()));
    stdin=new BufferedWriter(new OutputStreamWriter(process.getOutputStream()));
    stdin.write("\"Bucket\",\"Series\"\n");
    for (int i=0; i < numDataPoints; i++) {
      stdin.write(timestamps[i] + "," + series[i]+ "\n");
    }
    stdin.close();
    process.waitFor();
    double[] result=new double[numDataPoints];
    for (int i=0; i < numDataPoints; i++) {
      String line=stdout.readLine();
      result[i]=Double.valueOf(line);
    }
    return result;
  }
 catch (  Exception e) {
    LOGGER.info("exception trying to run stl",e);
    return null;
  }
 finally {
    if (stdin != null) {
      try {
        stdin.close();
      }
 catch (      IOException e1) {
        e1.printStackTrace();
      }
    }
    if (stdout != null) {
      try {
        stdout.close();
      }
 catch (      IOException e1) {
        e1.printStackTrace();
      }
    }
    if (process != null) {
      process.destroyForcibly();
    }
  }
}
