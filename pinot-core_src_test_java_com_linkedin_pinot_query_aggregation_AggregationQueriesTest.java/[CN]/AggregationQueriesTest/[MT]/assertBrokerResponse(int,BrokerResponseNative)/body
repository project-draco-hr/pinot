{
  Assert.assertEquals(10001 * numSegments,brokerResponse.getNumDocsScanned());
  Assert.assertEquals(_numAggregations,brokerResponse.getAggregationResults().size());
  AggregationResult aggregationResult=brokerResponse.getAggregationResults().get(0);
  Assert.assertEquals(aggregationResult.getFunction(),"count_star");
  Assert.assertEquals(Integer.parseInt(aggregationResult.getValue().toString()),10001 * numSegments);
  aggregationResult=brokerResponse.getAggregationResults().get(1);
  Assert.assertEquals(aggregationResult.getFunction(),"sum_met_impressionCount");
  Assert.assertEquals(DoubleComparisonUtil.defaultDoubleCompare(1343930646015719300000000.00000,Double.parseDouble(aggregationResult.getValue().toString())),0);
  aggregationResult=brokerResponse.getAggregationResults().get(2);
  Assert.assertEquals(aggregationResult.getFunction(),"max_met_impressionCount");
  Assert.assertEquals(DoubleComparisonUtil.defaultDoubleCompare(8637957270245934100.0,Double.parseDouble(aggregationResult.getValue().toString())),0);
  aggregationResult=brokerResponse.getAggregationResults().get(3);
  Assert.assertEquals(aggregationResult.getFunction(),"min_met_impressionCount");
  Assert.assertEquals(DoubleComparisonUtil.defaultDoubleCompare(614819680033322500.0,Double.parseDouble(aggregationResult.getValue().toString())),0);
  aggregationResult=brokerResponse.getAggregationResults().get(4);
  Assert.assertEquals(aggregationResult.getFunction(),"avg_met_impressionCount");
  Assert.assertEquals(DoubleComparisonUtil.defaultDoubleCompare(6718981331945402400.0,Double.parseDouble(aggregationResult.getValue().toString())),0);
  aggregationResult=brokerResponse.getAggregationResults().get(5);
  Assert.assertEquals(aggregationResult.getFunction(),"distinctCount_column12");
  Assert.assertEquals(Integer.parseInt(aggregationResult.getValue().toString()),146);
  aggregationResult=brokerResponse.getAggregationResults().get(6);
  Assert.assertEquals(aggregationResult.getFunction(),"distinctCount_met_impressionCount");
  Assert.assertEquals(Integer.parseInt(aggregationResult.getValue().toString()),21);
}
