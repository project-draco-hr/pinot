{
  int n=anomalyResults.size();
  RawAnomalyResultDTO firstAnomalyResult=anomalyResults.get(0);
  RawAnomalyResultDTO lastAnomalyResult=anomalyResults.get(n - 1);
  RawAnomalyResultDTO mergedAnomalyResult=new RawAnomalyResultDTO();
  mergedAnomalyResult.setDimensions(firstAnomalyResult.getDimensions());
  mergedAnomalyResult.setProperties(firstAnomalyResult.getProperties());
  mergedAnomalyResult.setStartTime(firstAnomalyResult.getStartTime());
  mergedAnomalyResult.setEndTime(lastAnomalyResult.getEndTime());
  mergedAnomalyResult.setWeight(firstAnomalyResult.getWeight());
  double summedScore=0;
  for (  RawAnomalyResultDTO anomalyResult : anomalyResults) {
    summedScore+=anomalyResult.getScore();
  }
  mergedAnomalyResult.setScore(summedScore / n);
  String message=getMergedAnomalyResultMessage(threshold,baselineProp,currentValues,baselineValues);
  mergedAnomalyResult.setMessage(message);
  return mergedAnomalyResult;
}
