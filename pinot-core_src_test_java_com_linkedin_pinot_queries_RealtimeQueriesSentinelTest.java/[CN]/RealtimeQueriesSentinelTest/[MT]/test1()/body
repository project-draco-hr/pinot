{
  final Map<ServerInstance,DataTable> instanceResponseMap=new HashMap<ServerInstance,DataTable>();
  String query="select sum('count') from mirror where column13='1540094560' group by column3 top 100 limit 0";
  Map<Object,Double> fromAvro=new HashMap<Object,Double>();
  fromAvro.put(null,2.0D);
  fromAvro.put("",1.2469280068E10D);
  fromAvro.put("F",127.0D);
  fromAvro.put("A",20.0D);
  fromAvro.put("H",29.0D);
  final BrokerRequest brokerRequest=RequestConverter.fromJSON(REQUEST_COMPILER.compile(query));
  InstanceRequest instanceRequest=new InstanceRequest(485,brokerRequest);
  instanceRequest.setSearchSegments(new ArrayList<String>());
  instanceRequest.getSearchSegments().add("mirror_mirror");
  DataTable instanceResponse=QUERY_EXECUTOR.processQuery(instanceRequest);
  instanceResponseMap.clear();
  instanceResponseMap.put(new ServerInstance("localhost:0000"),instanceResponse);
  BrokerResponse brokerResponse=REDUCE_SERVICE.reduceOnDataTable(brokerRequest,instanceResponseMap);
  JSONArray actual=brokerResponse.getAggregationResults().get(0).getJSONArray("groupByResult");
  LOGGER.info("actual : {}",brokerResponse.getAggregationResults().get(0).toString(1));
  LOGGER.info("expected : {}",fromAvro);
  assertGroupByResults(actual,fromAvro);
}
