{
  MetricType[] metricTypes=new MetricType[original.getSchema().getNumMetrics()];
  Arrays.fill(metricTypes,MetricType.DOUBLE);
  MetricTimeSeries normalized=new MetricTimeSeries(new MetricSchema(original.getSchema().getNames(),Arrays.asList(metricTypes)));
  Number[] firstNonZero=new Number[original.getSchema().getNumMetrics()];
  Arrays.fill(firstNonZero,0);
  List<Long> sortedTimes=new ArrayList<Long>(original.getTimeWindowSet());
  Collections.sort(sortedTimes);
  for (int i=0; i < original.getSchema().getNumMetrics(); i++) {
    String metricName=original.getSchema().getMetricName(i);
    for (    Long time : sortedTimes) {
      Number value=original.get(time,metricName);
      if (value != null && value.doubleValue() > 0) {
        firstNonZero[i]=value;
        break;
      }
    }
  }
  for (  Long time : sortedTimes) {
    for (int i=0; i < original.getSchema().getNumMetrics(); i++) {
      String metricName=original.getSchema().getMetricName(i);
      MetricType metricType=original.getSchema().getMetricType(i);
      Number value=original.get(time,metricName);
      if (NumberUtils.isZero(firstNonZero[i],metricType)) {
        normalized.set(time,metricName,0);
      }
 else {
        normalized.set(time,metricName,value.doubleValue() / firstNonZero[i].doubleValue());
      }
    }
  }
  return normalized;
}
