{
  String tableName=entityMappingHolder.tableToEntityNameMap.inverse().get(entityClass.getSimpleName());
  BiMap<String,String> entityNameToDBNameMapping=entityMappingHolder.columnMappingPerTable.get(tableName).inverse();
  StringBuilder sqlBuilder=new StringBuilder("DELETE FROM " + tableName);
  StringBuilder whereClause=new StringBuilder(" WHERE ");
  LinkedHashMap<String,Object> parametersMap=new LinkedHashMap<>();
  for (  String columnName : filters.keySet()) {
    String dbFieldName=entityNameToDBNameMapping.get(columnName);
    whereClause.append(dbFieldName).append("=").append("?");
    parametersMap.put(dbFieldName,filters.get(columnName));
  }
  sqlBuilder.append(whereClause.toString());
  PreparedStatement prepareStatement=connection.prepareStatement(sqlBuilder.toString());
  int parameterIndex=1;
  LinkedHashMap<String,ColumnInfo> columnInfoMap=entityMappingHolder.columnInfoPerTable.get(tableName);
  for (  Entry<String,Object> paramEntry : parametersMap.entrySet()) {
    String dbFieldName=paramEntry.getKey();
    ColumnInfo info=columnInfoMap.get(dbFieldName);
    prepareStatement.setObject(parameterIndex++,paramEntry.getValue(),info.sqlType);
  }
  return prepareStatement;
}
