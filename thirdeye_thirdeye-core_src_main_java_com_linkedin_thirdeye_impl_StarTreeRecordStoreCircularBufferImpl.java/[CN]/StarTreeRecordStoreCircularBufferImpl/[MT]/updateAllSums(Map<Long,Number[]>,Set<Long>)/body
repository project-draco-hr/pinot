{
  int base=buffer.position();
  for (  Long time : timeBuckets) {
    Number[] sums=allSums.get(time);
    if (sums == null) {
      sums=new Number[metricSpecs.size()];
      Arrays.fill(sums,0);
      allSums.put(time,sums);
    }
    int bucket=(int)(time % numTimeBuckets);
    buffer.position(base + bucket * timeBucketSize);
    long t=buffer.getLong();
    if (t == time) {
      for (int i=0; i < metricSpecs.size(); i++) {
        Number val=NumberUtils.readFromBuffer(buffer,metricSpecs.get(i).getType());
        sums[i]=NumberUtils.sum(sums[i],val,metricSpecs.get(i).getType());
      }
    }
  }
}
