{
  PinotResourceManagerResponse res;
  res=_pinotResourceManager.createBrokerResourceTag(ControllerRequestBuilderUtil.createBrokerTagResourceConfig(1,"broker_tag0"));
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,true);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag0").size(),1);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),4);
  res=_pinotResourceManager.createBrokerResourceTag(ControllerRequestBuilderUtil.createBrokerTagResourceConfig(2,"broker_tag1"));
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,true);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag0").size(),1);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag1").size(),2);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),2);
  res=_pinotResourceManager.createBrokerResourceTag(ControllerRequestBuilderUtil.createBrokerTagResourceConfig(3,"broker_tag2"));
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,false);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag0").size(),1);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag1").size(),2);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),2);
  res=_pinotResourceManager.createBrokerResourceTag(ControllerRequestBuilderUtil.createBrokerTagResourceConfig(3,"tag2"));
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,false);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag0").size(),1);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag1").size(),2);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),2);
  res=_pinotResourceManager.createBrokerResourceTag(ControllerRequestBuilderUtil.createBrokerTagResourceConfig(3,"broker_tag1"));
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,true);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag0").size(),1);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag1").size(),3);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),1);
  res=_pinotResourceManager.deleteBrokerResourceTag("broker_tag0");
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,true);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_tag1").size(),3);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),2);
  res=_pinotResourceManager.deleteBrokerResourceTag("broker_tag1");
  System.out.println(res);
  Thread.sleep(2000);
  Assert.assertEquals(res.status == STATUS.success,true);
  Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,"broker_untagged").size(),5);
}
