{
  this.docIdSets=blockDocIdSets;
  final BlockDocIdIterator[] docIdIterators=new BlockDocIdIterator[blockDocIdSets.size()];
  for (int srcId=0; srcId < blockDocIdSets.size(); srcId++) {
    docIdIterators[srcId]=blockDocIdSets.get(srcId).iterator();
  }
  this.docIdIterators=docIdIterators;
  minDocId=Integer.MAX_VALUE;
  maxDocId=Integer.MIN_VALUE;
  for (  BlockDocIdSet blockDocIdSet : blockDocIdSets) {
    if (blockDocIdSet instanceof SortedDocIdSet) {
      SortedDocIdSet sortedDocIdSet=(SortedDocIdSet)blockDocIdSet;
      minDocId=Math.min(minDocId,sortedDocIdSet.getMinDocId());
      maxDocId=Math.max(maxDocId,sortedDocIdSet.getMaxDocId());
    }
 else     if (blockDocIdSet instanceof AndBlockDocIdSet) {
      AndBlockDocIdSet andBlockDocIdSet=(AndBlockDocIdSet)blockDocIdSet;
      minDocId=Math.min(minDocId,andBlockDocIdSet.getMinDocId());
      maxDocId=Math.max(maxDocId,andBlockDocIdSet.getMaxDocId());
    }
  }
  for (  BlockDocIdSet blockDocIdSet : blockDocIdSets) {
    if (blockDocIdSet instanceof SortedDocIdSet) {
      SortedDocIdSet sortedDocIdSet=(SortedDocIdSet)blockDocIdSet;
      sortedDocIdSet.setStartDocId(minDocId);
      sortedDocIdSet.setEndDocId(maxDocId);
    }
 else     if (blockDocIdSet instanceof OrBlockDocIdSet) {
      OrBlockDocIdSet orBlockDocIdSet=(OrBlockDocIdSet)blockDocIdSet;
      orBlockDocIdSet.setStartDocId(minDocId);
      orBlockDocIdSet.setEndDocId(maxDocId);
    }
 else     if (blockDocIdSet instanceof ScanBasedSingleValueDocIdSet) {
      ScanBasedSingleValueDocIdSet scanBasedSingleValueDocIdSet=(ScanBasedSingleValueDocIdSet)blockDocIdSet;
      scanBasedSingleValueDocIdSet.setStartDocId(minDocId);
      scanBasedSingleValueDocIdSet.setEndDocId(maxDocId);
    }
 else     if (blockDocIdSet instanceof ScanBasedMultiValueDocIdSet) {
      ScanBasedMultiValueDocIdSet scanBasedMultiValueDocIdSet=(ScanBasedMultiValueDocIdSet)blockDocIdSet;
      scanBasedMultiValueDocIdSet.setStartDocId(minDocId);
      scanBasedMultiValueDocIdSet.setEndDocId(maxDocId);
    }
  }
}
