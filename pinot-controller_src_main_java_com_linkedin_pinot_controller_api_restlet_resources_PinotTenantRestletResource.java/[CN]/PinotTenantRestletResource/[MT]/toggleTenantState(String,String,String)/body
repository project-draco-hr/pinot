{
  Set<String> serverInstances=new HashSet<String>();
  Set<String> brokerInstances=new HashSet<String>();
  JSONObject instanceResult=new JSONObject();
  if ((type == null) || type.equalsIgnoreCase("server")) {
    serverInstances=_pinotHelixResourceManager.getAllInstancesForServerTenant(tenantName);
  }
  if ((type == null) || type.equalsIgnoreCase("broker")) {
    brokerInstances=_pinotHelixResourceManager.getAllInstancesForBrokerTenant(tenantName);
  }
  Set<String> allInstances=new HashSet<String>(serverInstances);
  allInstances.addAll(brokerInstances);
  if (StateType.DROP.name().equalsIgnoreCase(state)) {
    if (!allInstances.isEmpty()) {
      setStatus(Status.CLIENT_ERROR_BAD_REQUEST);
      return new StringRepresentation("Error: Tenant " + tenantName + " has live instances, cannot be dropped.");
    }
    _pinotHelixResourceManager.deleteBrokerTenantFor(tenantName);
    _pinotHelixResourceManager.deleteOfflineServerTenantFor(tenantName);
    _pinotHelixResourceManager.deleteRealtimeServerTenantFor(tenantName);
    return new StringRepresentation("Dropped tenant " + tenantName + " successfully.");
  }
  boolean enable=StateType.ENABLE.name().equalsIgnoreCase(state) ? true : false;
  for (  String instance : allInstances) {
    if (enable) {
      instanceResult.put(instance,_pinotHelixResourceManager.enableInstance(instance));
    }
 else {
      instanceResult.put(instance,_pinotHelixResourceManager.disableInstance(instance));
    }
  }
  return new StringRepresentation(instanceResult.toString(),MediaType.APPLICATION_JSON);
}
