{
  int[] maxBitArray=new int[]{4};
  for (  int maxBits : maxBitArray) {
    String fileName="test" + maxBits + "FixedBitWidthSingleCol";
    File file=new File(fileName);
    try {
      System.out.println("START MAX BITS:" + maxBits);
      int numElements=100;
      int requiredBits=maxBits + 1;
      CustomBitSet bitset=CustomBitSet.withBitLength(numElements * requiredBits);
      int max=(int)Math.pow(2,maxBits);
      Random r=new Random();
      int[] values=new int[numElements];
      int offset=max - 1;
      for (int i=0; i < numElements; i++) {
        int value=r.nextInt(max);
        if (Math.random() > .5) {
          value=-1 * value;
        }
        values[i]=value;
        int offsetValue=offset + value;
        for (int j=requiredBits - 1; j >= 0; j--) {
          if ((offsetValue & (1 << j)) != 0) {
            bitset.setBit(i * requiredBits + (requiredBits - j - 1));
          }
        }
      }
      byte[] byteArray=bitset.toByteArray();
      FileOutputStream fos=new FileOutputStream(file);
      fos.write(byteArray);
      fos.close();
      FixedBitWidthRowColDataFileReader heapReader=FixedBitWidthRowColDataFileReader.forHeap(file,numElements,1,new int[]{maxBits},new boolean[]{true});
      for (int i=0; i < numElements; i++) {
        int readInt=heapReader.getInt(i,0);
        System.out.println(i + "  Expected:" + values[i]+ " Actual:"+ readInt);
        Assert.assertEquals(readInt,values[i]);
      }
      heapReader.close();
      FixedBitWidthRowColDataFileReader mmapReader=FixedBitWidthRowColDataFileReader.forMmap(file,numElements,1,new int[]{maxBits},new boolean[]{true});
      for (int i=0; i < numElements; i++) {
        int readInt=mmapReader.getInt(i,0);
        System.out.println(i + "  Expected:" + values[i]+ " Actual:"+ readInt);
        Assert.assertEquals(readInt,values[i]);
      }
      mmapReader.close();
      System.out.println("END MAX BITS:" + maxBits);
    }
  finally {
      file.delete();
    }
  }
}
