{
  Representation rep=null;
  File tmpSegmentDir=null;
  File dataFile=null;
  try {
    final DiskFileItemFactory factory=new DiskFileItemFactory();
    final RestletFileUpload upload=new RestletFileUpload(factory);
    final List<FileItem> items;
    items=upload.parseRequest(getRequest());
    boolean found=false;
    for (final Iterator<FileItem> it=items.iterator(); it.hasNext() && !found; ) {
      final FileItem fi=it.next();
      if (fi.getFieldName() != null) {
        found=true;
        dataFile=new File(tempDir,fi.getFieldName());
        fi.write(dataFile);
      }
    }
    if (found) {
      rep=new StringRepresentation(dataFile + " sucessfully uploaded",MediaType.TEXT_PLAIN);
      tmpSegmentDir=new File(tempUntarredPath,dataFile.getName() + "-" + _controllerConf.getControllerHost()+ "_"+ _controllerConf.getControllerPort()+ "-"+ System.currentTimeMillis());
      LOGGER.info("Untar segment to temp dir: " + tmpSegmentDir);
      if (tmpSegmentDir.exists()) {
        FileUtils.deleteDirectory(tmpSegmentDir);
      }
      if (!tmpSegmentDir.exists()) {
        tmpSegmentDir.mkdirs();
      }
      TarGzCompressionUtils.unTar(dataFile,tmpSegmentDir);
      File segmentFile=tmpSegmentDir.listFiles()[0];
      String clientIpAddress=getClientInfo().getAddress();
      String clientAddress=InetAddress.getByName(clientIpAddress).getHostName();
      LOGGER.info("Processing upload request for segment '{}' from client '{}'",segmentFile.getName(),clientAddress);
      return uploadSegment(segmentFile,dataFile);
    }
 else {
      rep=new StringRepresentation("no file uploaded",MediaType.TEXT_PLAIN);
      LOGGER.warn("No file was uploaded");
      ControllerRestApplication.getControllerMetrics().addMeteredGlobalValue(ControllerMeter.CONTROLLER_SEGMENT_UPLOAD_ERROR,1L);
      setStatus(Status.SERVER_ERROR_INTERNAL);
    }
  }
 catch (  final Exception e) {
    rep=exceptionToStringRepresentation(e);
    LOGGER.error("Caught exception in file upload",e);
    ControllerRestApplication.getControllerMetrics().addMeteredGlobalValue(ControllerMeter.CONTROLLER_SEGMENT_UPLOAD_ERROR,1L);
    setStatus(Status.SERVER_ERROR_INTERNAL);
  }
 finally {
    if ((tmpSegmentDir != null) && tmpSegmentDir.exists()) {
      try {
        FileUtils.deleteDirectory(tmpSegmentDir);
      }
 catch (      final IOException e) {
        LOGGER.error("Caught exception in file upload",e);
        ControllerRestApplication.getControllerMetrics().addMeteredGlobalValue(ControllerMeter.CONTROLLER_SEGMENT_UPLOAD_ERROR,1L);
        setStatus(Status.SERVER_ERROR_INTERNAL);
      }
    }
    if ((dataFile != null) && dataFile.exists()) {
      FileUtils.deleteQuietly(dataFile);
    }
  }
  return rep;
}
