{
  List<AnomalyResult> timeFilteredResults=new ArrayList<AnomalyResult>();
  List<AnomalyResult> intermediateResults=childFunc.analyze(dimensionKey,series,timeInterval);
  for (  AnomalyResult intermediateResult : intermediateResults) {
    DateTime resultDtUTC=new DateTime(intermediateResult.getTimeWindow(),DateTimeZone.UTC);
    DateTime resultDtEvalTz=resultDtUTC.withZone(DateTimeZone.forTimeZone(evalTimeZone));
    Date dateEvalTz=resultDtEvalTz.toDate();
    if (cronExpression.isSatisfiedBy(dateEvalTz)) {
      timeFilteredResults.add(intermediateResult);
      LOGGER.info("cron definition satisfied : {} - {} - {}",resultDtUTC,resultDtEvalTz,dateEvalTz);
    }
  }
  return timeFilteredResults;
}
