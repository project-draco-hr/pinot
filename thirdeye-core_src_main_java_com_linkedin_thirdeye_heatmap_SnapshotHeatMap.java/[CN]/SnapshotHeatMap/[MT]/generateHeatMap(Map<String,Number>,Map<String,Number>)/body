{
  int keyCount=0;
  Set<Map.Entry<String,Number>> baselineSet=baseline.entrySet();
  for (  Map.Entry<String,Number> baselineEntry : baselineSet) {
    String keyValue=baselineEntry.getKey();
    double s1=baselineEntry.getValue().doubleValue();
    double s2=current.get(keyValue).doubleValue();
    double[] s=new double[2];
    s[0]=s1;
    s[1]=s2;
    _snapshotDictionary.put(keyValue,s);
    _dimensionValue[keyCount]=keyValue;
    keyCount=keyCount + 1;
  }
  Stats baselineStats=getStats(baseline);
  Stats currentStats=getStats(current);
  double baselineSum=baselineStats.getSum();
  double currentSum=currentStats.getSum();
  List<HeatMapCell> cells=new ArrayList<HeatMapCell>();
  String resultString=updateRecords();
  for (  String entryString : resultString.split(",")) {
    if (_snapshotDictionary.containsKey(entryString)) {
      double[] valueList=_snapshotDictionary.get(entryString);
      baselineSum=baselineSum - valueList[0];
      currentSum=currentSum - valueList[1];
    }
  }
  double restRatio=currentSum / baselineSum - 1;
  HeatMapCell cell=new HeatMapCell("Rest",currentSum,baselineSum,restRatio,0.0,COLOR);
  cells.add(cell);
  for (  String entryString : resultString.split(",")) {
    if (_snapshotDictionary.containsKey(entryString)) {
      double[] valueList=_snapshotDictionary.get(entryString);
      double ratio=valueList[1] / valueList[0] - 1;
      String colorString=COLOR;
      if (ratio < 0) {
        colorString=DOWNCOLOR;
      }
      if (ratio >= 0) {
        colorString=UPCOLOR;
      }
      cell=new HeatMapCell(entryString,valueList[1],valueList[0],ratio,0.0,colorString);
      cells.add(cell);
    }
  }
  return cells;
}
