{
  if (_propertyStore == null) {
    return;
  }
  String tableName=externalView.getResourceName();
  if (TableNameBuilder.getTableTypeFromTableName(tableName) == TableType.REALTIME) {
    return;
  }
  Set<String> offlineSegmentsServing=externalView.getPartitionSet();
  if (offlineSegmentsServing.isEmpty()) {
    LOGGER.info("Skipping updating time boundary service for table '{}' with no offline segments.",tableName);
    return;
  }
  AbstractTableConfig offlineTableConfig=ZKMetadataProvider.getOfflineTableConfig(_propertyStore,tableName);
  String timeType=offlineTableConfig.getValidationConfig().getTimeType();
  TimeUnit tableTimeUnit=getTimeUnitFromString(timeType);
  if (tableTimeUnit == null) {
    LOGGER.info("Skipping updating time boundary service for table '{}' with null timeUnit, config time type: {}.",tableName,timeType);
    return;
  }
  List<OfflineSegmentZKMetadata> segmentZKMetadataList=ZKMetadataProvider.getOfflineSegmentZKMetadataListForTable(_propertyStore,tableName);
  long maxTimeValue=computeMaxSegmentEndTimeForTable(segmentZKMetadataList,tableTimeUnit);
  TimeBoundaryInfo timeBoundaryInfo=new TimeBoundaryInfo();
  timeBoundaryInfo.setTimeColumn(offlineTableConfig.getValidationConfig().getTimeColumnName());
  timeBoundaryInfo.setTimeValue(Long.toString(maxTimeValue));
  _timeBoundaryInfoMap.put(tableName,timeBoundaryInfo);
  LOGGER.info("Updated time boundary service for table '{}', maxTime: {}",tableName,maxTimeValue);
}
