{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map16=iprot.readMapBegin();
          struct.filterQueryMap=new HashMap<Integer,FilterQuery>(2 * _map16.size);
          int _key17;
          FilterQuery _val18;
          for (int _i19=0; _i19 < _map16.size; ++_i19) {
            _key17=iprot.readI32();
            _val18=new FilterQuery();
            _val18.read(iprot);
            struct.filterQueryMap.put(_key17,_val18);
          }
          iprot.readMapEnd();
        }
        struct.setFilterQueryMapIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
