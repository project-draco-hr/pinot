{
  try (CloseableHttpClient client=HttpClients.createDefault()){
    HttpPost post=new HttpPost("http://localhost:8099/query");
    CloseableHttpResponse res;
    if (STORE_RESULT) {
      File dir=new File(RESULT_DIR);
      if (!dir.exists()) {
        dir.mkdirs();
      }
    }
    int length;
    System.out.println("Test if number of records is " + RECORD_NUMBER);
    post.setEntity(new StringEntity("{\"pql\":\"select count(*) from tpch_lineitem\"}"));
    while (true) {
      System.out.print('*');
      res=client.execute(post);
      boolean valid;
      try (BufferedInputStream in=new BufferedInputStream(res.getEntity().getContent())){
        length=in.read(BUFFER);
        valid=new String(BUFFER,0,length,"UTF-8").contains("\"value\":\"" + RECORD_NUMBER + "\"");
      }
       res.close();
      if (valid) {
        break;
      }
 else {
        Thread.sleep(5000);
      }
    }
    System.out.println("Number of Records Test Passed");
    for (int i=0; i < QUERIES.length; i++) {
      System.out.println("--------------------------------------------------------------------------------");
      System.out.println("Start running query: " + QUERIES[i]);
      post.setEntity(new StringEntity("{\"pql\":\"" + QUERIES[i] + "\"}"));
      System.out.println("Run " + WARMUP_ROUND + " times to warm up cache...");
      for (int j=0; j < WARMUP_ROUND; j++) {
        res=client.execute(post);
        if (!isValid(res,null)) {
          System.out.println("\nInvalid Response, Sleep 20 Seconds...");
          Thread.sleep(20000);
        }
        res.close();
        System.out.print('*');
      }
      System.out.println();
      int[] time=new int[TEST_ROUND];
      int totalTime=0;
      int validIdx=0;
      System.out.println("Run " + TEST_ROUND + " times to get average time...");
      while (validIdx < TEST_ROUND) {
        long startTime=System.currentTimeMillis();
        res=client.execute(post);
        long endTime=System.currentTimeMillis();
        boolean valid;
        if (STORE_RESULT && validIdx == 0) {
          valid=isValid(res,RESULT_DIR + File.separator + i+ ".json");
        }
 else {
          valid=isValid(res,null);
        }
        if (!valid) {
          System.out.println("\nInvalid Response, Sleep 20 Seconds...");
          Thread.sleep(20000);
          res.close();
          continue;
        }
        res.close();
        time[validIdx]=(int)(endTime - startTime);
        totalTime+=time[validIdx];
        System.out.print(time[validIdx] + "ms ");
        validIdx++;
      }
      System.out.println();
      double avgTime=(double)totalTime / TEST_ROUND;
      double stdDev=0;
      for (      int temp : time) {
        stdDev+=(temp - avgTime) * (temp - avgTime) / TEST_ROUND;
      }
      stdDev=Math.sqrt(stdDev);
      System.out.println("The average response time for the query is: " + avgTime + "ms");
      System.out.println("The standard deviation is: " + stdDev);
    }
  }
 }
