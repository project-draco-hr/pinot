{
  url=new URL("http://localhost:" + FileBasedServerBrokerStarters.BROKER_CLIENT_PORT + "/query");
  final String[] columns={"dimention1","dimention2","dimention3","dimention4","metric1","daysSinceEpoch"};
  final Map<String,DataType> dataTypes=new HashMap<String,FieldSpec.DataType>();
  final Map<String,FieldType> fieldTypes=new HashMap<String,FieldType>();
  final Map<String,TimeUnit> timeUnits=new HashMap<String,TimeUnit>();
  final Map<String,Integer> cardinality=new HashMap<String,Integer>();
  final Map<String,IntRange> range=new HashMap<String,IntRange>();
  for (  final String col : columns) {
    if (col.equals("dimention1")) {
      dataTypes.put(col,DataType.STRING);
      cardinality.put(col,1000);
    }
 else {
      dataTypes.put(col,DataType.INT);
      cardinality.put(col,1000);
    }
    fieldTypes.put(col,FieldType.DIMENSION);
  }
  if (avroDataDir.exists()) {
    FileUtils.deleteDirectory(avroDataDir);
  }
  final DataGeneratorSpec spec=new DataGeneratorSpec(Arrays.asList(columns),cardinality,range,dataTypes,fieldTypes,timeUnits,FileFormat.AVRO,avroDataDir.getAbsolutePath(),true);
  generator=new DataGenerator();
  generator.init(spec);
  generator.generate(100000L,2);
  final File bootstrapDir=new File(FileBasedServerBrokerStarters.SERVER_BOOTSTRAP_DIR);
  if (bootstrapDir.exists()) {
    FileUtils.deleteDirectory(bootstrapDir);
  }
  bootstrapDir.mkdir();
  int counter=0;
  for (  final File avro : avroDataDir.listFiles()) {
    for (    final String table : FileBasedServerBrokerStarters.TABLE_NAMES) {
      final SegmentGeneratorConfig genConfig=SegmentTestUtils.getSegmentGenSpecWithSchemAndProjectedColumns(avro,new File(bootstrapDir,"segment-" + counter),TimeUnit.DAYS,table);
      final SegmentIndexCreationDriver driver=SegmentCreationDriverFactory.get(null);
      driver.init(genConfig);
      driver.build();
      counter++;
    }
  }
  starter=new FileBasedServerBrokerStarters();
  starter.startAll();
  final JSONObject selectionRequestResponse=postQuery("select * from 'table1' limit 100","http://localhost:" + FileBasedServerBrokerStarters.BROKER_CLIENT_PORT,false);
  System.out.println(selectionRequestResponse.toString(1));
}
