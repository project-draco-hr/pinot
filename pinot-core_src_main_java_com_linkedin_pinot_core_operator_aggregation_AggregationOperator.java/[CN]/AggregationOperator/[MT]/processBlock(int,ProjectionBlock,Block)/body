{
  if (block instanceof DocIdSetBlock) {
    DocIdSetBlock docIdSetBlock=(DocIdSetBlock)block;
    int length=docIdSetBlock.getSearchableLength();
    _aggregationExecutor.aggregate(docIdSetBlock.getDocIdSet(),0,length);
    numDocsScanned+=length;
  }
 else {
    if (_reusableDocIdSet == null) {
      _reusableDocIdSet=new int[DocIdSetPlanNode.MAX_DOC_PER_CALL];
    }
    BlockDocIdSet blockDocIdSet=currentBlock.getBlockDocIdSet();
    BlockDocIdIterator iterator=blockDocIdSet.iterator();
    int docId;
    int pos=0;
    while ((docId=iterator.next()) != Constants.EOF) {
      _reusableDocIdSet[pos++]=docId;
      if (pos == DocIdSetPlanNode.MAX_DOC_PER_CALL) {
        numDocsScanned+=pos;
        _aggregationExecutor.aggregate(_reusableDocIdSet,0,pos);
        pos=0;
      }
    }
    if (pos > 0) {
      _aggregationExecutor.aggregate(_reusableDocIdSet,0,pos);
      numDocsScanned+=pos;
    }
  }
  return numDocsScanned;
}
