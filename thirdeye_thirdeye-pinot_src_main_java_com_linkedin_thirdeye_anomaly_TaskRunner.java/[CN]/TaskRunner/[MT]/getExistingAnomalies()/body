{
  List<AnomalyResult> results=new ArrayList<>();
  Session session=sessionFactory.openSession();
  try {
    ManagedSessionContext.bind(session);
    Transaction transaction=session.beginTransaction();
    try {
      results.addAll(resultDAO.findAllByCollectionTimeAndFunction(collection,windowStart,windowEnd,anomalyFunction.getSpec().getId()));
      List<AnomalyFunctionRelation> relations=relationDAO.findByParent(anomalyFunction.getSpec().getId());
      for (      AnomalyFunctionRelation relation : relations) {
        results.addAll(resultDAO.findAllByCollectionTimeAndFunction(collection,windowStart,windowEnd,relation.getChildId()));
      }
      transaction.commit();
    }
 catch (    Exception e) {
      transaction.rollback();
      e.printStackTrace();
    }
  }
  finally {
    session.close();
    ManagedSessionContext.unbind(sessionFactory);
  }
  return results;
}
