{
  final Object[] multiValues=(Object[])e;
  final int[] ret=new int[multiValues.length];
switch (spec.getDataType()) {
case INT:
    for (int i=0; i < multiValues.length; i++) {
      ret[i]=intValueToIndexMap.get(multiValues[i]);
    }
  break;
case FLOAT:
for (int i=0; i < multiValues.length; i++) {
  ret[i]=floatValueToIndexMap.get(multiValues[i]);
}
break;
case LONG:
for (int i=0; i < multiValues.length; i++) {
ret[i]=longValueToIndexMap.get(multiValues[i]);
}
break;
case DOUBLE:
for (int i=0; i < multiValues.length; i++) {
ret[i]=doubleValueToIndexMap.get(multiValues[i]);
}
break;
case STRING:
case BOOLEAN:
for (int i=0; i < multiValues.length; i++) {
String value=multiValues[i].toString();
ret[i]=stringValueToIndexMap.get(value);
}
break;
default :
throw new UnsupportedOperationException("Unsupported data type : " + spec.getDataType() + " for multivalue column : "+ spec.getName());
}
return ret;
}
