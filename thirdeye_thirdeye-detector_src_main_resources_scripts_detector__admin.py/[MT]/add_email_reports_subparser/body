def add_email_reports_subparser(subparsers):
    ' GET, GET <id>, POST <data>, POST <id> (adhoc), DELETE <id> '
    email_reports = subparsers.add_parser('reports', help='email report definitions')
    email_reports_subparser = email_reports.add_subparsers()
    show_parser = email_reports_subparser.add_parser('show', help='show all email reports')
    show_parser.set_defaults(func=show_email_reports)
    find_parser = email_reports_subparser.add_parser('find', help='find an email report')
    find_parser.add_argument('inps', type=int, nargs='+', help='email_report ids', metavar='ids')
    find_parser.set_defaults(func=find_email_report)
    create_parser = email_reports_subparser.add_parser('create', help='create a new email report. be sure to reset the scheduler afterwards!')
    create_parser.add_argument('inps', nargs='+', help='JSON files specifying email reports to be created', metavar='file_paths')
    create_parser.set_defaults(func=create_email_report)
    adhoc_parser = email_reports_subparser.add_parser('adhoc', help='send adhoc email report')
    adhoc_parser.add_argument('inps', type=int, nargs='+', help='email_report_ids', metavar='ids')
    adhoc_parser.set_defaults(func=adhoc_email_report)
    delete_parser = email_reports_subparser.add_parser('delete', help='delete an email report')
    delete_parser.add_argument('inps', type=int, nargs='+', help='email_report ids', metavar='ids')
    delete_parser.set_defaults(func=delete_email_report)
    reset_parser = email_reports_subparser.add_parser('reset', help='reset the email scheduler, required for changes to take effect')
    reset_parser.set_defaults(func=reset_email_scheduler)
