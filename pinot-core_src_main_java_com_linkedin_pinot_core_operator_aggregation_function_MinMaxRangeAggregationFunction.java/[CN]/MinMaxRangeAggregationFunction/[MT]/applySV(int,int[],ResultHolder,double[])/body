{
  Preconditions.checkArgument(valueArray.length == 1);
  Preconditions.checkState(length <= valueArray[0].length);
  for (int i=0; i < length; i++) {
    int groupKey=groupKeys[i];
    Pair<Double,Double> rangeValue=(Pair<Double,Double>)resultHolder.getResult(groupKey);
    double value=valueArray[0][i];
    if (rangeValue == null) {
      rangeValue=new com.linkedin.pinot.core.query.aggregation.function.MinMaxRangeAggregationFunction.MinMaxRangePair(value,value);
    }
 else {
      if (value < rangeValue.getFirst()) {
        rangeValue.setFirst(value);
      }
      if (value > rangeValue.getSecond()) {
        rangeValue.setSecond(value);
      }
    }
    resultHolder.putValueForKey(groupKey,rangeValue);
  }
}
