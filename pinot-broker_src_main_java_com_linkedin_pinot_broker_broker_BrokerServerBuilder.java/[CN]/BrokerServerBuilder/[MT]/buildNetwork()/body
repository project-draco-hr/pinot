{
  Configuration transportConfigs=_config.subset(TRANSPORT_CONFIG_PREFIX);
  TransportClientConf conf=new TransportClientConf();
  conf.init(transportConfigs);
  _registry=new MetricsRegistry();
  MetricsHelper.initializeMetrics(_config.subset(METRICS_CONFIG_PREFIX));
  MetricsHelper.registerMetricsRegistry(_registry);
  _brokerMetrics=new BrokerMetrics(_registry);
  _brokerMetrics.initializeGlobalMeters();
  _state.set(State.INIT);
  _eventLoopGroup=new NioEventLoopGroup();
  final NettyClientMetrics clientMetrics=new NettyClientMetrics(_registry,"client_");
  _resourceManager=new PooledNettyClientResourceManager(_eventLoopGroup,new HashedWheelTimer(),clientMetrics);
  _poolTimeoutExecutor=new ScheduledThreadPoolExecutor(50);
  final ConnectionPoolConfig cfg=conf.getConnPool();
  _requestSenderPool=Executors.newCachedThreadPool();
  ConnectionPoolConfig connPoolCfg=conf.getConnPool();
  _connPool=new KeyedPoolImpl<ServerInstance,NettyClientConnection>(connPoolCfg.getMinConnectionsPerServer(),connPoolCfg.getMaxConnectionsPerServer(),connPoolCfg.getIdleTimeoutMs(),connPoolCfg.getMaxBacklogPerServer(),_resourceManager,_poolTimeoutExecutor,_requestSenderPool,_registry);
  _resourceManager.setPool(_connPool);
  if (conf.getRoutingMode() == RoutingMode.CONFIG) {
    final CfgBasedRouting rt=new CfgBasedRouting();
    rt.init(conf.getCfgBasedRouting());
    _routingTable=rt;
  }
 else {
  }
  _scatterGather=new ScatterGatherImpl(_connPool,_requestSenderPool);
  long brokerTimeOutMs=DEFAULT_BROKER_TIME_OUT_MS;
  if (_config.containsKey(BROKER_TIME_OUT_CONFIG)) {
    try {
      brokerTimeOutMs=_config.getLong(BROKER_TIME_OUT_CONFIG);
    }
 catch (    Exception e) {
      LOGGER.warn("Caught exception while reading broker timeout from config, using default value",e);
    }
  }
  LOGGER.info("Broker timeout is - " + brokerTimeOutMs + " ms");
  int queryResponseLimit=_config.getInt(BROKER_QUERY_RESPONSE_LIMIT_CONFIG,BROKER_QUERY_RESPONSE_LIMIT);
  ReduceServiceRegistry reduceServiceRegistry=buildReduceServiceRegistry();
  _requestHandler=new BrokerRequestHandler(_routingTable,_timeBoundaryService,_scatterGather,reduceServiceRegistry,_brokerMetrics,brokerTimeOutMs,queryResponseLimit);
  LOGGER.info("Network initialized !!");
}
