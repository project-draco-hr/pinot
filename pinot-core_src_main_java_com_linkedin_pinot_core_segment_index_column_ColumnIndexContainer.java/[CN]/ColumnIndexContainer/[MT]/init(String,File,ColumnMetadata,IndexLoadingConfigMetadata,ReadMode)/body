{
  boolean loadInverted=false;
  if (indexLoadingConfigMetadata != null) {
    if (indexLoadingConfigMetadata.getLoadingInvertedIndexColumns() != null) {
      loadInverted=indexLoadingConfigMetadata.getLoadingInvertedIndexColumns().contains(column);
    }
  }
  File dictionaryFile=new File(indexDir,column + V1Constants.Dict.FILE_EXTENTION);
  ImmutableDictionaryReader dictionary=load(metadata,dictionaryFile,mode);
  if (metadata.isSorted() && metadata.isSingleValue()) {
    if (loadInverted) {
      LOGGER.info("Column {} is sorted, inverted index will not be generated or loaded",column);
    }
    return loadSorted(column,indexDir,metadata,dictionary,mode);
  }
  if (metadata.isSingleValue()) {
    return loadUnsorted(column,indexDir,metadata,dictionary,mode,loadInverted);
  }
  if (metadata.isSorted()) {
    LOGGER.warn("Column {} is multi-valued, sort on multi-valued column is not supported",column);
  }
  return loadMultiValue(column,indexDir,metadata,dictionary,mode,loadInverted);
}
