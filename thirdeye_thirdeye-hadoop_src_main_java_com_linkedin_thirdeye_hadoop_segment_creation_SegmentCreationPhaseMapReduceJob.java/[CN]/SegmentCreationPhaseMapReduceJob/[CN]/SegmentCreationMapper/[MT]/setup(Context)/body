{
  currentHdfsWorkDir=FileOutputFormat.getWorkOutputPath(context);
  currentDiskWorkDir="pinot_hadoop_tmp";
  localHdfsSegmentTarPath=currentHdfsWorkDir + "/segmentTar";
  localDiskSegmentDirectory=currentDiskWorkDir + "/segments/";
  localDiskSegmentTarPath=currentDiskWorkDir + "/segmentsTar/";
  new File(localDiskSegmentTarPath).mkdirs();
  LOGGER.info("*********************************************************************");
  LOGGER.info("Configurations : {}",context.getConfiguration().toString());
  LOGGER.info("*********************************************************************");
  LOGGER.info("Current HDFS working dir : {}",currentHdfsWorkDir);
  LOGGER.info("Current DISK working dir : {}",new File(currentDiskWorkDir).getAbsolutePath());
  LOGGER.info("*********************************************************************");
  properties=context.getConfiguration();
  outputPath=properties.get(SEGMENT_CREATION_OUTPUT_PATH.toString());
  schema=OBJECT_MAPPER.readValue(properties.get(SEGMENT_CREATION_DATA_SCHEMA.toString()),Schema.class);
  thirdeyeConfig=new com.fasterxml.jackson.databind.ObjectMapper(new YAMLFactory()).readValue(properties.get(SEGMENT_CREATION_THIRDEYE_CONFIG.toString()),ThirdEyeConfig.class);
  LOGGER.info(thirdeyeConfig.encode());
  tableName=thirdeyeConfig.getCollection();
  segmentWallClockStartTime=Long.valueOf(properties.get(SEGMENT_CREATION_WALLCLOCK_START_TIME.toString()));
  segmentWallClockEndTime=Long.valueOf(properties.get(SEGMENT_CREATION_WALLCLOCK_END_TIME.toString()));
  segmentSchedule=properties.get(SEGMENT_CREATION_SCHEDULE.toString());
}
