{
  int[] docIds=new int[NUM_ROWS];
  int length=0;
  for (int i=_random.nextInt(MAX_STEP_LENGTH); i < NUM_ROWS; i+=_random.nextInt(MAX_STEP_LENGTH) + 1) {
    docIds[length++]=i;
  }
  int[] dictIds=new int[length];
  float[] floatValues=new float[length];
  _dataFetcher.fetchSingleDictIds(FLOAT_METRIC_NAME,docIds,0,length,dictIds,0);
  _dataFetcher.fetchSingleFloatValues(FLOAT_METRIC_NAME,dictIds,0,length,floatValues,0);
  for (int i=0; i < length; i++) {
    if (floatValues[i] != _floatMetricValues[docIds[i]]) {
      LOGGER.error("For index {}, value does not match: fetched value: {}, expected value: {}",i,floatValues[i],_floatMetricValues[docIds[i]]);
      LOGGER.error("Random Seed: {}",_randomSeed);
      Assert.fail();
    }
  }
}
