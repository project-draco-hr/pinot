{
  final IndexSegmentImpl heapSegment=(IndexSegmentImpl)ColumnarSegmentLoader.load(INDEX_DIR.listFiles()[0],ReadMode.heap);
  final IndexSegmentImpl mmapSegment=(IndexSegmentImpl)ColumnarSegmentLoader.load(INDEX_DIR.listFiles()[0],ReadMode.mmap);
  final Map<String,ColumnMetadata> metadataMap=((SegmentMetadataImpl)heapSegment.getSegmentMetadata()).getColumnMetadataMap();
  for (  final String column : metadataMap.keySet()) {
    final DataFileReader heapArray=heapSegment.getForwardIndexReaderFor(column);
    final DataFileReader mmapArray=mmapSegment.getForwardIndexReaderFor(column);
    if (metadataMap.get(column).isSingleValue()) {
      final FixedBitCompressedSVForwardIndexReader svHeapReader=(FixedBitCompressedSVForwardIndexReader)heapArray;
      final FixedBitCompressedSVForwardIndexReader mvMmapReader=(FixedBitCompressedSVForwardIndexReader)mmapArray;
      for (int i=0; i < metadataMap.get(column).getTotalDocs(); i++) {
        AssertJUnit.assertEquals(svHeapReader.getInt(i),mvMmapReader.getInt(i));
      }
    }
 else {
      final FixedBitCompressedMVForwardIndexReader svHeapReader=(FixedBitCompressedMVForwardIndexReader)heapArray;
      final FixedBitCompressedMVForwardIndexReader mvMmapReader=(FixedBitCompressedMVForwardIndexReader)mmapArray;
      for (int i=0; i < metadataMap.get(column).getTotalDocs(); i++) {
        final int[] i_1=new int[1000];
        final int[] j_i=new int[1000];
        AssertJUnit.assertEquals(svHeapReader.getIntArray(i,i_1),mvMmapReader.getIntArray(i,j_i));
      }
    }
  }
}
