{
  if (minTime == null || maxTime == null) {
    DateTime d=new DateTime();
    endTime=d.getMillis();
    startTime=d.minusYears(1).getMillis();
  }
 else {
    DateTimeFormatter parser=ISODateTimeFormat.dateHourMinuteSecond();
    startTime=parser.parseDateTime(minTime).getMillis();
    endTime=parser.parseDateTime(maxTime).getMillis();
  }
  TimeUnit inputTimeUnit=TimeUnit.valueOf(timeUnit);
  startTime=inputTimeUnit.convert(startTime,TimeUnit.MILLISECONDS) / Integer.parseInt(timeSize);
  endTime=inputTimeUnit.convert(endTime,TimeUnit.MILLISECONDS) / Integer.parseInt(timeSize);
  dimensionCardinality=new int[dimensions.size()];
  Random r=new Random();
  if (cardinality == null) {
    for (int i=0; i < dimensions.size(); i++)     dimensionCardinality[i]=r.nextInt(50) + 2;
  }
 else {
    String[] tokens=cardinality.split(",");
    for (int i=0; i < tokens.length; i++)     dimensionCardinality[i]=Integer.parseInt(tokens[i]);
    for (int i=tokens.length; i < dimensions.size(); i++)     dimensionCardinality[i]=r.nextInt(50) + 2;
  }
  if (numRecords == 0) {
    numRecordsPerTimeUnit=100;
    numRecords=(endTime - startTime + 1) * numRecordsPerTimeUnit;
  }
 else {
    if (numRecords > (endTime - startTime + 1))     numRecordsPerTimeUnit=(int)(numRecords / (endTime - startTime + 1));
 else     numRecordsPerTimeUnit=1;
  }
  if (numFiles == 0) {
    numFiles=1;
  }
  numRecordsPerFile=numRecords / numFiles;
}
