{
  LOG.info("BEGIN\t{}: OFFLINE -> DROPPED",message.getPartitionId());
  String collection=message.getResourceName();
  starTreeManager.close(collection);
  starTreeManager.remove(collection);
  starTreeManager.removeConfig(collection);
  int partitionId=Integer.valueOf(PartitionId.stripResourceId(message.getPartitionName()));
  Set<UUID> targetIds=getLeafIds(collection,partitionId,context);
  File collectionDir=new File(rootDir,collection);
  File dataDir=new File(collectionDir,StarTreeConstants.DATA_DIR_NAME);
  File[] dataFiles=dataDir.listFiles();
  if (dataFiles != null) {
    for (    File dataFile : dataFiles) {
      UUID id=UUID.fromString(dataFile.getName().substring(0,dataFile.getName().indexOf(".")));
      if (targetIds.contains(id)) {
        if (dataFile.delete()) {
          LOG.info("Deleted {} when dropping {}",dataFile,message.getPartitionId());
        }
 else {
          LOG.warn("Failed to delete {} when dropping {}",dataFile,message.getPartitionId());
        }
      }
    }
  }
  LOG.info("END\t{}: OFFLINE -> DROPPED",message.getPartitionId());
}
