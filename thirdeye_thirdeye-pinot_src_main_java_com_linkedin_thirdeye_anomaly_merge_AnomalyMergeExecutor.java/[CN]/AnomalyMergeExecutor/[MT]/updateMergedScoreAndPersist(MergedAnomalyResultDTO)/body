{
  double weightedScoreSum=0.0;
  double weightedWeightSum=0.0;
  double totalBucketSize=0.0;
  double normalizationFactor=1000;
  String anomalyMessage="";
  for (  RawAnomalyResultDTO anomalyResult : mergedResult.getAnomalyResults()) {
    anomalyResult.setMerged(true);
    double bucketSizeSeconds=(anomalyResult.getEndTime() - anomalyResult.getStartTime()) / 1000;
    weightedScoreSum+=(anomalyResult.getScore() / normalizationFactor) * bucketSizeSeconds;
    weightedWeightSum+=(anomalyResult.getWeight() / normalizationFactor) * bucketSizeSeconds;
    totalBucketSize+=bucketSizeSeconds;
    anomalyMessage=anomalyResult.getMessage();
  }
  if (totalBucketSize != 0) {
    mergedResult.setScore((weightedScoreSum / totalBucketSize) * normalizationFactor);
    mergedResult.setWeight((weightedWeightSum / totalBucketSize) * normalizationFactor);
  }
  mergedResult.setMessage(anomalyMessage);
  try {
    updateMergedSeverity(mergedResult);
  }
 catch (  Exception e) {
    LOG.error("Could not recompute severity",e);
  }
  try {
    mergedResultDAO.update(mergedResult);
    anomalyResultDAO.updateAll(mergedResult.getAnomalyResults());
  }
 catch (  PersistenceException e) {
    LOG.error("Could not persist merged result : [" + mergedResult.toString() + "]",e);
  }
}
