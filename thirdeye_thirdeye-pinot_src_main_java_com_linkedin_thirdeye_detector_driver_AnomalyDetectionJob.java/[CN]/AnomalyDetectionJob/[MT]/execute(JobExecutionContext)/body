{
  anomalyFunction=(AnomalyFunction)context.getJobDetail().getJobDataMap().get(FUNCTION);
  final FailureEmailConfiguration failureEmailConfig=(FailureEmailConfiguration)context.getJobDetail().getJobDataMap().get(FAILURE_EMAIL_CONFIG_KEY);
  try {
    run(context,anomalyFunction);
  }
 catch (  Throwable t) {
    AnomalyFunctionSpec spec=anomalyFunction.getSpec();
    LOG.error("Job failed with exception:",t);
    long id=spec.getId();
    String collection=spec.getCollection();
    String metric=spec.getMetric();
    String subject=String.format("FAILED ANOMALY DETECTION JOB ID=%d (%s:%s)",id,collection,metric);
    String textBody=String.format("%s%n%nException:%s",spec.toString(),ExceptionUtils.getStackTrace(t));
    try {
      JobUtils.sendFailureEmail(failureEmailConfig,subject,textBody);
    }
 catch (    EmailException e) {
      throw new JobExecutionException(e);
    }
  }
}
