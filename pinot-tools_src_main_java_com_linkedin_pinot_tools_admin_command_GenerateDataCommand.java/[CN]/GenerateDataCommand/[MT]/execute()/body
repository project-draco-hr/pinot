{
  LOGGER.info("Executing command: " + toString());
  if ((_numRecords < 0) || (_numFiles < 0)) {
    throw new RuntimeException("Cannot generate negative number of records/files.");
  }
  File schemaFile=new File(_schemaFile);
  Schema schema=new ObjectMapper().readValue(schemaFile,Schema.class);
  List<String> columns=new LinkedList<String>();
  final HashMap<String,DataType> dataTypes=new HashMap<String,DataType>();
  final HashMap<String,FieldType> fieldTypes=new HashMap<String,FieldType>();
  final HashMap<String,TimeUnit> timeUnits=new HashMap<String,TimeUnit>();
  final HashMap<String,Integer> cardinality=new HashMap<String,Integer>();
  final HashMap<String,IntRange> range=new HashMap<String,IntRange>();
  buildCardinalityRangeMaps(_schemaAnnFile,cardinality,range);
  final DataGeneratorSpec spec=buildDataGeneratorSpec(schema,columns,dataTypes,fieldTypes,timeUnits,cardinality,range);
  final DataGenerator gen=new DataGenerator();
  gen.init(spec);
  gen.generate(_numRecords,_numFiles);
  return true;
}
