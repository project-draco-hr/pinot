{
  ArrayList<String> hostsAndPorts=Lists.newArrayList(Splitter.on(',').trimResults().omitEmptyStrings().split(bootstrapNodes));
  final int bootstrapHostCount=hostsAndPorts.size();
  if (bootstrapHostCount < 1) {
    throw new IllegalArgumentException("Need at least one bootstrap host");
  }
  _bootstrapHosts=new String[bootstrapHostCount];
  _bootstrapPorts=new int[bootstrapHostCount];
  for (int i=0; i < bootstrapHostCount; i++) {
    String hostAndPort=hostsAndPorts.get(i);
    String[] splittedHostAndPort=hostAndPort.split(":");
    if (splittedHostAndPort.length != 2) {
      throw new IllegalArgumentException("Unable to parse host:port combination for " + hostAndPort);
    }
    _bootstrapHosts[i]=splittedHostAndPort[0];
    try {
      _bootstrapPorts[i]=Integer.parseInt(splittedHostAndPort[1]);
    }
 catch (    NumberFormatException e) {
      throw new IllegalArgumentException("Could not parse port number " + splittedHostAndPort[1] + " for host:port combination "+ hostAndPort);
    }
  }
}
