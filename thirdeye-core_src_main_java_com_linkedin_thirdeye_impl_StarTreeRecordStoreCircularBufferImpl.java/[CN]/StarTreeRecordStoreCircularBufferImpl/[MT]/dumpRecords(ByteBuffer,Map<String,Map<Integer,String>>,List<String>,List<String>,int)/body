{
  List<StarTreeRecord> records=new LinkedList<StarTreeRecord>();
  externalBuffer.clear();
  while (externalBuffer.position() < externalBuffer.limit()) {
    Map<String,String> dimensionValues=new HashMap<String,String>();
    for (    String dimensionName : dimensionNames) {
      Map<Integer,String> reverse=reverseIndex.get(dimensionName);
      if (reverse == null) {
        throw new IllegalStateException("No reverse index for " + dimensionName);
      }
      int valueId=externalBuffer.getInt();
      String dimensionValue=reverse.get(valueId);
      if (dimensionValue == null) {
        throw new IllegalStateException("No dimension value for " + valueId);
      }
      dimensionValues.put(dimensionName,dimensionValue);
    }
    for (int i=0; i < numTimeBuckets; i++) {
      StarTreeRecordImpl.Builder builder=new StarTreeRecordImpl.Builder().setTime(externalBuffer.getLong()).setDimensionValues(dimensionValues);
      for (      String metricName : metricNames) {
        builder.setMetricValue(metricName,externalBuffer.getLong());
      }
      records.add(builder.build());
    }
  }
  return records;
}
