{
  Session session=sessionFactory.openSession();
  List<Long> taskIds=new ArrayList<>();
  try {
    ManagedSessionContext.bind(session);
    LOG.info("Creating monitor tasks");
    List<MonitorTaskInfo> monitorTasks=taskGenerator.createMonitorTasks(monitorJobContext);
    LOG.info("Monitor tasks {}",monitorTasks);
    for (    MonitorTaskInfo taskInfo : monitorTasks) {
      String taskInfoJson=null;
      try {
        taskInfoJson=OBJECT_MAPPER.writeValueAsString(taskInfo);
      }
 catch (      JsonProcessingException e) {
        LOG.error("Exception when converting MonitorTaskInfo {} to jsonString",taskInfo,e);
      }
      AnomalyTaskSpec anomalyTaskSpec=new AnomalyTaskSpec();
      anomalyTaskSpec.setJobId(monitorJobContext.getJobExecutionId());
      anomalyTaskSpec.setTaskType(TaskType.MONITOR);
      anomalyTaskSpec.setJobName(monitorJobContext.getJobName());
      anomalyTaskSpec.setStatus(TaskStatus.WAITING);
      anomalyTaskSpec.setTaskStartTime(System.currentTimeMillis());
      anomalyTaskSpec.setTaskInfo(taskInfoJson);
      long taskId=anomalyTaskSpecDAO.save(anomalyTaskSpec);
      taskIds.add(taskId);
      LOG.info("Created monitorTask {} with taskId {}",anomalyTaskSpec,taskId);
    }
  }
 catch (  Exception e) {
    LOG.error("Exception in creating anomaly tasks",e);
  }
 finally {
    session.close();
    ManagedSessionContext.unbind(sessionFactory);
  }
  return taskIds;
}
