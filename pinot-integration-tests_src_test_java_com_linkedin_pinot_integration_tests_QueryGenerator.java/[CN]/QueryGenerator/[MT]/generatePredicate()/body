{
  int predicateCount=RANDOM.nextInt(MAX_NUM_PREDICATES + 1);
  List<QueryFragment> predicates=new ArrayList<>(predicateCount);
  while (predicates.size() < predicateCount) {
    String columnName=pickRandom(_columnNames);
    if (!_columnToValueList.get(columnName).isEmpty()) {
      if (!_multiValueColumnMaxNumElements.containsKey(columnName)) {
        predicates.add(pickRandom(_singleValuePredicateGenerators).generatePredicate(columnName));
      }
 else       if (!_skipMultiValuePredicates) {
        predicates.add(pickRandom(_multiValuePredicateGenerators).generatePredicate(columnName));
      }
    }
  }
  if (predicateCount < 2) {
    return new PredicateQueryFragment(predicates,Collections.<QueryFragment>emptyList());
  }
 else {
    List<QueryFragment> operators=new ArrayList<>(predicateCount - 1);
    for (int i=1; i < predicateCount; i++) {
      operators.add(new StringQueryFragment(pickRandom(BOOLEAN_OPERATORS)));
    }
    return new PredicateQueryFragment(predicates,operators);
  }
}
