{
  GenericDatumReader<GenericRecord> datumReader=new GenericDatumReader<GenericRecord>();
  DataFileReader<GenericRecord> fileReader=null;
  try {
    fileReader=new DataFileReader<GenericRecord>(avroFile,datumReader);
    for (    GenericRecord genericRecord : fileReader) {
      for (      String columnName : _columnNames) {
        SortedSet<String> values=_columnToValues.get(columnName);
        if (values == null) {
          values=new TreeSet<String>();
          _columnToValues.put(columnName,values);
        }
        Object avroValue=genericRecord.get(columnName);
        if (avroValue == null) {
          continue;
        }
 else {
          if (_multivalueColumnCardinality.containsKey(columnName)) {
            GenericData.Array array=(GenericData.Array)avroValue;
            Integer storedCardinality=_multivalueColumnCardinality.get(columnName);
            if (storedCardinality < array.size()) {
              _multivalueColumnCardinality.put(columnName,array.size());
            }
            for (            Object element : array) {
              storeAvroValueIntoValueSet(values,element);
            }
          }
 else {
            storeAvroValueIntoValueSet(values,avroValue);
          }
        }
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
 finally {
    IOUtils.closeQuietly(fileReader);
  }
}
