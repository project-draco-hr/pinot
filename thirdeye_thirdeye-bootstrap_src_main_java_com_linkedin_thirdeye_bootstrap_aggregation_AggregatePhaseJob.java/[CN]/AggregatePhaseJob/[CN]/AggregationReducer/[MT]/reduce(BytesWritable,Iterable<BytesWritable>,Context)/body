{
  MetricTimeSeries out=new MetricTimeSeries(metricSchema);
  for (  BytesWritable writable : timeSeriesIterable) {
    MetricTimeSeries series=MetricTimeSeries.fromBytes(writable.copyBytes(),metricSchema);
    out.aggregate(series);
  }
  DimensionKey key=DimensionKey.fromBytes(aggregationKey.getBytes());
  for (int i=0; i < dimensionNames.size(); i++) {
    dimensionStats.record(dimensionNames.get(i),key.getDimensionValues()[i]);
  }
  aggregationStats.record(out);
  int numSplitRecords=out.getTimeWindowSet().size();
  context.getCounter(AggregationCounter.NUMBER_OF_SPLIT_RECORDS).increment(numSplitRecords);
  byte[] serializedBytes=out.toBytes();
  context.write(aggregationKey,new BytesWritable(serializedBytes));
}
