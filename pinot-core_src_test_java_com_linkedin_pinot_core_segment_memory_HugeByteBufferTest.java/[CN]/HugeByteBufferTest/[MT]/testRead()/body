{
  HugeByteBuffer buffer=HugeByteBuffer.allocateDirect(3L * PinotDataBufferTest.ONE_GB);
  buffer.putInt(PinotDataBufferTest.ONE_GB - 2,0x12345678);
  LOGGER.debug(String.valueOf(buffer.getShort(PinotDataBufferTest.ONE_GB)));
  LOGGER.debug(Integer.toHexString(buffer.getInt(PinotDataBufferTest.ONE_GB - 2)));
  File tempFilePath=Files.createTempFile(HugeByteBufferTest.class.getName() + "-test",".tmp").toFile();
  tempFilePath.deleteOnExit();
  HugeByteBuffer mapBuffer=(HugeByteBuffer)PinotDataBuffer.fromFile(tempFilePath,0,3L * PinotDataBufferTest.ONE_GB,ReadMode.mmap,FileChannel.MapMode.READ_WRITE,"allocContext");
  mapBuffer.putInt(PinotDataBufferTest.ONE_GB - 2,0x12345678);
  LOGGER.debug(Integer.toHexString(buffer.getShort(PinotDataBufferTest.ONE_GB - 2)));
  LOGGER.debug(Integer.toHexString(buffer.getInt(PinotDataBufferTest.ONE_GB - 2)));
}
