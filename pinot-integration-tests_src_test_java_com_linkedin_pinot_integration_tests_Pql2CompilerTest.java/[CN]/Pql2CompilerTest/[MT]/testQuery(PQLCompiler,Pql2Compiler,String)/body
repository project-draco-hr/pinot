{
  try {
    long pql1StartTime=System.nanoTime();
    JSONObject jsonObject;
    try {
      jsonObject=pql1Compiler.compile(pql);
    }
 catch (    Exception e) {
      return;
    }
    BrokerRequest pqlBrokerRequest=RequestConverter.fromJSON(jsonObject);
    pql1Nanos+=(System.nanoTime() - pql1StartTime);
    queryCount++;
    long pql2StartTime=System.nanoTime();
    BrokerRequest pql2BrokerRequest=pql2Compiler.compileToBrokerRequest(pql);
    pql2Nanos+=(System.nanoTime() - pql2StartTime);
    Assert.assertTrue(brokerRequestsAreEquivalent(pqlBrokerRequest,pql2BrokerRequest),"Requests are not equivalent\npql2: " + pql2BrokerRequest + "\npql: "+ pqlBrokerRequest+ "\nquery:"+ pql);
  }
 catch (  Exception e) {
    Assert.fail("Caught exception compiling " + pql,e);
  }
}
