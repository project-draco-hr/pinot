{
  ArrayList<Integer> leftIdsCopy=new ArrayList<>(leftIds);
  ArrayList<Integer> rightIdsCopy=new ArrayList<>(rightIds);
  Iterator<Integer> leftIterator=leftIdsCopy.iterator();
  while (leftIterator.hasNext()) {
    Integer leftId=leftIterator.next();
    Iterator<Integer> rightIterator=rightIdsCopy.iterator();
    while (rightIterator.hasNext()) {
      Integer rightId=rightIterator.next();
      if (filterQueryIsEquivalent(Collections.singletonList(leftId),Collections.singletonList(rightId),leftSubQueries,rightSubQueries)) {
        leftIterator.remove();
        rightIterator.remove();
        break;
      }
    }
  }
  if (!leftIdsCopy.isEmpty()) {
    System.out.println(" ----- ");
    for (    Integer leftId : leftIdsCopy) {
      System.out.println("leftSubQuery = " + leftSubQueries.getFilterQueryMap().get(leftId));
    }
    for (    Integer rightId : rightIdsCopy) {
      System.out.println("rightSubQuery = " + rightSubQueries.getFilterQueryMap().get(rightId));
    }
    System.out.println(" ----- ");
    if (leftIdsCopy.size() != 1 || rightIdsCopy.size() != 1) {
      System.out.println("MORE THAN ONE DIFFERENCE!");
    }
 else {
      int leftId=leftIdsCopy.get(0);
      int rightId=rightIdsCopy.get(0);
      FilterQuery left=leftSubQueries.getFilterQueryMap().get(leftId);
      FilterQuery right=rightSubQueries.getFilterQueryMap().get(rightId);
      ArrayList<Integer> leftChildrenIdsCopy=new ArrayList<>(left.getNestedFilterQueryIds());
      ArrayList<Integer> rightChildrenIdsCopy=new ArrayList<>(right.getNestedFilterQueryIds());
      Iterator<Integer> leftChildrenIterator=leftChildrenIdsCopy.iterator();
      while (leftChildrenIterator.hasNext()) {
        Integer leftChildrenId=leftChildrenIterator.next();
        Iterator<Integer> rightChildrenIterator=rightChildrenIdsCopy.iterator();
        while (rightChildrenIterator.hasNext()) {
          Integer rightChildrenId=rightChildrenIterator.next();
          if (filterQueryIsEquivalent(Collections.singletonList(leftChildrenId),Collections.singletonList(rightChildrenId),leftSubQueries,rightSubQueries)) {
            leftChildrenIterator.remove();
            rightChildrenIterator.remove();
            break;
          }
        }
      }
      displayFilterDifference(leftChildrenIdsCopy,rightChildrenIdsCopy,leftSubQueries,rightSubQueries);
    }
  }
}
