{
  int numCells=dimensionValues.size();
  NormalDistribution baselineDist=getDistribution(baselineStats);
  NormalDistribution currentDist=getDistribution(currentStats);
  double baselineTotal=baselineStats.getSum();
  double currentTotal=currentStats.getSum();
  for (int i=0; i < numCells; i++) {
    String dimensionValue=dimensionValues.get(i);
    double baselineValue=baselineStats.getElement(i);
    double currentValue=currentStats.getElement(i);
    double baselineContribution=baselineValue * 100 / baselineTotal;
    double currentContribution=currentValue * 100 / currentTotal;
    double baselineCDFValue=0;
    if (baselineDist != null) {
      baselineCDFValue=baselineDist.cumulativeProbability(baselineValue);
    }
    double currentCDFValue=0;
    if (currentDist != null) {
      currentCDFValue=currentDist.cumulativeProbability(currentValue);
    }
    double absoluteChange=(currentValue - baselineValue);
    double percentageChange=0;
    if (baselineValue != 0) {
      percentageChange=((currentValue - baselineValue) / baselineValue) * 100;
    }
 else {
      if (currentValue != 0) {
        percentageChange=-100;
      }
    }
    double contributionDifference=currentContribution - baselineContribution;
    double deltaColor=percentageChange;
    double deltaSize=currentValue;
    double contributionColor=(currentContribution - baselineContribution);
    double contributionSize=currentValue;
    double contributionToOverallChange=((currentValue - baselineValue) / baselineTotal) * 100;
    double contributionToOverallColor=contributionToOverallChange;
    double contributionToOverallSize=currentValue;
    HeatMapCell cell=new HeatMapCell(dimensionValue,baselineValue,currentValue,baselineContribution,currentContribution,baselineCDFValue,currentCDFValue,percentageChange,absoluteChange,contributionDifference,contributionToOverallChange,deltaColor,deltaSize,contributionColor,contributionSize,contributionToOverallColor,contributionToOverallSize);
    heatMapCells.add(cell);
  }
  return new HeatMap(dimensionName,heatMapCells);
}
