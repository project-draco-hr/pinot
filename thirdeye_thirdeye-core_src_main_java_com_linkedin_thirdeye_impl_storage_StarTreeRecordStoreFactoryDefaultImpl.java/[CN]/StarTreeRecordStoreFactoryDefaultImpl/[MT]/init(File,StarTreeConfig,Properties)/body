{
synchronized (sync) {
    if (isInit) {
      return;
    }
    this.rootDir=rootDir;
    this.isInit=true;
    this.starTreeConfig=starTreeConfig;
    if (recordStoreConfig != null) {
      Object metricStoreMutableProp=recordStoreConfig.get(PROP_METRIC_STORE_MUTABLE);
      if (metricStoreMutableProp != null) {
        if (metricStoreMutableProp instanceof String) {
          this.metricStoreMutable=Boolean.valueOf((String)metricStoreMutableProp);
        }
 else {
          this.metricStoreMutable=(Boolean)metricStoreMutableProp;
        }
      }
    }
    File dimensionStore=new File(rootDir,StarTreeConstants.DIMENSION_STORE);
    FileUtils.forceMkdir(dimensionStore);
    File[] dimensionIndexFiles=dimensionStore.listFiles(INDEX_FILE_FILTER);
    if (dimensionIndexFiles != null) {
      for (      File indexFile : dimensionIndexFiles) {
        loadDimensionIndex(indexFile);
      }
    }
    File metricStore=new File(rootDir,StarTreeConstants.METRIC_STORE);
    FileUtils.forceMkdir(metricStore);
    File[] metricIndexFiles=metricStore.listFiles(INDEX_FILE_FILTER);
    if (metricIndexFiles != null) {
      for (      File indexFile : metricIndexFiles) {
        loadMetricIndex(indexFile);
      }
    }
    loadDimensionBuffers(dimensionIndex.values());
    for (    List<MetricIndexEntry> entryGroup : metricIndex.values()) {
      loadMetricBuffers(entryGroup);
    }
  }
}
