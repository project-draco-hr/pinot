{
  Number[] aggMetricValues=new Number[numMetrics];
  Arrays.fill(aggMetricValues,0);
  for (  BytesWritable value : values) {
    TopKPhaseMapOutputValue valWrapper=TopKPhaseMapOutputValue.fromBytes(value.getBytes(),metricTypes);
    Number[] metricValues=valWrapper.getMetricValues();
    for (int i=0; i < numMetrics; i++) {
      MetricType metricType=metricTypes.get(i);
switch (metricType) {
case SHORT:
        aggMetricValues[i]=aggMetricValues[i].shortValue() + metricValues[i].shortValue();
      break;
case INT:
    aggMetricValues[i]=aggMetricValues[i].intValue() + metricValues[i].intValue();
  break;
case FLOAT:
aggMetricValues[i]=aggMetricValues[i].floatValue() + metricValues[i].floatValue();
break;
case DOUBLE:
aggMetricValues[i]=aggMetricValues[i].doubleValue() + metricValues[i].doubleValue();
break;
case LONG:
default :
aggMetricValues[i]=aggMetricValues[i].longValue() + metricValues[i].longValue();
break;
}
}
}
TopKPhaseMapOutputValue valWrapper=new TopKPhaseMapOutputValue(aggMetricValues,metricTypes);
byte[] valBytes=valWrapper.toBytes();
valWritable.set(valBytes,0,valBytes.length);
context.write(key,valWritable);
}
