{
  LOGGER.info("TopKPhaseJob.TopKPhaseReducer.setup()");
  configuration=context.getConfiguration();
  fileSystem=FileSystem.get(configuration);
  try {
    thirdeyeConfig=OBJECT_MAPPER.readValue(configuration.get(TOPK_PHASE_THIRDEYE_CONFIG.toString()),ThirdEyeConfig.class);
    config=TopKPhaseConfig.fromThirdEyeConfig(thirdeyeConfig);
    metricThresholds=config.getMetricThresholds();
    topKDimensionToMetricsSpecMap=config.getTopKDimensionToMetricsSpec();
    dimensionNames=config.getDimensionNames();
    metricNames=config.getMetricNames();
    metricTypes=config.getMetricTypes();
    whitelist=config.getWhitelist();
    numMetrics=metricNames.size();
    metricToIndexMapping=new HashMap<>();
    for (int i=0; i < numMetrics; i++) {
      metricToIndexMapping.put(metricNames.get(i),i);
    }
    dimensionNameToValuesMap=new HashMap<>();
    thresholdPassCount=new HashMap<>();
    for (    String dimension : dimensionNames) {
      dimensionNameToValuesMap.put(dimension,new HashMap<String,Number[]>());
      thresholdPassCount.put(dimension,0);
    }
    topkDimensionValues=new TopKDimensionValues();
    keyWritable=new BytesWritable();
    valWritable=new BytesWritable();
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}
