{
  final String filePath=TestUtils.getFileFromResourceUrl(getClass().getClassLoader().getResource(AVRO_MULTI_DATA));
  final List<String> projectedColumns=new ArrayList<String>();
  projectedColumns.add("dimension_companySizes");
  projectedColumns.add("dimension_functions");
  final SegmentGeneratorConfig config=new SegmentGeneratorConfig();
  config.setInputFileFormat(FileFormat.AVRO);
  config.setInputFilePath(filePath);
  config.setProjectedColumns(projectedColumns);
  config.setSegmentVersion(SegmentVersion.v1);
  AvroRecordReader avroDataPublisher=(AvroRecordReader)RecordReaderFactory.get(config);
  int cnt=0;
  while (avroDataPublisher.hasNext()) {
    GenericRow recordRow=avroDataPublisher.next();
    for (    String column : recordRow.getFieldNames()) {
      String valueStringFromAvro=null;
      if (avroDataPublisher.getSchema().isSingleValueColumn(column)) {
        Object valueFromAvro=recordRow.getValue(column);
        valueStringFromAvro=valueFromAvro.toString();
      }
 else {
        Object[] valueFromAvro=(Object[])recordRow.getValue(column);
        valueStringFromAvro="[";
        int i=0;
        for (        Object valueObject : valueFromAvro) {
          if (i++ == 0) {
            valueStringFromAvro+=valueObject.toString();
          }
 else {
            valueStringFromAvro+=", " + valueObject.toString();
          }
        }
        valueStringFromAvro+="]";
      }
    }
    cnt++;
  }
  AssertJUnit.assertEquals(cnt,28949);
}
