{
  final Map<String,String> props=new HashMap<String,String>();
  props.put(CommonConstants.Helix.DataSource.REQUEST_TYPE,CommonConstants.Helix.DataSourceRequestType.CREATE);
  props.put(CommonConstants.Helix.DataSource.RESOURCE_NAME,resourceName);
  props.put(CommonConstants.Helix.DataSource.TIME_COLUMN_NAME,"days");
  props.put(CommonConstants.Helix.DataSource.TIME_TYPE,"daysSinceEpoch");
  props.put(CommonConstants.Helix.DataSource.NUMBER_OF_DATA_INSTANCES,String.valueOf(numInstances));
  props.put(CommonConstants.Helix.DataSource.NUMBER_OF_COPIES,String.valueOf(numReplicas));
  props.put(CommonConstants.Helix.DataSource.RETENTION_TIME_UNIT,"DAYS");
  props.put(CommonConstants.Helix.DataSource.RETENTION_TIME_VALUE,"30");
  props.put(CommonConstants.Helix.DataSource.PUSH_FREQUENCY,"daily");
  props.put(CommonConstants.Helix.DataSource.SEGMENT_ASSIGNMENT_STRATEGY,segmentAssignmentStrategy);
  props.put(CommonConstants.Helix.DataSource.BROKER_TAG_NAME,"colocated");
  props.put(CommonConstants.Helix.DataSource.NUMBER_OF_BROKER_INSTANCES,"6");
  props.put(CommonConstants.Helix.DataSource.RESOURCE_TYPE,CommonConstants.Helix.TableType.OFFLINE.name());
  final DataResource res=DataResource.fromMap(props);
  return res;
}
