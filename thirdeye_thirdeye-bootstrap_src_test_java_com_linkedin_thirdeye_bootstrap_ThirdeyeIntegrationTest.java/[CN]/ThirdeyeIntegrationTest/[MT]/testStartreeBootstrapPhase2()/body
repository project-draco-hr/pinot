{
  LOGGER.info("Starting startree_bootstrap_phase2 job");
  Job job=Job.getInstance(conf);
  job.setJobName("StartreeBootstrapPhase2");
  job.setJarByClass(StarTreeBootstrapPhaseTwoJob.class);
  job.setMapperClass(BootstrapPhaseTwoMapper.class);
  job.setInputFormatClass(SequenceFileInputFormat.class);
  job.setMapOutputKeyClass(BytesWritable.class);
  job.setMapOutputValueClass(BytesWritable.class);
  job.setReducerClass(BootstrapPhaseTwoReducer.class);
  job.setOutputKeyClass(NullWritable.class);
  job.setOutputValueClass(NullWritable.class);
  job.setOutputFormatClass(NullOutputFormat.class);
  job.setNumReduceTasks(10);
  Configuration configuration=job.getConfiguration();
  configuration.set(STAR_TREE_BOOTSTRAP_PHASE2_INPUT_PATH.toString(),starTreeBootstrapPhase1Output.toString());
  configuration.set(StarTreeBootstrapPhaseTwoConstants.STAR_TREE_GENERATION_OUTPUT_PATH.toString(),starTreeGenerationOutput.toString());
  configuration.set(STAR_TREE_BOOTSTRAP_PHASE2_CONFIG_PATH.toString(),configFilePath.toString());
  configuration.set(STAR_TREE_BOOTSTRAP_PHASE2_OUTPUT_PATH.toString(),starTreeBootstrapPhase2Output.toString());
  FileInputFormat.addInputPath(job,new Path(configuration.get(STAR_TREE_BOOTSTRAP_PHASE2_INPUT_PATH.toString())));
  FileOutputFormat.setOutputPath(job,new Path(configuration.get(STAR_TREE_BOOTSTRAP_PHASE2_OUTPUT_PATH.toString())));
  job.waitForCompletion(true);
  assertTrue("startree_bootstrap_phase2 job failed",job.isSuccessful());
  assertTrue("startree_bootstrap_phase2 folder not created",fs.exists(starTreeBootstrapPhase2Output));
  FileStatus[] startreeBootstrapPhase2Status=fs.listStatus(starTreeBootstrapPhase2Output,new PathFilter(){
    @Override public boolean accept(    Path path){
      return path.getName().startsWith("data");
    }
  }
);
  assertTrue("data.tar.gz not generated in startree_bootstrap_phase2",startreeBootstrapPhase2Status.length != 0);
  LOGGER.info("startree_bootstrap_phase2 job completed");
}
