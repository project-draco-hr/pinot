{
  final Map<String,Map<String,String>> ret=new HashMap<String,Map<String,String>>();
  final Map<String,String> instanceToPartitionMap=new HashMap<String,String>();
  final Set<String> partitions=state.getPartitionSet();
  final int maxInstancesPerPartition=getNumReplicaSetFromIdealState(state);
  for (int i=0; i < maxInstancesPerPartition; i++) {
    ret.put(String.valueOf(i),new HashMap<String,String>());
  }
  for (  final String partition : partitions) {
    final Set<String> instancesWithinAPartition=state.getInstanceSet(partition);
    for (    final String instance : instancesWithinAPartition) {
      instanceToPartitionMap.put(instance,partition);
    }
  }
  for (  final String replicaSetKey : ret.keySet()) {
    final Map<String,String> replicaSet=ret.get(replicaSetKey);
    for (    final String instance : instanceToPartitionMap.keySet()) {
      if (!replicaSet.containsKey(instanceToPartitionMap.get(instance))) {
        replicaSet.put(instanceToPartitionMap.get(instance),instance);
      }
    }
    for (    final String p : replicaSet.keySet()) {
      instanceToPartitionMap.remove(replicaSet.get(p));
    }
    ret.put(replicaSetKey,replicaSet);
  }
  return ret;
}
