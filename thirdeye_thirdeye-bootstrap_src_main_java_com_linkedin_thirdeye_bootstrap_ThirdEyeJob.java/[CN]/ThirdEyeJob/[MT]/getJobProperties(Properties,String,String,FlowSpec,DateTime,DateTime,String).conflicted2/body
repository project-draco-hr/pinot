{
  Properties config=new Properties();
  String dimensionIndexDirRef=inputConfig.getProperty(ThirdEyeJobConstants.THIRDEYE_DIMENSION_INDEX_REF.getName());
  config.setProperty(StarTreeBootstrapPhaseOneConstants.STAR_TREE_BOOTSTRAP_CONFIG_PATH.toString(),getConfigPath(root,collection));
  config.setProperty(StarTreeBootstrapPhaseOneConstants.STAR_TREE_BOOTSTRAP_INPUT_AVRO_SCHEMA.toString(),getSchemaPath(root,collection));
  config.setProperty(StarTreeBootstrapPhaseTwoConstants.STAR_TREE_GENERATION_OUTPUT_PATH.toString(),getDimensionIndexDir(root,collection,dimensionIndexDirRef) + File.separator + STARTREE_GENERATION.getName());
  boolean skipMissing=Boolean.parseBoolean(inputConfig.getProperty(ThirdEyeJobConstants.THIRDEYE_SKIP_MISSING.getName(),DEFAULT_SKIP_MISSING));
  if (skipMissing) {
    inputPaths=getFilteredInputPaths(inputPaths);
  }
  config.setProperty(StarTreeBootstrapPhaseOneConstants.STAR_TREE_BOOTSTRAP_INPUT_PATH.toString(),inputPaths);
  config.setProperty(StarTreeBootstrapPhaseOneConstants.STAR_TREE_BOOTSTRAP_OUTPUT_PATH.toString(),getMetricIndexDir(root,collection,flowSpec,minTime,maxTime) + File.separator + STARTREE_BOOTSTRAP_PHASE1.getName());
  config.setProperty(StarTreeBootstrapPhaseOneConstants.STAR_TREE_BOOTSTRAP_COMPACTION.toString(),inputConfig.getProperty(ThirdEyeJobConstants.THIRDEYE_COMPACTION.getName(),DEFAULT_THIRDEYE_COMPACTION));
  String converterClass=inputConfig.getProperty(ThirdEyeJobConstants.THIRDEYE_INPUT_CONVERTER_CLASS.getName(),DEFAULT_CONVERTER_CLASS);
  if (converterClass.isEmpty()) {
    converterClass=DEFAULT_CONVERTER_CLASS;
  }
  config.setProperty(StarTreeBootstrapPhaseOneConstants.STAR_TREE_BOOTSTRAP_CONVERTER_CLASS.toString(),converterClass);
  return config;
}
