{
  DateTime start=minTime;
  DateTime end;
  FileSystem fileSystem=FileSystem.get(new Configuration());
  while (!start.isEqual(maxTime.getMillis())) {
    if (schedule.equals(FlowSchedule.DAILY.name())) {
      end=start.plusHours(1);
    }
 else     if (schedule.equals(FlowSchedule.MONTHLY.name())) {
      end=start.plusDays(1);
    }
 else {
      return;
    }
    Path folder=new Path(Joiner.on(DATA_FOLDER_JOINER).join(StarTreeConstants.DATA_DIR_PREFIX,StarTreeConstants.DATE_TIME_FORMATTER.print(start),StarTreeConstants.DATE_TIME_FORMATTER.print(end)));
    Path dimensionFolder=new Path(dimensionIndexdir,folder);
    Path metricFolder=new Path(metricIndexDir,folder);
    if (fileSystem.exists(dimensionFolder)) {
      LOGGER.info("Deleting folder {} with overlapping data and lower granularity than {}",dimensionFolder,schedule);
      fileSystem.delete(dimensionFolder,true);
    }
    if (fileSystem.exists(metricFolder)) {
      LOGGER.info("Deleting folder {} with overlapping data and lower granularity than {}",metricFolder,schedule);
      fileSystem.delete(metricFolder,true);
    }
    start=end;
  }
}
