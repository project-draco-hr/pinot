{
  Properties config=new Properties();
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_SCHEMA_PATH.toString(),getPinotSchemaPath(root,collection));
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_CONFIG_PATH.toString(),getConfigPath(root,collection));
  String inputPath=getMetricIndexDir(root,collection,flowSpec,minTime,maxTime) + File.separator;
  FileSystem fs=FileSystem.get(new Configuration());
  if (fs.exists(new Path(inputPath + TOPK_ROLLUP_PHASE3.getName()))) {
    inputPath=inputPath + TOPK_ROLLUP_PHASE3.getName();
  }
 else   if (fs.exists(new Path(inputPath + ROLLUP_PHASE4.getName()))) {
    inputPath=inputPath + ROLLUP_PHASE4.getName();
  }
 else {
    inputPath=inputPath + AGGREGATION.getName();
  }
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_INPUT_PATH.toString(),inputPath);
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_OUTPUT_PATH.toString(),getMetricIndexDir(root,collection,flowSpec,minTime,maxTime) + File.separator + SEGMENT_CREATION.getName());
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_SEGMENT_TABLE_NAME.toString(),collection);
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_WALLCLOCK_START_TIME.toString(),String.valueOf(minTime.getMillis()));
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_WALLCLOCK_END_TIME.toString(),String.valueOf(maxTime.getMillis()));
  String schedule=inputConfig.getProperty(ThirdEyeJobConstants.THIRDEYE_FLOW_SCHEDULE.getName());
  config.setProperty(SegmentCreationPhaseConstants.SEGMENT_CREATION_SCHEDULE.toString(),schedule);
  return config;
}
