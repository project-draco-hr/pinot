{
  MutableRoaringBitmap result=new MutableRoaringBitmap();
  if (evaluator.alwaysFalse()) {
    return result;
  }
  IntIterator intIterator=answer.getIntIterator();
  int docId=-1;
  while (intIterator.hasNext() && docId < endDocId) {
    docId=intIterator.next();
    if (docId >= startDocId) {
      valueIterator.skipTo(docId);
      if (evaluator.apply(valueIterator.nextIntVal())) {
        result.add(docId);
      }
    }
  }
  return result;
}
