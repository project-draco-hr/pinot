{
switch (setField_) {
case LONG_VAL:
    Long longVal=(Long)value_;
  oprot.writeI64(longVal);
return;
case STRING_VAL:
String stringVal=(String)value_;
oprot.writeString(stringVal);
return;
case DOUBLE_VAL:
Double doubleVal=(Double)value_;
oprot.writeDouble(doubleVal);
return;
case LONG_SET:
Set<Long> longSet=(Set<Long>)value_;
{
oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64,longSet.size()));
for (long _iter96 : longSet) {
oprot.writeI64(_iter96);
}
oprot.writeSetEnd();
}
return;
case STRING_SET:
Set<String> stringSet=(Set<String>)value_;
{
oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING,stringSet.size()));
for (String _iter97 : stringSet) {
oprot.writeString(_iter97);
}
oprot.writeSetEnd();
}
return;
case DOUBLE_SET:
Set<Double> doubleSet=(Set<Double>)value_;
{
oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.DOUBLE,doubleSet.size()));
for (double _iter98 : doubleSet) {
oprot.writeDouble(_iter98);
}
oprot.writeSetEnd();
}
return;
case STRING_STRING_MAP:
Map<String,String> stringStringMap=(Map<String,String>)value_;
{
oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,stringStringMap.size()));
for (Map.Entry<String,String> _iter99 : stringStringMap.entrySet()) {
oprot.writeString(_iter99.getKey());
oprot.writeString(_iter99.getValue());
}
oprot.writeMapEnd();
}
return;
case STRING_LONG_MAP:
Map<String,Long> stringLongMap=(Map<String,Long>)value_;
{
oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,stringLongMap.size()));
for (Map.Entry<String,Long> _iter100 : stringLongMap.entrySet()) {
oprot.writeString(_iter100.getKey());
oprot.writeI64(_iter100.getValue());
}
oprot.writeMapEnd();
}
return;
case STRING_DOUBLE_MAP:
Map<String,Double> stringDoubleMap=(Map<String,Double>)value_;
{
oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.DOUBLE,stringDoubleMap.size()));
for (Map.Entry<String,Double> _iter101 : stringDoubleMap.entrySet()) {
oprot.writeString(_iter101.getKey());
oprot.writeDouble(_iter101.getValue());
}
oprot.writeMapEnd();
}
return;
case STRING_STRING_SET_MAP:
Map<String,Set<String>> stringStringSetMap=(Map<String,Set<String>>)value_;
{
oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.SET,stringStringSetMap.size()));
for (Map.Entry<String,Set<String>> _iter102 : stringStringSetMap.entrySet()) {
oprot.writeString(_iter102.getKey());
{
oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING,_iter102.getValue().size()));
for (String _iter103 : _iter102.getValue()) {
oprot.writeString(_iter103);
}
oprot.writeSetEnd();
}
}
oprot.writeMapEnd();
}
return;
case STRING_LONG_SET_MAP:
Map<String,Set<Long>> stringLongSetMap=(Map<String,Set<Long>>)value_;
{
oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.SET,stringLongSetMap.size()));
for (Map.Entry<String,Set<Long>> _iter104 : stringLongSetMap.entrySet()) {
oprot.writeString(_iter104.getKey());
{
oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64,_iter104.getValue().size()));
for (long _iter105 : _iter104.getValue()) {
oprot.writeI64(_iter105);
}
oprot.writeSetEnd();
}
}
oprot.writeMapEnd();
}
return;
case STRING_DOUBLE_SET_MAP:
Map<String,Set<Double>> stringDoubleSetMap=(Map<String,Set<Double>>)value_;
{
oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.SET,stringDoubleSetMap.size()));
for (Map.Entry<String,Set<Double>> _iter106 : stringDoubleSetMap.entrySet()) {
oprot.writeString(_iter106.getKey());
{
oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.DOUBLE,_iter106.getValue().size()));
for (double _iter107 : _iter106.getValue()) {
oprot.writeDouble(_iter107);
}
oprot.writeSetEnd();
}
}
oprot.writeMapEnd();
}
return;
default :
throw new IllegalStateException("Cannot write union with unknown field " + setField_);
}
}
