{
  _Fields setField=_Fields.findByThriftId(fieldID);
  if (setField != null) {
switch (setField) {
case LONG_VAL:
      Long longVal;
    longVal=iprot.readI64();
  return longVal;
case STRING_VAL:
String stringVal;
stringVal=iprot.readString();
return stringVal;
case DOUBLE_VAL:
Double doubleVal;
doubleVal=iprot.readDouble();
return doubleVal;
case LONG_SET:
Set<Long> longSet;
{
org.apache.thrift.protocol.TSet _set54=iprot.readSetBegin();
longSet=new HashSet<Long>(2 * _set54.size);
for (int _i55=0; _i55 < _set54.size; ++_i55) {
long _elem56;
_elem56=iprot.readI64();
longSet.add(_elem56);
}
iprot.readSetEnd();
}
return longSet;
case STRING_SET:
Set<String> stringSet;
{
org.apache.thrift.protocol.TSet _set57=iprot.readSetBegin();
stringSet=new HashSet<String>(2 * _set57.size);
for (int _i58=0; _i58 < _set57.size; ++_i58) {
String _elem59;
_elem59=iprot.readString();
stringSet.add(_elem59);
}
iprot.readSetEnd();
}
return stringSet;
case DOUBLE_SET:
Set<Double> doubleSet;
{
org.apache.thrift.protocol.TSet _set60=iprot.readSetBegin();
doubleSet=new HashSet<Double>(2 * _set60.size);
for (int _i61=0; _i61 < _set60.size; ++_i61) {
double _elem62;
_elem62=iprot.readDouble();
doubleSet.add(_elem62);
}
iprot.readSetEnd();
}
return doubleSet;
case STRING_STRING_MAP:
Map<String,String> stringStringMap;
{
org.apache.thrift.protocol.TMap _map63=iprot.readMapBegin();
stringStringMap=new HashMap<String,String>(2 * _map63.size);
for (int _i64=0; _i64 < _map63.size; ++_i64) {
String _key65;
String _val66;
_key65=iprot.readString();
_val66=iprot.readString();
stringStringMap.put(_key65,_val66);
}
iprot.readMapEnd();
}
return stringStringMap;
case STRING_LONG_MAP:
Map<String,Long> stringLongMap;
{
org.apache.thrift.protocol.TMap _map67=iprot.readMapBegin();
stringLongMap=new HashMap<String,Long>(2 * _map67.size);
for (int _i68=0; _i68 < _map67.size; ++_i68) {
String _key69;
long _val70;
_key69=iprot.readString();
_val70=iprot.readI64();
stringLongMap.put(_key69,_val70);
}
iprot.readMapEnd();
}
return stringLongMap;
case STRING_DOUBLE_MAP:
Map<String,Double> stringDoubleMap;
{
org.apache.thrift.protocol.TMap _map71=iprot.readMapBegin();
stringDoubleMap=new HashMap<String,Double>(2 * _map71.size);
for (int _i72=0; _i72 < _map71.size; ++_i72) {
String _key73;
double _val74;
_key73=iprot.readString();
_val74=iprot.readDouble();
stringDoubleMap.put(_key73,_val74);
}
iprot.readMapEnd();
}
return stringDoubleMap;
case STRING_STRING_SET_MAP:
Map<String,Set<String>> stringStringSetMap;
{
org.apache.thrift.protocol.TMap _map75=iprot.readMapBegin();
stringStringSetMap=new HashMap<String,Set<String>>(2 * _map75.size);
for (int _i76=0; _i76 < _map75.size; ++_i76) {
String _key77;
Set<String> _val78;
_key77=iprot.readString();
{
org.apache.thrift.protocol.TSet _set79=iprot.readSetBegin();
_val78=new HashSet<String>(2 * _set79.size);
for (int _i80=0; _i80 < _set79.size; ++_i80) {
String _elem81;
_elem81=iprot.readString();
_val78.add(_elem81);
}
iprot.readSetEnd();
}
stringStringSetMap.put(_key77,_val78);
}
iprot.readMapEnd();
}
return stringStringSetMap;
case STRING_LONG_SET_MAP:
Map<String,Set<Long>> stringLongSetMap;
{
org.apache.thrift.protocol.TMap _map82=iprot.readMapBegin();
stringLongSetMap=new HashMap<String,Set<Long>>(2 * _map82.size);
for (int _i83=0; _i83 < _map82.size; ++_i83) {
String _key84;
Set<Long> _val85;
_key84=iprot.readString();
{
org.apache.thrift.protocol.TSet _set86=iprot.readSetBegin();
_val85=new HashSet<Long>(2 * _set86.size);
for (int _i87=0; _i87 < _set86.size; ++_i87) {
long _elem88;
_elem88=iprot.readI64();
_val85.add(_elem88);
}
iprot.readSetEnd();
}
stringLongSetMap.put(_key84,_val85);
}
iprot.readMapEnd();
}
return stringLongSetMap;
case STRING_DOUBLE_SET_MAP:
Map<String,Set<Double>> stringDoubleSetMap;
{
org.apache.thrift.protocol.TMap _map89=iprot.readMapBegin();
stringDoubleSetMap=new HashMap<String,Set<Double>>(2 * _map89.size);
for (int _i90=0; _i90 < _map89.size; ++_i90) {
String _key91;
Set<Double> _val92;
_key91=iprot.readString();
{
org.apache.thrift.protocol.TSet _set93=iprot.readSetBegin();
_val92=new HashSet<Double>(2 * _set93.size);
for (int _i94=0; _i94 < _set93.size; ++_i94) {
double _elem95;
_elem95=iprot.readDouble();
_val92.add(_elem95);
}
iprot.readSetEnd();
}
stringDoubleSetMap.put(_key91,_val92);
}
iprot.readMapEnd();
}
return stringDoubleSetMap;
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
throw new TProtocolException("Couldn't find a field with field id " + fieldID);
}
}
