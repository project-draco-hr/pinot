{
  _Fields setField=_Fields.findByThriftId(fieldID);
  if (setField != null) {
switch (setField) {
case LONG_VAL:
      Long longVal;
    longVal=iprot.readI64();
  return longVal;
case STRING_VAL:
String stringVal;
stringVal=iprot.readString();
return stringVal;
case DOUBLE_VAL:
Double doubleVal;
doubleVal=iprot.readDouble();
return doubleVal;
case LONG_SET:
Set<Long> longSet;
{
org.apache.thrift.protocol.TSet _set54=iprot.readSetBegin();
longSet=new HashSet<Long>(2 * _set54.size);
long _elem55;
for (int _i56=0; _i56 < _set54.size; ++_i56) {
_elem55=iprot.readI64();
longSet.add(_elem55);
}
iprot.readSetEnd();
}
return longSet;
case STRING_SET:
Set<String> stringSet;
{
org.apache.thrift.protocol.TSet _set57=iprot.readSetBegin();
stringSet=new HashSet<String>(2 * _set57.size);
String _elem58;
for (int _i59=0; _i59 < _set57.size; ++_i59) {
_elem58=iprot.readString();
stringSet.add(_elem58);
}
iprot.readSetEnd();
}
return stringSet;
case DOUBLE_SET:
Set<Double> doubleSet;
{
org.apache.thrift.protocol.TSet _set60=iprot.readSetBegin();
doubleSet=new HashSet<Double>(2 * _set60.size);
double _elem61;
for (int _i62=0; _i62 < _set60.size; ++_i62) {
_elem61=iprot.readDouble();
doubleSet.add(_elem61);
}
iprot.readSetEnd();
}
return doubleSet;
case STRING_STRING_MAP:
Map<String,String> stringStringMap;
{
org.apache.thrift.protocol.TMap _map63=iprot.readMapBegin();
stringStringMap=new HashMap<String,String>(2 * _map63.size);
String _key64;
String _val65;
for (int _i66=0; _i66 < _map63.size; ++_i66) {
_key64=iprot.readString();
_val65=iprot.readString();
stringStringMap.put(_key64,_val65);
}
iprot.readMapEnd();
}
return stringStringMap;
case STRING_LONG_MAP:
Map<String,Long> stringLongMap;
{
org.apache.thrift.protocol.TMap _map67=iprot.readMapBegin();
stringLongMap=new HashMap<String,Long>(2 * _map67.size);
String _key68;
long _val69;
for (int _i70=0; _i70 < _map67.size; ++_i70) {
_key68=iprot.readString();
_val69=iprot.readI64();
stringLongMap.put(_key68,_val69);
}
iprot.readMapEnd();
}
return stringLongMap;
case STRING_DOUBLE_MAP:
Map<String,Double> stringDoubleMap;
{
org.apache.thrift.protocol.TMap _map71=iprot.readMapBegin();
stringDoubleMap=new HashMap<String,Double>(2 * _map71.size);
String _key72;
double _val73;
for (int _i74=0; _i74 < _map71.size; ++_i74) {
_key72=iprot.readString();
_val73=iprot.readDouble();
stringDoubleMap.put(_key72,_val73);
}
iprot.readMapEnd();
}
return stringDoubleMap;
case STRING_STRING_SET_MAP:
Map<String,Set<String>> stringStringSetMap;
{
org.apache.thrift.protocol.TMap _map75=iprot.readMapBegin();
stringStringSetMap=new HashMap<String,Set<String>>(2 * _map75.size);
String _key76;
Set<String> _val77;
for (int _i78=0; _i78 < _map75.size; ++_i78) {
_key76=iprot.readString();
{
org.apache.thrift.protocol.TSet _set79=iprot.readSetBegin();
_val77=new HashSet<String>(2 * _set79.size);
String _elem80;
for (int _i81=0; _i81 < _set79.size; ++_i81) {
_elem80=iprot.readString();
_val77.add(_elem80);
}
iprot.readSetEnd();
}
stringStringSetMap.put(_key76,_val77);
}
iprot.readMapEnd();
}
return stringStringSetMap;
case STRING_LONG_SET_MAP:
Map<String,Set<Long>> stringLongSetMap;
{
org.apache.thrift.protocol.TMap _map82=iprot.readMapBegin();
stringLongSetMap=new HashMap<String,Set<Long>>(2 * _map82.size);
String _key83;
Set<Long> _val84;
for (int _i85=0; _i85 < _map82.size; ++_i85) {
_key83=iprot.readString();
{
org.apache.thrift.protocol.TSet _set86=iprot.readSetBegin();
_val84=new HashSet<Long>(2 * _set86.size);
long _elem87;
for (int _i88=0; _i88 < _set86.size; ++_i88) {
_elem87=iprot.readI64();
_val84.add(_elem87);
}
iprot.readSetEnd();
}
stringLongSetMap.put(_key83,_val84);
}
iprot.readMapEnd();
}
return stringLongSetMap;
case STRING_DOUBLE_SET_MAP:
Map<String,Set<Double>> stringDoubleSetMap;
{
org.apache.thrift.protocol.TMap _map89=iprot.readMapBegin();
stringDoubleSetMap=new HashMap<String,Set<Double>>(2 * _map89.size);
String _key90;
Set<Double> _val91;
for (int _i92=0; _i92 < _map89.size; ++_i92) {
_key90=iprot.readString();
{
org.apache.thrift.protocol.TSet _set93=iprot.readSetBegin();
_val91=new HashSet<Double>(2 * _set93.size);
double _elem94;
for (int _i95=0; _i95 < _set93.size; ++_i95) {
_elem94=iprot.readDouble();
_val91.add(_elem94);
}
iprot.readSetEnd();
}
stringDoubleSetMap.put(_key90,_val91);
}
iprot.readMapEnd();
}
return stringDoubleSetMap;
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
throw new TProtocolException("Couldn't find a field with field id " + fieldID);
}
}
