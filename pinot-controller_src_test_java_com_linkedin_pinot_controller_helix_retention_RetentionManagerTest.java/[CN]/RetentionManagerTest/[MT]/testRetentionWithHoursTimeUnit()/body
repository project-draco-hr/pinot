{
  _retentionManager=new RetentionManager(_pinotHelixResourceManager,5);
  _retentionManager.start();
  long theDayAfterTomorrowSinceEpoch=System.currentTimeMillis() / 1000 / 60/ 60/ 24 + 2;
  long hoursSinceEpochTimeStamp=theDayAfterTomorrowSinceEpoch * 24;
  for (int i=0; i < 10; ++i) {
    SegmentMetadata segmentMetadata=getTimeSegmentMetadataImpl("373056","373056",TimeUnit.HOURS.toString());
    registerSegmentMetadat(segmentMetadata);
    Thread.sleep(100);
  }
  for (int i=0; i < 10; ++i) {
    SegmentMetadata segmentMetadata=getTimeSegmentMetadataImpl(hoursSinceEpochTimeStamp + "",hoursSinceEpochTimeStamp + "",TimeUnit.HOURS.toString());
    registerSegmentMetadat(segmentMetadata);
    Thread.sleep(100);
  }
  Assert.assertEquals(_helixZkManager.getHelixPropertyStore().getChildNames(ZKMetadataProvider.constructPropertyStorePathForResource(BrokerRequestUtils.getOfflineResourceNameForResource(_testResourceName)),AccessOption.PERSISTENT).size(),20);
  Thread.sleep(8000);
  LOGGER.info("Sleeping thread wakes up!");
  Assert.assertEquals(_helixAdmin.getResourceExternalView(HELIX_CLUSTER_NAME,BrokerRequestUtils.getOfflineResourceNameForResource(_testResourceName)).getPartitionSet().size(),10);
  Assert.assertEquals(_helixAdmin.getResourceIdealState(HELIX_CLUSTER_NAME,BrokerRequestUtils.getOfflineResourceNameForResource(_testResourceName)).getPartitionSet().size(),10);
  Assert.assertEquals(_helixZkManager.getHelixPropertyStore().getChildNames(ZKMetadataProvider.constructPropertyStorePathForResource(BrokerRequestUtils.getOfflineResourceNameForResource(_testResourceName)),AccessOption.PERSISTENT).size(),10);
  cleanupSegments();
}
