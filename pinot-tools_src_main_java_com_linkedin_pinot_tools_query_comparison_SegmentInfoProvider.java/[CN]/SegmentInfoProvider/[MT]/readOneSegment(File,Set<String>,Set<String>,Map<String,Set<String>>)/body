{
  File segmentDir;
  File tmpDir=null;
  if (segmentFile.isFile()) {
    tmpDir=File.createTempFile(SEGMENT_INFO_PROVIDER,null,new File(TMP_DIR));
    FileUtils.deleteQuietly(tmpDir);
    tmpDir.mkdir();
    TarGzCompressionUtils.unTar(segmentFile,tmpDir);
    segmentDir=tmpDir.listFiles()[0];
  }
 else {
    segmentDir=segmentFile;
  }
  IndexSegmentImpl indexSegment=(IndexSegmentImpl)Loaders.IndexSegment.load(segmentDir,ReadMode.heap);
  SegmentMetadata segmentMetadata=indexSegment.getSegmentMetadata();
  Schema schema=segmentMetadata.getSchema();
  uniqueDimensions.addAll(schema.getDimensionNames());
  uniqueMetrics.addAll(schema.getMetricNames());
  for (  DimensionFieldSpec fieldSpec : schema.getDimensionFieldSpecs()) {
    if (!fieldSpec.isSingleValueField()) {
      continue;
    }
    String column=fieldSpec.getName();
    Dictionary dictionary=indexSegment.getDictionaryFor(column);
    Set<String> values=columnValuesMap.get(column);
    if (values == null) {
      values=new HashSet<>();
      columnValuesMap.put(column,values);
    }
    int length=dictionary.length();
    for (int i=0; i < length; i++) {
      values.add(dictionary.getStringValue(i));
    }
  }
  if (tmpDir != null) {
    FileUtils.deleteQuietly(tmpDir);
  }
}
