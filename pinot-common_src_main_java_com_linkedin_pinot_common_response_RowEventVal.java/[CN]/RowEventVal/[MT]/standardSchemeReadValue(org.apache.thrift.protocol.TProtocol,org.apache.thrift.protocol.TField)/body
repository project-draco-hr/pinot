{
  _Fields setField=_Fields.findByThriftId(field.id);
  if (setField != null) {
switch (setField) {
case LONG_VAL:
      if (field.type == LONG_VAL_FIELD_DESC.type) {
        Long longVal;
        longVal=iprot.readI64();
        return longVal;
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
        return null;
      }
case STRING_VAL:
    if (field.type == STRING_VAL_FIELD_DESC.type) {
      String stringVal;
      stringVal=iprot.readString();
      return stringVal;
    }
 else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      return null;
    }
case DOUBLE_VAL:
  if (field.type == DOUBLE_VAL_FIELD_DESC.type) {
    Double doubleVal;
    doubleVal=iprot.readDouble();
    return doubleVal;
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
    return null;
  }
case LONG_SET:
if (field.type == LONG_SET_FIELD_DESC.type) {
  Set<Long> longSet;
{
    org.apache.thrift.protocol.TSet _set108=iprot.readSetBegin();
    longSet=new HashSet<Long>(2 * _set108.size);
    for (int _i109=0; _i109 < _set108.size; ++_i109) {
      long _elem110;
      _elem110=iprot.readI64();
      longSet.add(_elem110);
    }
    iprot.readSetEnd();
  }
  return longSet;
}
 else {
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  return null;
}
case STRING_SET:
if (field.type == STRING_SET_FIELD_DESC.type) {
Set<String> stringSet;
{
  org.apache.thrift.protocol.TSet _set111=iprot.readSetBegin();
  stringSet=new HashSet<String>(2 * _set111.size);
  for (int _i112=0; _i112 < _set111.size; ++_i112) {
    String _elem113;
    _elem113=iprot.readString();
    stringSet.add(_elem113);
  }
  iprot.readSetEnd();
}
return stringSet;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case DOUBLE_SET:
if (field.type == DOUBLE_SET_FIELD_DESC.type) {
Set<Double> doubleSet;
{
org.apache.thrift.protocol.TSet _set114=iprot.readSetBegin();
doubleSet=new HashSet<Double>(2 * _set114.size);
for (int _i115=0; _i115 < _set114.size; ++_i115) {
  double _elem116;
  _elem116=iprot.readDouble();
  doubleSet.add(_elem116);
}
iprot.readSetEnd();
}
return doubleSet;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case LONG_LIST:
if (field.type == LONG_LIST_FIELD_DESC.type) {
List<Long> longList;
{
org.apache.thrift.protocol.TList _list117=iprot.readListBegin();
longList=new ArrayList<Long>(_list117.size);
for (int _i118=0; _i118 < _list117.size; ++_i118) {
long _elem119;
_elem119=iprot.readI64();
longList.add(_elem119);
}
iprot.readListEnd();
}
return longList;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case STRING_LIST:
if (field.type == STRING_LIST_FIELD_DESC.type) {
List<String> stringList;
{
org.apache.thrift.protocol.TList _list120=iprot.readListBegin();
stringList=new ArrayList<String>(_list120.size);
for (int _i121=0; _i121 < _list120.size; ++_i121) {
String _elem122;
_elem122=iprot.readString();
stringList.add(_elem122);
}
iprot.readListEnd();
}
return stringList;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case DOUBLE_LIST:
if (field.type == DOUBLE_LIST_FIELD_DESC.type) {
List<Double> doubleList;
{
org.apache.thrift.protocol.TList _list123=iprot.readListBegin();
doubleList=new ArrayList<Double>(_list123.size);
for (int _i124=0; _i124 < _list123.size; ++_i124) {
double _elem125;
_elem125=iprot.readDouble();
doubleList.add(_elem125);
}
iprot.readListEnd();
}
return doubleList;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
}
