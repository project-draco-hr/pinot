{
  _Fields setField=_Fields.findByThriftId(field.id);
  if (setField != null) {
switch (setField) {
case LONG_VAL:
      if (field.type == LONG_VAL_FIELD_DESC.type) {
        Long longVal;
        longVal=iprot.readI64();
        return longVal;
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
        return null;
      }
case STRING_VAL:
    if (field.type == STRING_VAL_FIELD_DESC.type) {
      String stringVal;
      stringVal=iprot.readString();
      return stringVal;
    }
 else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      return null;
    }
case DOUBLE_VAL:
  if (field.type == DOUBLE_VAL_FIELD_DESC.type) {
    Double doubleVal;
    doubleVal=iprot.readDouble();
    return doubleVal;
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
    return null;
  }
case LONG_SET:
if (field.type == LONG_SET_FIELD_DESC.type) {
  Set<Long> longSet;
{
    org.apache.thrift.protocol.TSet _set108=iprot.readSetBegin();
    longSet=new HashSet<Long>(2 * _set108.size);
    long _elem109;
    for (int _i110=0; _i110 < _set108.size; ++_i110) {
      _elem109=iprot.readI64();
      longSet.add(_elem109);
    }
    iprot.readSetEnd();
  }
  return longSet;
}
 else {
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  return null;
}
case STRING_SET:
if (field.type == STRING_SET_FIELD_DESC.type) {
Set<String> stringSet;
{
  org.apache.thrift.protocol.TSet _set111=iprot.readSetBegin();
  stringSet=new HashSet<String>(2 * _set111.size);
  String _elem112;
  for (int _i113=0; _i113 < _set111.size; ++_i113) {
    _elem112=iprot.readString();
    stringSet.add(_elem112);
  }
  iprot.readSetEnd();
}
return stringSet;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case DOUBLE_SET:
if (field.type == DOUBLE_SET_FIELD_DESC.type) {
Set<Double> doubleSet;
{
org.apache.thrift.protocol.TSet _set114=iprot.readSetBegin();
doubleSet=new HashSet<Double>(2 * _set114.size);
double _elem115;
for (int _i116=0; _i116 < _set114.size; ++_i116) {
  _elem115=iprot.readDouble();
  doubleSet.add(_elem115);
}
iprot.readSetEnd();
}
return doubleSet;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case LONG_LIST:
if (field.type == LONG_LIST_FIELD_DESC.type) {
List<Long> longList;
{
org.apache.thrift.protocol.TList _list117=iprot.readListBegin();
longList=new ArrayList<Long>(_list117.size);
long _elem118;
for (int _i119=0; _i119 < _list117.size; ++_i119) {
_elem118=iprot.readI64();
longList.add(_elem118);
}
iprot.readListEnd();
}
return longList;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case STRING_LIST:
if (field.type == STRING_LIST_FIELD_DESC.type) {
List<String> stringList;
{
org.apache.thrift.protocol.TList _list120=iprot.readListBegin();
stringList=new ArrayList<String>(_list120.size);
String _elem121;
for (int _i122=0; _i122 < _list120.size; ++_i122) {
_elem121=iprot.readString();
stringList.add(_elem121);
}
iprot.readListEnd();
}
return stringList;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case DOUBLE_LIST:
if (field.type == DOUBLE_LIST_FIELD_DESC.type) {
List<Double> doubleList;
{
org.apache.thrift.protocol.TList _list123=iprot.readListBegin();
doubleList=new ArrayList<Double>(_list123.size);
double _elem124;
for (int _i125=0; _i125 < _list123.size; ++_i125) {
_elem124=iprot.readDouble();
doubleList.add(_elem124);
}
iprot.readListEnd();
}
return doubleList;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
}
