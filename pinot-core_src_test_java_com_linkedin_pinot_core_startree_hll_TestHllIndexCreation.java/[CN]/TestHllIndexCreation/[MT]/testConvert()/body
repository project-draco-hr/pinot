{
  SegmentWithHllIndexCreateHelper helper=null;
  try {
    helper=new SegmentWithHllIndexCreateHelper("testConvert",AVRO_DATA,timeColumnName,timeUnit);
    SegmentIndexCreationDriver driver=helper.build(true,hllConfig);
    File segmentDirectory=new File(helper.getIndexDir(),driver.getSegmentName());
    LOGGER.debug("Segment Directory: " + segmentDirectory.getAbsolutePath());
    SegmentV1V2ToV3FormatConverter converter=new SegmentV1V2ToV3FormatConverter();
    converter.convert(segmentDirectory);
    File v3Location=SegmentDirectoryPaths.segmentDirectoryFor(segmentDirectory,SegmentVersion.v3);
    LOGGER.debug("v3Location: " + v3Location.getAbsolutePath());
    Assert.assertTrue(v3Location.exists());
    Assert.assertTrue(v3Location.isDirectory());
    Assert.assertTrue(new File(v3Location,V1Constants.STAR_TREE_INDEX_FILE).exists());
    SegmentMetadataImpl metadata=new SegmentMetadataImpl(v3Location);
    LOGGER.debug("metadata all columns: " + metadata.getAllColumns());
    Assert.assertEquals(metadata.getVersion(),SegmentVersion.v3.toString());
    Assert.assertTrue(new File(v3Location,V1Constants.SEGMENT_CREATION_META).exists());
    FileTime afterConversionTime=Files.getLastModifiedTime(v3Location.toPath());
    IndexSegment indexSegment=Loaders.IndexSegment.load(segmentDirectory,ReadMode.mmap,v3LoadingConfig);
    Assert.assertNotNull(indexSegment);
    Assert.assertEquals(indexSegment.getSegmentName(),metadata.getName());
    Assert.assertEquals(SegmentVersion.v3,SegmentVersion.valueOf(indexSegment.getSegmentMetadata().getVersion()));
    FileTime afterLoadTime=Files.getLastModifiedTime(v3Location.toPath());
    Assert.assertEquals(afterConversionTime,afterLoadTime);
    IndexSegment v2IndexSegment=Loaders.IndexSegment.load(segmentDirectory,ReadMode.mmap,v1LoadingConfig);
    Assert.assertNotNull(v2IndexSegment);
    Assert.assertEquals(SegmentVersion.valueOf(v2IndexSegment.getSegmentMetadata().getVersion()),SegmentVersion.v1);
    Assert.assertTrue(v3Location.exists());
  }
  finally {
    if (helper != null) {
      helper.cleanTempDir();
    }
  }
}
