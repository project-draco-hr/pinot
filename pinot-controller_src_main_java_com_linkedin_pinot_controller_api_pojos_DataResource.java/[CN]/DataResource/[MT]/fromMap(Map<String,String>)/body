{
  if (Helix.DataSourceRequestType.CREATE.equalsIgnoreCase(props.get(Helix.DataSource.REQUEST_TYPE))) {
    return new DataResource(props.get(Helix.DataSource.REQUEST_TYPE),props.get(Helix.DataSource.RESOURCE_NAME),props.get(Helix.DataSource.TABLE_NAME),props.get(Helix.DataSource.TIME_COLUMN_NAME),props.get(Helix.DataSource.TIME_TYPE),Integer.parseInt(props.get(Helix.DataSource.NUMBER_OF_DATA_INSTANCES)),Integer.parseInt(props.get(Helix.DataSource.NUMBER_OF_COPIES)),props.get(Helix.DataSource.RETENTION_TIME_UNIT),props.get(Helix.DataSource.RETENTION_TIME_VALUE),props.get(Helix.DataSource.PUSH_FREQUENCY),props.get(Helix.DataSource.SEGMENT_ASSIGNMENT_STRATEGY),props.get(Helix.DataSource.BROKER_TAG_NAME),Integer.parseInt(props.get(Helix.DataSource.NUMBER_OF_BROKER_INSTANCES)),null);
  }
  if (Helix.DataSourceRequestType.UPDATE_DATA_RESOURCE.equalsIgnoreCase(props.get(Helix.DataSource.REQUEST_TYPE))) {
    return new DataResource(props.get(Helix.DataSource.REQUEST_TYPE),props.get(Helix.DataSource.RESOURCE_NAME),props.get(Helix.DataSource.TABLE_NAME),null,null,Integer.parseInt(props.get(Helix.DataSource.NUMBER_OF_DATA_INSTANCES)),Integer.parseInt(props.get(Helix.DataSource.NUMBER_OF_COPIES)),null,null,null,null,null,-1,null);
  }
  if (Helix.DataSourceRequestType.UPDATE_BROKER_RESOURCE.equalsIgnoreCase(props.get(Helix.DataSource.REQUEST_TYPE))) {
    return new DataResource(props.get(Helix.DataSource.REQUEST_TYPE),props.get(Helix.DataSource.RESOURCE_NAME),props.get(Helix.DataSource.TABLE_NAME),null,null,-1,-1,null,null,null,null,props.get(Helix.DataSource.BROKER_TAG_NAME),Integer.parseInt(props.get(Helix.DataSource.NUMBER_OF_BROKER_INSTANCES)),null);
  }
  if (CommonConstants.Helix.DataSourceRequestType.ADD_TABLE_TO_RESOURCE.equalsIgnoreCase(props.get(CommonConstants.Helix.DataSource.REQUEST_TYPE))) {
    return new DataResource(props.get(CommonConstants.Helix.DataSource.REQUEST_TYPE),props.get(CommonConstants.Helix.DataSource.RESOURCE_NAME),props.get(CommonConstants.Helix.DataSource.TABLE_NAME),null,null,-1,-1,null,null,null,null,null,-1,null);
  }
  throw new UnsupportedOperationException("Don't support Request type: " + props.get(Helix.DataSource.REQUEST_TYPE));
}
