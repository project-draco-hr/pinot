{
  final PinotResourceManagerResponse res=new PinotResourceManagerResponse();
  try {
    if (!matchResourceAndTableName(segmentMetadata)) {
      res.status=STATUS.failure;
      res.errorMessage="Reject segment: resource name and table name are not registered." + " Resource name: " + segmentMetadata.getResourceName() + ", Table name: "+ segmentMetadata.getTableName()+ "\n";
      return res;
    }
    if (ifSegmentExisted(segmentMetadata)) {
      if (ifRefreshAnExistedSegment(segmentMetadata)) {
        final ZNRecord record=_propertyStore.get(PinotHelixUtils.constructPropertyStorePathForSegment(segmentMetadata.getResourceName(),segmentMetadata.getName()),null,AccessOption.PERSISTENT);
        Map<String,String> segmentMetadataMap=segmentMetadata.toMap();
        for (        String key : segmentMetadataMap.keySet()) {
          record.setSimpleField(key,segmentMetadataMap.get(key));
        }
        record.setSimpleField(V1Constants.SEGMENT_DOWNLOAD_URL,downloadUrl);
        record.setSimpleField(V1Constants.SEGMENT_REFRESH_TIME,String.valueOf(System.currentTimeMillis()));
        _propertyStore.set(PinotHelixUtils.constructPropertyStorePathForSegment(segmentMetadata),record,AccessOption.PERSISTENT);
        LOGGER.info("Refresh segment : " + segmentMetadata.getName() + " to Property store");
        if (updateExistedSegment(segmentMetadata)) {
          res.status=STATUS.success;
        }
      }
    }
 else {
      final ZNRecord record=new ZNRecord(segmentMetadata.getName());
      record.setSimpleFields(segmentMetadata.toMap());
      record.setSimpleField(V1Constants.SEGMENT_DOWNLOAD_URL,downloadUrl);
      record.setSimpleField(V1Constants.SEGMENT_PUSH_TIME,String.valueOf(System.currentTimeMillis()));
      _propertyStore.create(PinotHelixUtils.constructPropertyStorePathForSegment(segmentMetadata),record,AccessOption.PERSISTENT);
      LOGGER.info("Added segment : " + segmentMetadata.getName() + " to Property store");
      final IdealState idealState=PinotResourceIdealStateBuilder.addNewSegmentToIdealStateFor(segmentMetadata,_helixAdmin,_helixClusterName);
      _helixAdmin.setResourceIdealState(_helixClusterName,segmentMetadata.getResourceName(),idealState);
      res.status=STATUS.success;
    }
  }
 catch (  final Exception e) {
    res.status=STATUS.failure;
    res.errorMessage=e.getMessage();
    LOGGER.error("Caught exception while adding segment",e);
  }
  return res;
}
