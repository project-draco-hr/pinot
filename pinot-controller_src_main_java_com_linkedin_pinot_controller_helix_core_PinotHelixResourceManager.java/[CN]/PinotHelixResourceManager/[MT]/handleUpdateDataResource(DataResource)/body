{
  try {
    ResourceType resourceType=resource.getResourceType();
    String resourceName;
switch (resourceType) {
case OFFLINE:
      resourceName=BrokerRequestUtils.getOfflineResourceNameForResource(resource.getResourceName());
    return handleUpdateDataResourceFor(resourceName,resource);
case REALTIME:
  resourceName=BrokerRequestUtils.buildRealtimeResourceNameForResource(resource.getResourceName());
return handleUpdateDataResourceFor(resourceName,resource);
case HYBRID:
resourceName=BrokerRequestUtils.getOfflineResourceNameForResource(resource.getResourceName());
PinotResourceManagerResponse res=handleUpdateDataResourceFor(resourceName,resource);
if (res.isSuccessfull()) {
resourceName=BrokerRequestUtils.buildRealtimeResourceNameForResource(resource.getResourceName());
return handleUpdateDataResourceFor(resourceName,resource);
}
 else {
return res;
}
default :
throw new RuntimeException("Unsupported operation for ResourceType: " + resourceType);
}
}
 catch (Exception e) {
LOGGER.error("Caught exception while handling data resource update",e);
PinotResourceManagerResponse res=new PinotResourceManagerResponse();
res.errorMessage="ResourceType has to be REALTIME/OFFLINE/HYBRID : " + e.getMessage();
res.status=STATUS.failure;
return res;
}
}
