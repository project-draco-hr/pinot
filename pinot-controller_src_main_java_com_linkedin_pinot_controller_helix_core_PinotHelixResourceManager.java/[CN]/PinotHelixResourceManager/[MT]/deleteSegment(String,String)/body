{
  LOGGER.info("Trying to delete segment : " + segmentId);
  final PinotResourceManagerResponse res=new PinotResourceManagerResponse();
  try {
    IdealState idealState=_helixAdmin.getResourceIdealState(_helixClusterName,resourceName);
    idealState=PinotResourceIdealStateBuilder.dropSegmentFromIdealStateFor(resourceName,segmentId,_helixAdmin,_helixClusterName);
    _helixAdmin.setResourceIdealState(_helixClusterName,resourceName,idealState);
    idealState=PinotResourceIdealStateBuilder.removeSegmentFromIdealStateFor(resourceName,segmentId,_helixAdmin,_helixClusterName);
    _helixAdmin.setResourceIdealState(_helixClusterName,resourceName,idealState);
    _executorService.schedule(new Runnable(){
      @Override public void run(){
        deleteSegmentFromPropertyStoreAndLocal(resourceName,segmentId);
      }
    }
,5,TimeUnit.SECONDS);
    res.status=STATUS.success;
  }
 catch (  final Exception e) {
    res.status=STATUS.failure;
    res.errorMessage=e.getMessage();
  }
  return res;
}
