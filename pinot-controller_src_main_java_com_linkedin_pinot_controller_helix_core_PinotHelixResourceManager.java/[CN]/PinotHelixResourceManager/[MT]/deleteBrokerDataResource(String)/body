{
  final PinotResourceManagerResponse res=new PinotResourceManagerResponse();
  try {
    IdealState idealState=_helixAdmin.getResourceIdealState(_helixClusterName,CommonConstants.Helix.BROKER_RESOURCE_INSTANCE);
    final Set<String> instanceNames=idealState.getInstanceSet(CommonConstants.Helix.BROKER_RESOURCE_INSTANCE);
    for (    final String instanceName : instanceNames) {
      _helixAdmin.enablePartition(false,_helixClusterName,instanceName,CommonConstants.Helix.BROKER_RESOURCE_INSTANCE,Arrays.asList(brokerDataResourceName));
    }
    idealState=PinotResourceIdealStateBuilder.removeBrokerResourceFromIdealStateFor(brokerDataResourceName,_helixAdmin,_helixClusterName);
    _helixAdmin.setResourceIdealState(_helixClusterName,CommonConstants.Helix.BROKER_RESOURCE_INSTANCE,idealState);
    for (    final String instanceName : instanceNames) {
      _helixAdmin.enablePartition(true,_helixClusterName,instanceName,CommonConstants.Helix.BROKER_RESOURCE_INSTANCE,Arrays.asList(brokerDataResourceName));
    }
    ControllerHelixHelper.deleteBrokerDataResourceConfig(_helixAdmin,_helixClusterName,brokerDataResourceName);
    res.status=STATUS.success;
  }
 catch (  final Exception e) {
    res.status=STATUS.failure;
    res.errorMessage=e.getMessage();
  }
  return res;
}
