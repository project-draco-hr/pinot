{
  final List<String> unTaggedInstanceList=getOnlineUnTaggedServerInstanceList();
  final int numInstanceToUse=resource.getNumberOfDataInstances();
  LOGGER.info("Trying to allocate " + numInstanceToUse + " instances.");
  LOGGER.info("Current untagged boxes: " + unTaggedInstanceList.size());
  if (unTaggedInstanceList.size() < numInstanceToUse) {
    throw new UnsupportedOperationException("Cannot allocate enough hardware resource.");
  }
  for (int i=0; i < numInstanceToUse; ++i) {
    LOGGER.info("tag instance : " + unTaggedInstanceList.get(i).toString() + " to "+ resource.getResourceName());
    _helixAdmin.removeInstanceTag(_helixClusterName,unTaggedInstanceList.get(i),CommonConstants.Helix.UNTAGGED_SERVER_INSTANCE);
    _helixAdmin.addInstanceTag(_helixClusterName,unTaggedInstanceList.get(i),resource.getResourceName());
  }
  LOGGER.info("building empty ideal state for resource : " + resource.getResourceName());
  final IdealState idealState=PinotResourceIdealStateBuilder.buildEmptyIdealStateFor(resource,_helixAdmin,_helixClusterName);
  LOGGER.info("adding resource via the admin");
  _helixAdmin.addResource(_helixClusterName,resource.getResourceName(),idealState);
  LOGGER.info("successfully added the resource : " + resource.getResourceName() + " to the cluster");
  HelixHelper.updateResourceConfigsFor(resource.toResourceConfigMap(),resource.getResourceName(),_helixClusterName,_helixAdmin);
}
