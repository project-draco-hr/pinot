{
  Map<String,Object> fields=new HashMap<>();
  for (  String column : columns) {
    if (isSingleValueMap.get(column)) {
      Dictionary dictionary=null;
      int dictionaryId;
      if (!isSortedMap.get(column)) {
        SingleColumnSingleValueReader singleValueReader=singleValueReaderMap.get(column);
        dictionary=pinotDictionaryBufferMap.get(column);
        dictionaryId=singleValueReader.getInt(docNumber);
      }
 else {
        SortedForwardIndexReader svSortedReader=singleValueSortedReaderMap.get(column);
        dictionary=pinotDictionaryBufferMap.get(column);
        dictionaryId=svSortedReader.getInt(docNumber);
      }
      if (dictionary == null) {
        throw new IllegalStateException("Dictionary not found for " + column);
      }
      fields.put(column,dictionary.get(dictionaryId));
    }
 else {
      SingleColumnMultiValueReader mvReader=multiValueReaderMap.get(column);
      int[] dictionaryIdArray=(int[])multiValueArrayMap.get(column);
      mvReader.getIntArray(docNumber,dictionaryIdArray);
      Dictionary dictionary=pinotDictionaryBufferMap.get(column);
      Object[] objectArray=new Object[dictionaryIdArray.length];
      for (int i=0; i < dictionaryIdArray.length; i++) {
        objectArray[i]=dictionary.get(dictionaryIdArray[i]);
      }
      fields.put(column,objectArray);
    }
  }
  GenericRow row=new GenericRow();
  row.init(fields);
  docNumber++;
  return row;
}
