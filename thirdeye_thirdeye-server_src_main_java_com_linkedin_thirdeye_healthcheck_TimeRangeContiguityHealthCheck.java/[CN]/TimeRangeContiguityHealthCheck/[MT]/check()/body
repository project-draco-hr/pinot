{
  for (  String collection : manager.getCollections()) {
    Set<TimeRange> indexTimeRanges=new HashSet<TimeRange>();
    List<TimeRange> missingRanges=new ArrayList<TimeRange>();
    File metricStoreDir=new File(PATH_JOINER.join(rootDir,collection,StarTreeConstants.DATA_DIR_PREFIX,StarTreeConstants.METRIC_STORE));
    File[] metricIndexFiles=metricStoreDir.listFiles(INDEX_FILE_FILTER);
    if (metricIndexFiles != null) {
      for (      File metricIndexFile : metricIndexFiles) {
        List<MetricIndexEntry> indexEntries=StorageUtils.readMetricIndex(metricIndexFile);
        for (        MetricIndexEntry metricIndexEntry : indexEntries) {
          if (!indexTimeRanges.contains(metricIndexEntry.getTimeRange())) {
            indexTimeRanges.add(metricIndexEntry.getTimeRange());
          }
        }
      }
    }
    if (indexTimeRanges.size() != 0) {
      List<TimeRange> sortedTimeRanges=new ArrayList<TimeRange>(indexTimeRanges);
      Collections.sort(sortedTimeRanges);
      long end=sortedTimeRanges.get(0).getEnd();
      for (int i=1; i < sortedTimeRanges.size(); i++) {
        if (sortedTimeRanges.get(i).getStart() <= end + 1) {
          if (sortedTimeRanges.get(i).getEnd() > end)           end=sortedTimeRanges.get(i).getEnd();
        }
 else {
          missingRanges.add(new TimeRange(end + 1,sortedTimeRanges.get(i).getStart()));
          end=sortedTimeRanges.get(i).getEnd();
        }
      }
      if (missingRanges.size() != 0) {
        String listMissingRanges="";
        for (        TimeRange missingRange : missingRanges) {
          listMissingRanges=listMissingRanges + "[" + missingRange.getStart()+ ":"+ missingRange.getEnd()+ "] ";
        }
        throw new IllegalStateException("Collection " + collection + " is missing timeranges "+ listMissingRanges);
      }
    }
  }
  return Result.healthy();
}
