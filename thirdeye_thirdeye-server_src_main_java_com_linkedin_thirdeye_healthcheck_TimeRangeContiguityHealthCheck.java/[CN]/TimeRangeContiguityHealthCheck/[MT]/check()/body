{
  for (  String collection : manager.getCollections()) {
    List<TimeRange> indexTimeRanges=new ArrayList<TimeRange>();
    List<TimeRange> missingRanges=new ArrayList<TimeRange>();
    File metricStoreDir=new File(PATH_JOINER.join(rootDir,collection,StarTreeConstants.DATA_DIR_NAME,StarTreeConstants.METRIC_STORE));
    File[] metricIndexFiles=metricStoreDir.listFiles(INDEX_FILE_FILTER);
    if (metricIndexFiles != null) {
      for (      File metricIndexFile : metricIndexFiles) {
        List<MetricIndexEntry> indexEntries=StorageUtils.readMetricIndex(metricIndexFile);
        for (        MetricIndexEntry metricIndexEntry : indexEntries) {
          if (!indexTimeRanges.contains(metricIndexEntry.getTimeRange())) {
            indexTimeRanges.add(metricIndexEntry.getTimeRange());
          }
        }
      }
    }
    if (indexTimeRanges.size() != 0) {
      Collections.sort(indexTimeRanges);
      long minStart=indexTimeRanges.get(0).getStart();
      long maxEnd=indexTimeRanges.get(0).getEnd();
      for (      TimeRange timerange : indexTimeRanges) {
        if (timerange.getStart() <= maxEnd + 1) {
          maxEnd=(timerange.getEnd() > maxEnd) ? timerange.getEnd() : maxEnd;
        }
 else {
          missingRanges.add(new TimeRange(maxEnd + 1,timerange.getStart() - 1));
          minStart=timerange.getStart();
          maxEnd=timerange.getEnd();
        }
      }
      if (missingRanges.size() != 0) {
        String listMissingRanges="";
        for (        TimeRange missingRange : missingRanges) {
          listMissingRanges=listMissingRanges + "[" + missingRange.getStart()+ ":"+ missingRange.getEnd()+ "] ";
        }
        throw new IllegalStateException("Collection " + collection + " is missing timeranges "+ listMissingRanges);
      }
    }
  }
  return Result.healthy();
}
