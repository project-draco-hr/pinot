{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetQueryType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.queryType,other.queryType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetQuerySource()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.querySource,other.querySource);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimeInterval()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timeInterval,other.timeInterval);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDuration()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.duration,other.duration);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFilterQuery()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.filterQuery,other.filterQuery);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAggregationsInfo()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo,other.aggregationsInfo);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetGroupBy()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.groupBy,other.groupBy);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSelections()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.selections,other.selections);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFilterSubQueryMap()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap,other.filterSubQueryMap);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBucketHashKey()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey,other.bucketHashKey);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetEnableTrace()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.enableTrace,other.enableTrace);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
