{
  List<Future<Set<String>>> dimensionValuesFutures=new LinkedList<>();
  for (  final StarTree starTree : starTrees) {
    Future<Set<String>> future=executorService.submit(new Callable<Set<String>>(){
      @Override public Set<String> call() throws Exception {
        return starTree.getDimensionValues(dimension,fixedDimensions);
      }
    }
);
    dimensionValuesFutures.add(future);
  }
  Set<String> dimensionValues=new HashSet<>();
  for (  Future<Set<String>> future : dimensionValuesFutures) {
    Set<String> values=future.get();
    dimensionValues.addAll(values);
  }
  boolean hasOther=dimensionValues.remove(OTHER_DIMENSION_VALUE);
  boolean hasUnknown=dimensionValues.remove(UNKNOWN_DIMENSION_VALUE);
  List<String> sortedValues=new ArrayList<>(dimensionValues);
  Collections.sort(sortedValues);
  if (hasOther) {
    sortedValues.add(OTHER_DIMENSION_VALUE);
  }
  if (hasUnknown) {
    dimensionValues.add(UNKNOWN_DIMENSION_VALUE);
  }
  return sortedValues;
}
