{
  int index=0;
  Queue<StarTreeIndexNode> queue=new LinkedList<>();
  StarTreeIndexNode root=(StarTreeIndexNode)starTree.getRoot();
  queue.add(root);
  while (!queue.isEmpty()) {
    StarTreeIndexNode node=queue.poll();
    List<StarTreeIndexNode> children=getSortedChildren(node);
    int numChildren=children.size();
    int startChildrenIndex=(numChildren != 0) ? (index + queue.size() + 1) : StarTreeIndexNodeOffHeap.INVALID_INDEX;
    int endChildrenIndex=(numChildren != 0) ? (startChildrenIndex + numChildren - 1) : StarTreeIndexNodeOffHeap.INVALID_INDEX;
    offset=writeOneOffHeapNode(mappedByteBuffer,offset,node,startChildrenIndex,endChildrenIndex);
    for (    StarTreeIndexNode child : children) {
      queue.add(child);
    }
    index++;
  }
}
