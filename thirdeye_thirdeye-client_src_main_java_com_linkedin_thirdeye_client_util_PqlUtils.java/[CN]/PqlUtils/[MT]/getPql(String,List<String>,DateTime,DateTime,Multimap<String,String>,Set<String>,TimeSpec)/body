{
  StringBuilder sb=new StringBuilder();
  String selectionClause=getSelectionClause(metrics,dataTimeSpec);
  sb.append("SELECT ").append(selectionClause).append(" FROM ").append(collection);
  String betweenClause=getBetweenClause(startTime,endTime,dataTimeSpec);
  sb.append(" WHERE ").append(betweenClause);
  String dimensionWhereClause=getDimensionWhereClause(dimensionValues);
  if (StringUtils.isNotBlank(dimensionWhereClause)) {
    sb.append(" AND ").append(dimensionWhereClause);
  }
  String groupByClause=getDimensionGroupByClause(groupBy,dataTimeSpec);
  if (StringUtils.isNotBlank(groupByClause)) {
    sb.append(" ").append(groupByClause);
  }
  int bucketCount=DEFAULT_TOP;
  if (groupBy == null || groupBy.isEmpty()) {
    long duration=endTime.getMillis() - startTime.getMillis();
    bucketCount=(int)dataTimeSpec.getBucket().getUnit().convert(duration,TimeUnit.MILLISECONDS) + 1;
  }
  sb.append(" TOP ").append(bucketCount);
  return sb.toString();
}
