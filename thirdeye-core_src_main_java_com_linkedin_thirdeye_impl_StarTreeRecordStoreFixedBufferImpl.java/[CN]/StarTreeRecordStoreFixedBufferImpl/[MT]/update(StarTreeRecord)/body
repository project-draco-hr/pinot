{
  int[] targetDimensions=new int[dimensionNames.size()];
  for (int i=0; i < dimensionNames.size(); i++) {
    String dimensionName=dimensionNames.get(i);
    String dimensionValue=record.getDimensionValues().get(dimensionName);
    int valueId=forwardIndex.get(dimensionName).get(dimensionValue);
    targetDimensions[i]=valueId;
  }
  int bucket=(int)(record.getTime() % timeBuckets.size());
  int idx=search(buffer,bucket,targetDimensions);
  if (idx < 0) {
    throw new IllegalArgumentException("No bucket for record " + record);
  }
  buffer.position(idx);
  buffer.getInt();
  for (  String dimensionName : dimensionNames) {
    buffer.getInt();
  }
  buffer.mark();
  long currentTime=buffer.getLong();
  long[] metricValues=new long[metricNames.size()];
  for (int i=0; i < metricNames.size(); i++) {
    long baseValue=buffer.getLong();
    if (record.getTime().equals(currentTime)) {
      metricValues[i]=baseValue + record.getMetricValues().get(metricNames.get(i));
    }
 else {
      metricValues[i]=record.getMetricValues().get(metricNames.get(i));
    }
  }
  buffer.reset();
  buffer.putLong(record.getTime());
  for (  long metricValue : metricValues) {
    buffer.putLong(metricValue);
  }
}
