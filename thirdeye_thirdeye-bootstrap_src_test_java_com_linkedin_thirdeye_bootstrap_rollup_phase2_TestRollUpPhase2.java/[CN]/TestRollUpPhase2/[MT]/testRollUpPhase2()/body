{
  List<Pair<BytesWritable,BytesWritable>> inputRecordsMapper=generateTestMapperData();
  mapDriver.addAll(inputRecordsMapper);
  List<Pair<BytesWritable,BytesWritable>> result=mapDriver.run();
  Assert.assertEquals(result.size(),30);
  List<Pair<BytesWritable,List<BytesWritable>>> inputRecordsReducer=generateTestReducerData();
  reduceDriver.addAll(inputRecordsReducer);
  result=reduceDriver.run();
  Assert.assertEquals(result.size(),8);
  Map<DimensionKey,MetricTimeSeries> store=new HashMap<DimensionKey,MetricTimeSeries>();
  for (  Pair<BytesWritable,BytesWritable> p : result) {
    RollupPhaseTwoReduceOutput output=RollupPhaseTwoReduceOutput.fromBytes(p.getSecond().getBytes(),TestHelper.getMetricSchema(rollUpConfig));
    if (store.get(output.getRollupDimensionKey()) != null) {
      Assert.assertEquals(store.get(output.rollupDimensionKey),output.getRollupTimeSeries());
    }
 else {
      store.put(output.getRollupDimensionKey(),output.getRollupTimeSeries());
    }
  }
}
