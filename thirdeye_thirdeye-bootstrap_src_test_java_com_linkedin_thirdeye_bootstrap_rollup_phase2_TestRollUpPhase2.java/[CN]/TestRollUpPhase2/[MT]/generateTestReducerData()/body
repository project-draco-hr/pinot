{
  List<Pair<BytesWritable,List<BytesWritable>>> inputRecords=new ArrayList<Pair<BytesWritable,List<BytesWritable>>>();
  BytesWritable keyWritable=new BytesWritable();
  List<BytesWritable> list=new ArrayList<BytesWritable>();
  Pair<BytesWritable,List<BytesWritable>> record;
  String[] input1={"A1","B1","C1"};
  DimensionKey rawKey1=new DimensionKey(input1);
  MetricTimeSeries rawSeries1=TestHelper.generateRandomMetricTimeSeries(rollUpConfig);
  String[] input2={"A1","B2","C1"};
  DimensionKey rawKey2=new DimensionKey(input2);
  MetricTimeSeries rawSeries2=TestHelper.generateRandomMetricTimeSeries(rollUpConfig);
  String[] combination1={"A1","B1","C1"};
  DimensionKey combinationKey=new DimensionKey(combination1);
  keyWritable.set(combinationKey.toMD5(),0,combinationKey.toMD5().length);
  RollupPhaseTwoMapOutput wrapper;
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey1,rawSeries1);
  list=new ArrayList<BytesWritable>();
  list.add(new BytesWritable(wrapper.toBytes()));
  record=new Pair<BytesWritable,List<BytesWritable>>(keyWritable,list);
  inputRecords.add(record);
  String[] combination2={"?","B1","C1"};
  combinationKey=new DimensionKey(combination2);
  keyWritable.set(combinationKey.toMD5(),0,combinationKey.toMD5().length);
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey1,rawSeries1);
  list=new ArrayList<BytesWritable>();
  list.add(new BytesWritable(wrapper.toBytes()));
  record=new Pair<BytesWritable,List<BytesWritable>>(keyWritable,list);
  inputRecords.add(record);
  String[] combination3={"?","?","C1"};
  combinationKey=new DimensionKey(combination3);
  keyWritable.set(combinationKey.toMD5(),0,combinationKey.toMD5().length);
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey1,rawSeries1);
  list=new ArrayList<BytesWritable>();
  list.add(new BytesWritable(wrapper.toBytes()));
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey2,rawSeries2);
  list.add(new BytesWritable(wrapper.toBytes()));
  record=new Pair<BytesWritable,List<BytesWritable>>(keyWritable,list);
  inputRecords.add(record);
  String[] combination4={"?","?","?"};
  combinationKey=new DimensionKey(combination4);
  keyWritable.set(combinationKey.toMD5(),0,combinationKey.toMD5().length);
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey1,rawSeries1);
  list=new ArrayList<BytesWritable>();
  list.add(new BytesWritable(wrapper.toBytes()));
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey2,rawSeries2);
  list.add(new BytesWritable(wrapper.toBytes()));
  record=new Pair<BytesWritable,List<BytesWritable>>(keyWritable,list);
  inputRecords.add(record);
  String[] combination5={"A1","B2","C1"};
  combinationKey=new DimensionKey(combination5);
  keyWritable.set(combinationKey.toMD5(),0,combinationKey.toMD5().length);
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey2,rawSeries2);
  list=new ArrayList<BytesWritable>();
  list.add(new BytesWritable(wrapper.toBytes()));
  record=new Pair<BytesWritable,List<BytesWritable>>(keyWritable,list);
  inputRecords.add(record);
  String[] combination6={"?","B2","C1"};
  combinationKey=new DimensionKey(combination6);
  keyWritable.set(combinationKey.toMD5(),0,combinationKey.toMD5().length);
  wrapper=new RollupPhaseTwoMapOutput(combinationKey,rawKey2,rawSeries2);
  list=new ArrayList<BytesWritable>();
  list.add(new BytesWritable(wrapper.toBytes()));
  record=new Pair<BytesWritable,List<BytesWritable>>(keyWritable,list);
  inputRecords.add(record);
  return inputRecords;
}
