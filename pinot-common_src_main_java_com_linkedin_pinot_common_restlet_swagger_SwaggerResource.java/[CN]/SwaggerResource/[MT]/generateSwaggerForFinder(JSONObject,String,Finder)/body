{
  Class<? extends ServerResource> targetClass=finder.getTargetClass();
  for (  Method method : targetClass.getDeclaredMethods()) {
    String httpVerb=null;
    Annotation annotationInstance=method.getAnnotation(HttpVerb.class);
    if (annotationInstance != null) {
      httpVerb=((HttpVerb)annotationInstance).value().toLowerCase();
    }
    HashSet<String> methodPaths=new HashSet<String>();
    annotationInstance=method.getAnnotation(Paths.class);
    if (annotationInstance != null) {
      methodPaths.addAll(Arrays.asList(((Paths)annotationInstance).value()));
    }
    if (httpVerb != null && methodPaths.contains(routePath) && !routePath.endsWith("/")) {
      JSONObject operation=new JSONObject();
      pathObject.put(httpVerb,operation);
      annotationInstance=method.getAnnotation(Summary.class);
      if (annotationInstance != null) {
        operation.put(Summary.class.getSimpleName().toLowerCase(),((Summary)annotationInstance).value());
      }
      annotationInstance=method.getAnnotation(Description.class);
      if (annotationInstance != null) {
        operation.put(Description.class.getSimpleName().toLowerCase(),((Description)annotationInstance).value());
      }
      annotationInstance=method.getAnnotation(Tags.class);
      if (annotationInstance != null) {
        operation.put(Tags.class.getSimpleName().toLowerCase(),((Tags)annotationInstance).value());
      }
      annotationInstance=method.getAnnotation(Responses.class);
      if (annotationInstance != null) {
        Responses responsesAnnotation=(Responses)annotationInstance;
        JSONObject responses=new JSONObject();
        for (        Response responseAnnotation : responsesAnnotation.value()) {
          JSONObject response=new JSONObject();
          response.put("description",responseAnnotation.description());
          responses.put(responseAnnotation.statusCode(),response);
        }
        operation.put(Responses.class.getSimpleName().toLowerCase(),responses);
      }
      operation.put("operationId",method.getName());
      ArrayList<JSONObject> parameters=new ArrayList<JSONObject>();
      for (      Annotation[] annotations : method.getParameterAnnotations()) {
        if (annotations.length != 0) {
          JSONObject parameter=new JSONObject();
          for (          Annotation annotation : annotations) {
            if (annotation instanceof Parameter) {
              Parameter parameterAnnotation=(Parameter)annotation;
              parameter.put("name",parameterAnnotation.name());
              parameter.put("in",parameterAnnotation.in());
              if (parameterAnnotation.description() != null) {
                parameter.put("description",parameterAnnotation.description());
              }
              parameter.put("type","string");
              parameter.put("required",parameterAnnotation.required());
            }
          }
          if (parameter.keys().hasNext()) {
            parameters.add(parameter);
          }
        }
      }
      operation.put("parameters",parameters.toArray(new JSONObject[parameters.size()]));
    }
  }
}
