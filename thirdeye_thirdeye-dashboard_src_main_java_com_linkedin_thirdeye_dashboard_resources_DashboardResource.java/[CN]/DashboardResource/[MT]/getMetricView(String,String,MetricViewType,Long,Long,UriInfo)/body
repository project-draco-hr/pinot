{
  MultivaluedMap<String,String> dimensionValues=uriInfo.getQueryParameters();
  CollectionSchema schema=dataCache.getCollectionSchema(serverUri,collection);
switch (metricViewType) {
case INTRA_DAY:
    long intraPeriod=getIntraPeriod(metricFunction);
  Map<String,Map<String,List<String>>> dimensionGroups=null;
DimensionGroupSpec dimensionGroupSpec=configCache.getDimensionGroupSpec(collection);
if (dimensionGroupSpec != null) {
dimensionGroups=dimensionGroupSpec.getReverseMapping();
}
String sql=SqlUtils.getSql(metricFunction,collection,new DateTime(baselineMillis - intraPeriod),new DateTime(currentMillis),dimensionValues,dimensionGroups);
LOGGER.info("Generated SQL for intraday metric {}: {}",uriInfo.getRequestUri(),sql);
QueryResult result=queryCache.getQueryResult(serverUri,sql);
return new MetricViewTabular(schema,objectMapper,result,currentMillis,currentMillis - baselineMillis,intraPeriod);
case TIME_SERIES_FULL:
case TIME_SERIES_OVERLAY:
case FUNNEL:
return new MetricViewTimeSeries(schema,ViewUtils.flattenDisjunctions(dimensionValues));
default :
throw new NotFoundException("No metric view implementation for " + metricViewType);
}
}
