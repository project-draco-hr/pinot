{
  Map<String,String> dimensionValues=UriUtils.extractDimensionValues(uriInfo.getQueryParameters());
  for (  Map.Entry<String,String> entry : dimensionValues.entrySet()) {
    if ("!".equals(entry.getValue())) {
      throw new WebApplicationException(new IllegalArgumentException("No group by dimensions allowed"),Response.Status.BAD_REQUEST);
    }
  }
  List<SegmentDescriptor> segments=dataCache.getSegmentDescriptors(serverUri,collection);
  if (segments.isEmpty()) {
    throw new NotFoundException("No data loaded in server for " + collection);
  }
  DateTime earliestDataTime=null;
  DateTime latestDataTime=null;
  for (  SegmentDescriptor segment : segments) {
    if (segment.getStartDataTime() != null && (earliestDataTime == null || segment.getStartDataTime().compareTo(earliestDataTime) < 0)) {
      earliestDataTime=segment.getStartDataTime();
    }
    if (segment.getEndDataTime() != null && (latestDataTime == null || segment.getEndDataTime().compareTo(latestDataTime) > 0)) {
      latestDataTime=segment.getEndDataTime();
    }
  }
  if (earliestDataTime == null || latestDataTime == null) {
    throw new NotFoundException("No data loaded in server for " + collection);
  }
  List<String> customDashboardNames=null;
  if (customDashboardResource != null) {
    customDashboardNames=customDashboardResource.getCustomDashboardNames(collection);
  }
  try {
    View metricView=getMetricView(collection,metricFunction,metricViewType,baselineMillis,currentMillis,uriInfo);
    View dimensionView=getDimensionView(collection,metricFunction,dimensionViewType,baselineMillis,currentMillis,uriInfo);
    return new DashboardView(collection,dataCache.getCollectionSchema(serverUri,collection),new DateTime(baselineMillis),new DateTime(currentMillis),new MetricView(metricView,metricViewType),new DimensionView(dimensionView,dimensionViewType),earliestDataTime,latestDataTime,customDashboardNames);
  }
 catch (  Exception e) {
    if (e instanceof WebApplicationException) {
      throw e;
    }
    LOGGER.error("Error processing request {}",uriInfo.getRequestUri(),e);
    return new ExceptionView(e);
  }
}
