{
  startCluster();
  addOfflineTables();
  BaseClusterIntegrationTest.ensureDirectoryExistsAndIsEmpty(_tmpDir);
  List<File> avroFiles=BaseClusterIntegrationTest.unpackAvroData(_tmpDir,SEGMENT_COUNT);
  _queryFile=new File(TestUtils.getFileFromResourceUrl(BaseClusterIntegrationTest.class.getClassLoader().getResource("OnTimeStarTreeQueries.txt")));
  generateAndUploadSegments(avroFiles,DEFAULT_TABLE_NAME,false);
  generateAndUploadSegments(avroFiles,STAR_TREE_TABLE_NAME,true);
  Thread.sleep(15000);
  if (!waitForExternalViewUpdate()) {
    Assert.fail("Cluster did not reach stable state");
  }
  waitForTotalDocsToMatch(DEFAULT_TABLE_NAME,TOTAL_EXPECTED_DOCS,System.currentTimeMillis() + 1500000L);
  waitForTotalDocsToMatch(STAR_TREE_TABLE_NAME,TOTAL_EXPECTED_DOCS,System.currentTimeMillis() + 1500000L);
  SegmentInfoProvider dictionaryReader=new SegmentInfoProvider(_tarredSegmentsDir.getAbsolutePath());
  List<String> metricColumns=dictionaryReader.getMetricColumns();
  List<String> singleValueDimensionColumns=dictionaryReader.getSingleValueDimensionColumns();
  Map<String,List<Object>> singleValueDimensionValuesMap=dictionaryReader.getSingleValueDimensionValuesMap();
  _queryGenerator=new StarTreeQueryGenerator(STAR_TREE_TABLE_NAME,singleValueDimensionColumns,metricColumns,singleValueDimensionValuesMap);
}
