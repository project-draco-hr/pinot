{
  filePath=RealtimeFileBasedReaderTest.class.getClassLoader().getResource(AVRO_DATA).getFile();
  fieldTypeMap=new HashMap<String,FieldSpec.FieldType>();
  fieldTypeMap.put("column1",FieldType.DIMENSION);
  fieldTypeMap.put("column2",FieldType.DIMENSION);
  fieldTypeMap.put("column3",FieldType.DIMENSION);
  fieldTypeMap.put("column4",FieldType.DIMENSION);
  fieldTypeMap.put("column5",FieldType.DIMENSION);
  fieldTypeMap.put("column6",FieldType.DIMENSION);
  fieldTypeMap.put("column7",FieldType.DIMENSION);
  fieldTypeMap.put("column8",FieldType.DIMENSION);
  fieldTypeMap.put("column9",FieldType.DIMENSION);
  fieldTypeMap.put("column10",FieldType.DIMENSION);
  fieldTypeMap.put("weeksSinceEpochSunday",FieldType.DIMENSION);
  fieldTypeMap.put("daysSinceEpoch",FieldType.DIMENSION);
  fieldTypeMap.put("column13",FieldType.TIME);
  fieldTypeMap.put("count",FieldType.METRIC);
  schema=SegmentTestUtils.extractSchemaFromAvro(new File(filePath),fieldTypeMap,TimeUnit.MINUTES);
  StreamProviderConfig config=new FileBasedStreamProviderConfig(FileFormat.AVRO,filePath,schema);
  System.out.println(config);
  StreamProvider provider=new FileBasedStreamProviderImpl();
  final String tableName=RealtimeSegmentTest.class.getSimpleName() + ".noTable";
  provider.init(config,tableName);
  segment=new RealtimeSegmentImpl(schema,100000,tableName,"noSegment",AVRO_DATA);
  GenericRow row=provider.next();
  while (row != null) {
    segment.index(row);
    row=provider.next();
  }
  provider.shutdown();
}
