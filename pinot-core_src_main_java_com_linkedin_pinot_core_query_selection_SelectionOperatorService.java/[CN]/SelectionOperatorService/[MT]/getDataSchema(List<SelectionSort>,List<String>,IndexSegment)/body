{
  final List<String> columns=new ArrayList<String>();
  if (sortSequence != null && !sortSequence.isEmpty()) {
    for (    final SelectionSort selectionSort : sortSequence) {
      columns.add(selectionSort.getColumn());
    }
  }
  String[] selectionColumnArray=selectionColumns.toArray(new String[selectionColumns.size()]);
  Arrays.sort(selectionColumnArray);
  for (int i=0; i < selectionColumnArray.length; ++i) {
    String selectionColumn=selectionColumnArray[i];
    if (!columns.contains(selectionColumn)) {
      columns.add(selectionColumn);
    }
  }
  final DataType[] dataTypes=new DataType[columns.size()];
  for (int i=0; i < dataTypes.length; ++i) {
    DataSource ds=indexSegment.getDataSource(columns.get(i));
    Block block=ds.nextBlock(new BlockId(0));
    dataTypes[i]=block.getMetadata().getDataType();
    if (!block.getMetadata().isSingleValue()) {
      dataTypes[i]=DataType.valueOf(dataTypes[i] + "_ARRAY");
    }
  }
  return new DataSchema(columns.toArray(new String[0]),dataTypes);
}
