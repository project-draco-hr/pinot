{
switch (dataType) {
case INT_ARRAY:
    int[] intValues=(int[])serializable;
  if ((intValues == null) || (intValues.length == 0)) {
    return "";
  }
StringBuilder sbBuilder=new StringBuilder();
sbBuilder.append(intValues[0]);
for (int i=1; i < intValues.length; ++i) {
sbBuilder.append("\t\t");
sbBuilder.append(intValues[i]);
}
return sbBuilder.toString();
case LONG_ARRAY:
long[] longValues=(long[])serializable;
if ((longValues == null) || (longValues.length == 0)) {
return "";
}
sbBuilder=new StringBuilder();
sbBuilder.append(longValues[0]);
for (int i=1; i < longValues.length; ++i) {
sbBuilder.append("\t\t");
sbBuilder.append(longValues[i]);
}
return sbBuilder.toString();
case DOUBLE_ARRAY:
double[] doubleValues=(double[])serializable;
if ((doubleValues == null) || (doubleValues.length == 0)) {
return "";
}
sbBuilder=new StringBuilder();
sbBuilder.append(doubleValues[0]);
for (int i=1; i < doubleValues.length; ++i) {
sbBuilder.append("\t\t");
sbBuilder.append(doubleValues[i]);
}
return sbBuilder.toString();
case FLOAT_ARRAY:
float[] floatValues=(float[])serializable;
if ((floatValues == null) || (floatValues.length == 0)) {
return "";
}
sbBuilder=new StringBuilder();
sbBuilder.append(floatValues[0]);
for (int i=1; i < floatValues.length; ++i) {
sbBuilder.append("\t\t");
sbBuilder.append(floatValues[i]);
}
return sbBuilder.toString();
case STRING:
String[] stringValues=(String[])serializable;
if ((stringValues == null) || (stringValues.length == 0)) {
return "";
}
sbBuilder=new StringBuilder();
sbBuilder.append(stringValues[0]);
for (int i=1; i < stringValues.length; ++i) {
sbBuilder.append("\t\t");
sbBuilder.append(stringValues[i]);
}
return sbBuilder.toString();
default :
break;
}
return "";
}
