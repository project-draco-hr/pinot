{
  manager=new StarTreeManagerImpl();
  manager.restore(rootDir,collection);
  starTrees=manager.getStarTrees(collection);
  Assert.assertEquals(starTrees.size(),0);
  File dataDir1=new File(collectionDir,"data_1");
  StarTreePersistanceUtil.saveTree(starTree,dataDir1.getPath());
  FileUtils.moveFile(new File(dataDir1,collection + "-tree.bin"),new File(dataDir1,StarTreeConstants.TREE_FILE_NAME));
  properties.store(new FileOutputStream(new File(dataDir1,StarTreeConstants.METADATA_FILE_NAME)),"properties file");
  pollForStarTreesAddition(dataDir1);
  Assert.assertEquals("starTrees not updated",starTrees.size(),1);
  Assert.assertTrue(starTrees.containsKey(dataDir1));
  FileUtils.deleteDirectory(dataDir1);
  File dataDir2=new File(collectionDir,"data_2");
  StarTreePersistanceUtil.saveTree(starTree,dataDir2.getPath());
  FileUtils.moveFile(new File(dataDir2,collection + "-tree.bin"),new File(dataDir2,StarTreeConstants.TREE_FILE_NAME));
  properties.store(new FileOutputStream(new File(dataDir2,StarTreeConstants.METADATA_FILE_NAME)),"properties file");
  pollForStarTreesAddition(dataDir2);
  Assert.assertEquals(starTrees.size(),1);
  Assert.assertFalse("starTrees did not delete old tree",starTrees.containsKey(dataDir1));
  Assert.assertTrue(starTrees.containsKey(dataDir2));
  FileUtils.deleteDirectory(dataDir1);
}
