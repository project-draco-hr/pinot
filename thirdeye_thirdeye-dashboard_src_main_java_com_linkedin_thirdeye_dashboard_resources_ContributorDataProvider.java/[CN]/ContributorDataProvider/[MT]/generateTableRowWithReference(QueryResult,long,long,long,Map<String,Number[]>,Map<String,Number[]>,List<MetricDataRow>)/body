{
  int metricCount=totalResult.getMetrics().size();
  MetricTable orig=generateTableRow(metricCount,baseline,current,intraPeriod,baselineValues,currentValues);
  Iterator<MetricDataRow> iter=orig.getRows().iterator();
  MetricDataRow origRow=(iter.hasNext() ? iter.next() : null);
  List<MetricDataRow> updatedRows=new LinkedList<>();
  for (  MetricDataRow referenceRow : referenceRows) {
    DateTime refTime=referenceRow.getCurrentTime();
    if (origRow == null || origRow.getCurrentTime().isBefore(refTime)) {
      while (origRow == null || origRow.getCurrentTime().isBefore(refTime)) {
        if (iter.hasNext()) {
          origRow=iter.next();
        }
 else {
          break;
        }
      }
    }
    MetricDataRow updatedRow=null;
    if (origRow == null) {
      updatedRow=new MetricDataRow(referenceRow.getBaselineTime(),null,referenceRow.getCurrentTime(),null);
    }
 else     if (origRow.getCurrentTime().equals(refTime)) {
      updatedRow=origRow;
    }
 else {
      updatedRow=new MetricDataRow(referenceRow.getBaselineTime(),null,referenceRow.getCurrentTime(),null);
    }
    updatedRows.add(updatedRow);
  }
  return new MetricTable(updatedRows,metricCount);
}
