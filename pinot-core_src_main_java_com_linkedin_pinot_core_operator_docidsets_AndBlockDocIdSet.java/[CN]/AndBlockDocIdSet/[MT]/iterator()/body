{
  long start, end;
  start=System.currentTimeMillis();
  List<BlockDocIdIterator> rawIterators=new ArrayList<>();
  boolean useBitmapBasedIntersection=false;
  for (  BlockDocIdSet docIdSet : blockDocIdSets) {
    if (docIdSet instanceof BitmapDocIdSet) {
      useBitmapBasedIntersection=true;
    }
  }
  if (useBitmapBasedIntersection) {
    List<ImmutableRoaringBitmap> allBitmaps=new ArrayList<ImmutableRoaringBitmap>();
    for (    BlockDocIdSet docIdSet : blockDocIdSets) {
      if (docIdSet instanceof SortedDocIdSet) {
        MutableRoaringBitmap bitmap=new MutableRoaringBitmap();
        SortedDocIdSet sortedDocIdSet=(SortedDocIdSet)docIdSet;
        List<Pair<Integer,Integer>> pairs=sortedDocIdSet.getRaw();
        for (        Pair<Integer,Integer> pair : pairs) {
          bitmap.add(pair.getLeft(),pair.getRight() + 1);
        }
        allBitmaps.add(bitmap);
      }
 else       if (docIdSet instanceof BitmapDocIdSet) {
        BitmapDocIdSet bitmapDocIdSet=(BitmapDocIdSet)docIdSet;
        ImmutableRoaringBitmap childBitmap=bitmapDocIdSet.getRaw();
        allBitmaps.add(childBitmap);
      }
 else {
        BlockDocIdIterator iterator=docIdSet.iterator();
        rawIterators.add(iterator);
      }
    }
    if (allBitmaps.size() > 1) {
      MutableRoaringBitmap answer=(MutableRoaringBitmap)allBitmaps.get(0).clone();
      for (int i=1; i < allBitmaps.size(); i++) {
        answer.and(allBitmaps.get(i));
      }
      intIterator=answer.getIntIterator();
    }
 else {
      intIterator=allBitmaps.get(0).getIntIterator();
    }
    BitmapDocIdIterator singleBitmapBlockIdIterator=new BitmapDocIdIterator(intIterator);
    singleBitmapBlockIdIterator.setStartDocId(minDocId);
    singleBitmapBlockIdIterator.setEndDocId(maxDocId);
    end=System.currentTimeMillis();
    rawIterators.add(0,singleBitmapBlockIdIterator);
    docIdIterators=new BlockDocIdIterator[rawIterators.size()];
    rawIterators.toArray(docIdIterators);
  }
 else {
    docIdIterators=new BlockDocIdIterator[blockDocIdSets.size()];
    for (int srcId=0; srcId < blockDocIdSets.size(); srcId++) {
      docIdIterators[srcId]=blockDocIdSets.get(srcId).iterator();
    }
  }
  return new AndDocIdIterator(docIdIterators);
}
