{
  genSpec=spec;
  outDir=new File(genSpec.getOutputDir());
  if (outDir.exists() && !genSpec.isOverrideOutDir()) {
    logger.error("output directory already exists, and override is set to false");
    throw new RuntimeException("output directory exists");
  }
  if (outDir.exists()) {
    FileUtils.deleteDirectory(outDir);
  }
  outDir.mkdir();
  for (  final String column : genSpec.getColumns()) {
    DataType dataType=genSpec.getDataTypesMap().get(column);
    if (genSpec.getCardinalityMap().containsKey(column)) {
      generators.put(column,GeneratorFactory.getGeneratorFor(dataType,genSpec.getCardinalityMap().get(column)));
    }
 else     if (genSpec.getRangeMap().containsKey(column)) {
      IntRange range=genSpec.getRangeMap().get(column);
      generators.put(column,GeneratorFactory.getGeneratorFor(dataType,range.getMinimumInteger(),range.getMaximumInteger()));
    }
 else {
      logger.error("cardinality for this column does not exist : " + column);
      throw new RuntimeException("cardinality for this column does not exist");
    }
    generators.get(column).init();
  }
}
