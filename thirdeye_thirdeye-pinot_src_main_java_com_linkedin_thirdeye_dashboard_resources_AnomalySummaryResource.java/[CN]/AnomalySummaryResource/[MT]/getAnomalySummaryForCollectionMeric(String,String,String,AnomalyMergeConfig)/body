{
  if (StringUtils.isEmpty(collection)) {
    throw new IllegalArgumentException("Collection can't be empty");
  }
  if (mergeConfig == null) {
    mergeConfig=new AnomalyMergeConfig();
  }
  DateTime startTimeUtc=new DateTime(mergeConfig.getStartTime());
  DateTime endTimeUtc=new DateTime(mergeConfig.getEndTime());
  List<AnomalyResult> anomalies;
  if (!StringUtils.isEmpty(metric) && !StringUtils.isEmpty(dimensions)) {
    anomalies=resultDAO.findAllByCollectionTimeMetricAndDimensions(collection,metric,startTimeUtc,endTimeUtc,new String[]{dimensions});
  }
 else   if (!StringUtils.isEmpty(metric)) {
    anomalies=resultDAO.findAllByCollectionTimeAndMetric(collection,metric,startTimeUtc,endTimeUtc);
  }
 else {
    anomalies=resultDAO.findAllByCollectionAndTime(collection,startTimeUtc,endTimeUtc);
  }
  return AnomalyMergeGenerator.mergeAnomalies(anomalies,mergeConfig.getMergeDuration(),mergeConfig.getSequentialAllowedGap());
}
