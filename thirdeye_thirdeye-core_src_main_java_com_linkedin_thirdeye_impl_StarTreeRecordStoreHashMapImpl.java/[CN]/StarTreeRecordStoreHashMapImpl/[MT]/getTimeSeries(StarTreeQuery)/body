{
  lock.readLock().lock();
  try {
    MetricTimeSeries timeSeries=new MetricTimeSeries(metricSchema);
    for (    Map.Entry<DimensionKey,MetricTimeSeries> entry : store.entrySet()) {
      boolean matches=true;
      for (int i=0; i < config.getDimensions().size(); i++) {
        String queryValue=query.getDimensionKey().getDimensionValues()[i];
        String recordValue=entry.getKey().getDimensionValues()[i];
        if (!StarTreeConstants.STAR.equals(queryValue) && !queryValue.equals(recordValue)) {
          matches=false;
          break;
        }
      }
      if (matches) {
        timeSeries.aggregate(entry.getValue(),query.getTimeRange());
      }
    }
    return timeSeries;
  }
  finally {
    lock.readLock().unlock();
  }
}
