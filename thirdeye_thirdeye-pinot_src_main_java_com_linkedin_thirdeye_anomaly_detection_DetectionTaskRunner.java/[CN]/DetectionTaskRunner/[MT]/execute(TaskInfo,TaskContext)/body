{
  DetectionTaskInfo detectionTaskInfo=(DetectionTaskInfo)taskInfo;
  List<TaskResult> taskResult=new ArrayList<>();
  LOG.info("Begin executing task {}",taskInfo);
  resultDAO=taskContext.getResultDAO();
  AnomalyFunctionFactory anomalyFunctionFactory=taskContext.getAnomalyFunctionFactory();
  AnomalyFunctionDTO anomalyFunctionSpec=detectionTaskInfo.getAnomalyFunctionSpec();
  anomalyFunction=anomalyFunctionFactory.fromSpec(anomalyFunctionSpec);
  windowStart=detectionTaskInfo.getWindowStartTime();
  windowEnd=detectionTaskInfo.getWindowEndTime();
  LOG.info("Running anomaly detection job with metricFunction: [{}], metric [{}], collection: [{}]",anomalyFunctionSpec.getFunctionName(),anomalyFunctionSpec.getMetric(),anomalyFunctionSpec.getCollection());
  CollectionSchema collectionSchema=null;
  try {
    collectionSchema=CACHE_REGISTRY_INSTANCE.getCollectionSchemaCache().get(anomalyFunctionSpec.getCollection());
    collectionDimensions=collectionSchema.getDimensionNames();
  }
 catch (  Exception e) {
    LOG.error("Exception when reading collection schema cache",e);
  }
  knownAnomalies=getExistingAnomalies();
  TimeSeriesResponse finalResponse=TimeSeriesUtil.getTimeSeriesResponse(anomalyFunctionSpec,anomalyFunction,detectionTaskInfo.getGroupByDimension(),windowStart.getMillis(),windowEnd.getMillis());
  exploreDimensionsAndAnalyze(finalResponse);
  return taskResult;
}
