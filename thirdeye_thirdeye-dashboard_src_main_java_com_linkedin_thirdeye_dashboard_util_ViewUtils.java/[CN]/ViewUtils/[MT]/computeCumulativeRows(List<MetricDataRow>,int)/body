{
  if (rows.isEmpty()) {
    return Collections.emptyList();
  }
  List<MetricDataRow> cumulativeRows=new LinkedList<>();
  Number[] cumulativeBaselineValues=new Number[metricCount];
  Arrays.fill(cumulativeBaselineValues,0.0);
  Number[] cumulativeCurrentValues=new Number[metricCount];
  Arrays.fill(cumulativeCurrentValues,0.0);
  for (  MetricDataRow row : rows) {
    Number[] baselineValues=row.getBaseline();
    for (int i=0; i < baselineValues.length; i++) {
      cumulativeBaselineValues[i]=cumulativeBaselineValues[i].doubleValue() + (baselineValues[i] == null ? 0.0 : baselineValues[i].doubleValue());
    }
    Number[] currentValues=row.getCurrent();
    for (int i=0; i < currentValues.length; i++) {
      cumulativeCurrentValues[i]=cumulativeCurrentValues[i].doubleValue() + (currentValues[i] == null ? 0.0 : currentValues[i].doubleValue());
    }
    Number[] cumulativeBaselineValuesCopy=Arrays.copyOf(cumulativeBaselineValues,cumulativeBaselineValues.length);
    Number[] cumulativeCurrentValuesCopy=Arrays.copyOf(cumulativeCurrentValues,cumulativeCurrentValues.length);
    MetricDataRow cumulativeRow=new MetricDataRow(row.getBaselineTime(),cumulativeBaselineValuesCopy,row.getCurrentTime(),cumulativeCurrentValuesCopy);
    cumulativeRows.add(cumulativeRow);
  }
  return cumulativeRows;
}
