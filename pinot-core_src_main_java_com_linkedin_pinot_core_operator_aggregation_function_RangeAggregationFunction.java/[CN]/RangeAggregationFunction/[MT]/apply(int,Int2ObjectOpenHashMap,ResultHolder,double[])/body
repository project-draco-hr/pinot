{
  Preconditions.checkState(length <= valueArray.length);
  for (int i=0; i < length; ++i) {
    long[] groupKeys=(long[])valueArrayIndexToGroupKeys.get(i);
    double value=valueArray[i];
    for (    long groupKey : groupKeys) {
      Pair<Double,Double> rangeValue=(Pair<Double,Double>)resultHolder.getResult(groupKey);
      if (rangeValue == null) {
        rangeValue=new com.linkedin.pinot.core.query.aggregation.function.MinMaxRangeAggregationFunction.MinMaxRangePair(value,value);
      }
 else {
        if (value < rangeValue.getFirst()) {
          rangeValue.setFirst(value);
        }
        if (value > rangeValue.getSecond()) {
          rangeValue.setSecond(value);
        }
      }
      resultHolder.putValueForKey(groupKey,rangeValue);
    }
  }
}
