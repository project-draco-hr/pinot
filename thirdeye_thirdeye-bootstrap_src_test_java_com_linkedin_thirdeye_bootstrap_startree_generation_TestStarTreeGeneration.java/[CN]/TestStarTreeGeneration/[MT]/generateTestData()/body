{
  List<Pair<BytesWritable,BytesWritable>> inputRecords=new ArrayList<Pair<BytesWritable,BytesWritable>>();
  String[] combination1={"A1","B1","C1"};
  DimensionKey dimKey=new DimensionKey(combination1);
  MetricTimeSeries timeSeries=TestHelper.generateRandomMetricTimeSeries(starTreeGenerationConfig);
  Pair<BytesWritable,BytesWritable> record=new Pair<BytesWritable,BytesWritable>(new BytesWritable(dimKey.toBytes()),new BytesWritable(timeSeries.toBytes()));
  inputRecords.add(record);
  String[] combination2={"A1","B1","C2"};
  dimKey=new DimensionKey(combination2);
  timeSeries=TestHelper.generateRandomMetricTimeSeries(starTreeGenerationConfig);
  record=new Pair<BytesWritable,BytesWritable>(new BytesWritable(dimKey.toBytes()),new BytesWritable(timeSeries.toBytes()));
  inputRecords.add(record);
  String[] combination3={"A1","B1","C3"};
  dimKey=new DimensionKey(combination3);
  timeSeries=TestHelper.generateRandomMetricTimeSeries(starTreeGenerationConfig);
  record=new Pair<BytesWritable,BytesWritable>(new BytesWritable(dimKey.toBytes()),new BytesWritable(timeSeries.toBytes()));
  inputRecords.add(record);
  String[] combination4={"A2","B1","C3"};
  dimKey=new DimensionKey(combination4);
  timeSeries=TestHelper.generateRandomMetricTimeSeries(starTreeGenerationConfig);
  record=new Pair<BytesWritable,BytesWritable>(new BytesWritable(dimKey.toBytes()),new BytesWritable(timeSeries.toBytes()));
  inputRecords.add(record);
  return inputRecords;
}
