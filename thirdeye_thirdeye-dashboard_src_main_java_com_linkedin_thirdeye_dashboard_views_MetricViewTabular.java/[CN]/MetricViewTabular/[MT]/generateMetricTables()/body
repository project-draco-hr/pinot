{
  List<MetricTable> tables=new ArrayList<>();
  for (  Map.Entry<String,Map<String,Number[]>> entry : result.getData().entrySet()) {
    List<MetricTableRow> rows=new LinkedList<>();
    List<Long> times=getReverseSortedTimes(entry.getValue().keySet());
    long windowFilled=0;
    int idx=0;
    while (windowFilled < intraDayPeriod && idx < times.size() - 1) {
      long current=times.get(idx);
      long next=times.get(idx + 1);
      long baseline=times.get(times.indexOf(current - baselineOffsetMillis) - 1);
      windowFilled+=(current - next);
      idx++;
      Number[] currentData=entry.getValue().get(String.valueOf(current));
      Number[] baselineData=entry.getValue().get(String.valueOf(baseline));
      rows.add(0,new MetricTableRow(new DateTime(baseline).toDateTime(DateTimeZone.UTC),baselineData,new DateTime(current).toDateTime(DateTimeZone.UTC),currentData));
    }
    tables.add(new MetricTable(getDimensionValues(entry.getKey()),rows));
  }
  return tables;
}
