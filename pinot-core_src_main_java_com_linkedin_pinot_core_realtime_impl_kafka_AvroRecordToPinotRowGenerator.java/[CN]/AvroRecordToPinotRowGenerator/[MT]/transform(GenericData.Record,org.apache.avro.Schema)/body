{
  Map<String,Object> rowEntries=new HashMap<String,Object>();
  for (  String column : indexingSchema.getColumnNames()) {
    Object entry=record.get(column);
    FieldSpec fieldSpec=indexingSchema.getFieldSpecFor(column);
    if (entry != null) {
      if (entry instanceof Array) {
        entry=AvroRecordReader.transformAvroArrayToObjectArray((Array)entry,fieldSpec);
        if (fieldSpec.getDataType() == DataType.STRING || fieldSpec.getDataType() == DataType.STRING_ARRAY) {
          for (int i=0; i < ((Object[])entry).length; ++i) {
            if (((Object[])entry)[i] != null) {
              ((Object[])entry)[i]=((Object[])entry)[i].toString();
            }
          }
        }
      }
 else {
        if (entry instanceof Utf8) {
          entry=((Utf8)entry).toString();
        }
        if (fieldSpec.getDataType() == DataType.STRING) {
          entry=entry.toString();
        }
      }
    }
 else {
      if (fieldSpec.isSingleValueField()) {
        entry=AvroRecordReader.getDefaultNullValue(fieldSpec);
      }
 else {
        entry=AvroRecordReader.transformAvroArrayToObjectArray((Array)entry,fieldSpec);
        if (fieldSpec.getDataType() == DataType.STRING || fieldSpec.getDataType() == DataType.STRING_ARRAY) {
          for (int i=0; i < ((Object[])entry).length; ++i) {
            if (((Object[])entry)[i] != null) {
              ((Object[])entry)[i]=((Object[])entry)[i].toString();
            }
          }
        }
      }
    }
    rowEntries.put(column,entry);
  }
  GenericRow row=new GenericRow();
  row.init(rowEntries);
  return row;
}
