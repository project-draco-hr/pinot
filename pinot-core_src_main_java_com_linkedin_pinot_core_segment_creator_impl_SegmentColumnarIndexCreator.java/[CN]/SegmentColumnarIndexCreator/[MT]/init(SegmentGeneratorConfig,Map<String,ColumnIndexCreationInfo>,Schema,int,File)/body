{
  docIdCounter=0;
  config=segmentCreationSpec;
  this.indexCreationInfoMap=indexCreationInfoMap;
  dictionaryCreatorMap=new HashMap<String,SegmentDictionaryCreator>();
  forwardIndexCreatorMap=new HashMap<String,ForwardIndexCreator>();
  this.indexCreationInfoMap=indexCreationInfoMap;
  invertedIndexCreatorMap=new HashMap<String,InvertedIndexCreator>();
  file=outDir;
  if (file.exists()) {
    throw new RuntimeException("Segment output directory " + file.getAbsolutePath() + " already exists.");
  }
  file.mkdir();
  this.schema=schema;
  this.totalDocs=totalDocs;
  for (  final FieldSpec spec : schema.getAllFieldSpecs()) {
    final ColumnIndexCreationInfo info=indexCreationInfoMap.get(spec.getName());
    if (info.isCreateDictionary()) {
      dictionaryCreatorMap.put(spec.getName(),new SegmentDictionaryCreator(info.hasNulls(),info.getSortedUniqueElementsArray(),spec,file));
    }
 else {
      throw new RuntimeException("Creation of indices without dictionaries is not implemented!");
    }
  }
  for (  final String column : dictionaryCreatorMap.keySet()) {
    dictionaryCreatorMap.get(column).build();
    ColumnIndexCreationInfo indexCreationInfo=indexCreationInfoMap.get(column);
    if (schema.getFieldSpecFor(column).isSingleValueField()) {
      if (indexCreationInfo.isSorted()) {
        forwardIndexCreatorMap.put(column,new SingleValueSortedForwardIndexCreator(file,indexCreationInfo.getSortedUniqueElementsArray().length,schema.getFieldSpecFor(column)));
      }
 else {
        forwardIndexCreatorMap.put(column,new SingleValueUnsortedForwardIndexCreator(schema.getFieldSpecFor(column),file,indexCreationInfo.getSortedUniqueElementsArray().length,totalDocs,indexCreationInfo.getTotalNumberOfEntries(),indexCreationInfo.hasNulls()));
      }
    }
 else {
      forwardIndexCreatorMap.put(column,new MultiValueUnsortedForwardIndexCreator(schema.getFieldSpecFor(column),file,indexCreationInfo.getSortedUniqueElementsArray().length,totalDocs,indexCreationInfo.getTotalNumberOfEntries(),indexCreationInfo.hasNulls()));
    }
    if (config.createInvertedIndexEnabled()) {
      invertedIndexCreatorMap.put(column,new BitmapInvertedIndexCreator(file,indexCreationInfo.getSortedUniqueElementsArray().length,schema.getFieldSpecFor(column)));
    }
  }
}
