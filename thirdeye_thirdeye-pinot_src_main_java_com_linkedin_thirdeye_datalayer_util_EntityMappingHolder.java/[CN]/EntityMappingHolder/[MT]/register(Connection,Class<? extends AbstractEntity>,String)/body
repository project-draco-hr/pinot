{
  DatabaseMetaData databaseMetaData=connection.getMetaData();
  String catalog=null;
  String schemaPattern=null;
  String tableNamePattern=tableName;
  String columnNamePattern=null;
  ResultSet rs=databaseMetaData.getColumns(catalog,schemaPattern,tableNamePattern,columnNamePattern);
  tableToEntityNameMap.put(tableName,entityClass.getSimpleName());
  columnMappingPerTable.put(tableName,HashBiMap.create());
  LinkedHashMap<String,ColumnInfo> columnInfoMap=new LinkedHashMap<>();
  while (rs.next()) {
    String columnName=rs.getString(4);
    ColumnInfo columnInfo=new ColumnInfo();
    columnInfo.columnNameInDB=columnName.toLowerCase();
    columnInfo.sqlType=rs.getInt(5);
    columnInfoMap.put(columnName.toLowerCase(),columnInfo);
  }
  List<Field> fields=new ArrayList<>();
  getAllFields(fields,entityClass);
  for (  Field field : fields) {
    field.setAccessible(true);
    String entityColumn=field.getName();
    for (    String dbColumn : columnInfoMap.keySet()) {
      boolean success=false;
      if (dbColumn.toLowerCase().equals(entityColumn.toLowerCase())) {
        success=true;
      }
      String dbColumnNormalized=dbColumn.replaceAll("_","").toLowerCase();
      String entityColumnNormalized=entityColumn.replaceAll("_","").toLowerCase();
      if (dbColumnNormalized.equals(entityColumnNormalized)) {
        success=true;
      }
      if (success) {
        columnInfoMap.get(dbColumn).columnNameInEntity=entityColumn;
        columnInfoMap.get(dbColumn).field=field;
        System.out.println("Mapped " + dbColumn + " to "+ entityColumn);
        columnMappingPerTable.get(tableName).put(dbColumn,entityColumn);
      }
    }
  }
  columnInfoPerTable.put(tableName,columnInfoMap);
}
