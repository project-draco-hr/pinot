{
{
    String key="localhost:8080";
    String value="dummy";
    MyPooledResourceManager rm=new MyPooledResourceManager(true,null);
    AsyncPoolResourceManagerAdapter<String,String> adapter=new AsyncPoolResourceManagerAdapter<String,String>(key,rm,MoreExecutors.sameThreadExecutor(),null);
    boolean ret=adapter.validateGet(value);
    Assert.assertTrue(ret,"Validate Return");
    Assert.assertEquals(rm.getKeyForValidate(),key,"Resource Manager validate Key");
    Assert.assertEquals(rm.getResourceForValidate(),value,"Resource Manager validate Resource");
    String value2="dummy2";
    ret=adapter.validatePut(value2);
    Assert.assertTrue(ret,"Validate Return");
    Assert.assertEquals(rm.getKeyForValidate(),key,"Resource Manager validate Key");
    Assert.assertEquals(rm.getResourceForValidate(),value2,"Resource Manager validate Resource");
  }
{
    String key="localhost:8080";
    String value="dummy";
    MyPooledResourceManager rm=new MyPooledResourceManager(false,null);
    AsyncPoolResourceManagerAdapter<String,String> adapter=new AsyncPoolResourceManagerAdapter<String,String>(key,rm,MoreExecutors.sameThreadExecutor(),null);
    boolean ret=adapter.validateGet(value);
    Assert.assertFalse(ret,"Validate Return");
    Assert.assertEquals(rm.getKeyForValidate(),key,"Resource Manager validate Key");
    Assert.assertEquals(rm.getResourceForValidate(),value,"Resource Manager validate Resource");
    String value2="dummy2";
    ret=adapter.validatePut(value2);
    Assert.assertFalse(ret,"Validate Return");
    Assert.assertEquals(rm.getKeyForValidate(),key,"Resource Manager validate Key");
    Assert.assertEquals(rm.getResourceForValidate(),value2,"Resource Manager validate Resource");
  }
}
