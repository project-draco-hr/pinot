{
  Schema schema=new Schema.SchemaBuilder().addSingleValueDimension("svDimension",FieldSpec.DataType.INT).addSingleValueDimension("svDimensionWithDefault",FieldSpec.DataType.INT,10).addMultiValueDimension("mvDimension",FieldSpec.DataType.STRING).addMultiValueDimension("mvDimensionWithDefault",FieldSpec.DataType.STRING,"default").addMetric("metric",FieldSpec.DataType.INT).addMetric("metricWithDefault",FieldSpec.DataType.INT,5).addMetric("derivedMetric",FieldSpec.DataType.STRING,10,MetricFieldSpec.DerivedMetricType.HLL).addMetric("derivedMetricWithDefault",FieldSpec.DataType.STRING,10,MetricFieldSpec.DerivedMetricType.HLL,"default").addTime("time",TimeUnit.DAYS,FieldSpec.DataType.LONG).build();
  FieldSpec fieldSpec;
  fieldSpec=schema.getDimensionSpec("svDimension");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.INT);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),Integer.MIN_VALUE);
  fieldSpec=schema.getDimensionSpec("svDimensionWithDefault");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.INT);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),10);
  fieldSpec=schema.getDimensionSpec("mvDimension");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),false);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.STRING);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),"null");
  fieldSpec=schema.getDimensionSpec("mvDimensionWithDefault");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),false);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.STRING);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),"default");
  fieldSpec=schema.getMetricSpec("metric");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.INT);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),0);
  fieldSpec=schema.getMetricSpec("metricWithDefault");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.INT);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),5);
  fieldSpec=schema.getMetricSpec("derivedMetric");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.STRING);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),"null");
  fieldSpec=schema.getMetricSpec("derivedMetricWithDefault");
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.STRING);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),"default");
  fieldSpec=schema.getTimeFieldSpec();
  Assert.assertNotNull(fieldSpec);
  Assert.assertEquals(fieldSpec.isSingleValueField(),true);
  Assert.assertEquals(fieldSpec.getDataType(),FieldSpec.DataType.LONG);
  Assert.assertEquals(fieldSpec.getDefaultNullValue(),Long.MIN_VALUE);
}
