{
  String incomingName="incoming";
  FieldSpec.DataType incomingDataType=FieldSpec.DataType.LONG;
  TimeUnit incomingTimeUnit=TimeUnit.HOURS;
  int incomingTimeUnitSize=1;
  TimeGranularitySpec incomingTimeGranularitySpec=new TimeGranularitySpec(incomingDataType,incomingTimeUnitSize,incomingTimeUnit,incomingName);
  String outgoingName="outgoing";
  FieldSpec.DataType outgoingDataType=FieldSpec.DataType.INT;
  TimeUnit outgoingTimeUnit=TimeUnit.DAYS;
  int outgoingTimeUnitSize=1;
  TimeGranularitySpec outgoingTimeGranularitySpec=new TimeGranularitySpec(outgoingDataType,outgoingTimeUnitSize,outgoingTimeUnit,outgoingName);
  int defaultNullValue=17050;
  Schema schema1=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnit,incomingDataType).build();
  Schema schema2=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnit,incomingDataType,defaultNullValue).build();
  Schema schema3=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnit,incomingDataType,outgoingName,outgoingTimeUnit,outgoingDataType).build();
  Schema schema4=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnit,incomingDataType,outgoingName,outgoingTimeUnit,outgoingDataType,defaultNullValue).build();
  Schema schema5=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnitSize,incomingTimeUnit,incomingDataType).build();
  Schema schema6=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnitSize,incomingTimeUnit,incomingDataType,defaultNullValue).build();
  Schema schema7=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnitSize,incomingTimeUnit,incomingDataType,outgoingName,outgoingTimeUnitSize,outgoingTimeUnit,outgoingDataType).build();
  Schema schema8=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingName,incomingTimeUnitSize,incomingTimeUnit,incomingDataType,outgoingName,outgoingTimeUnitSize,outgoingTimeUnit,outgoingDataType,defaultNullValue).build();
  Schema schema9=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingTimeGranularitySpec).build();
  Schema schema10=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingTimeGranularitySpec,defaultNullValue).build();
  Schema schema11=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingTimeGranularitySpec,outgoingTimeGranularitySpec).build();
  Schema schema12=new Schema.SchemaBuilder().setSchemaName("testSchema").addTime(incomingTimeGranularitySpec,outgoingTimeGranularitySpec,defaultNullValue).build();
  Assert.assertNotNull(schema1.getTimeFieldSpec());
  Assert.assertNotNull(schema2.getTimeFieldSpec());
  Assert.assertNotNull(schema3.getTimeFieldSpec());
  Assert.assertNotNull(schema4.getTimeFieldSpec());
  Assert.assertNotNull(schema5.getTimeFieldSpec());
  Assert.assertNotNull(schema6.getTimeFieldSpec());
  Assert.assertNotNull(schema7.getTimeFieldSpec());
  Assert.assertNotNull(schema8.getTimeFieldSpec());
  Assert.assertNotNull(schema9.getTimeFieldSpec());
  Assert.assertNotNull(schema10.getTimeFieldSpec());
  Assert.assertNotNull(schema11.getTimeFieldSpec());
  Assert.assertNotNull(schema12.getTimeFieldSpec());
  Assert.assertEquals(schema1,schema5);
  Assert.assertEquals(schema1,schema9);
  Assert.assertEquals(schema2,schema6);
  Assert.assertEquals(schema2,schema10);
  Assert.assertEquals(schema3,schema7);
  Assert.assertEquals(schema3,schema11);
  Assert.assertEquals(schema4,schema8);
  Assert.assertEquals(schema4,schema12);
  Assert.assertFalse(schema1.equals(schema2));
  Assert.assertFalse(schema3.equals(schema4));
  Assert.assertFalse(schema5.equals(schema6));
  Assert.assertFalse(schema7.equals(schema8));
  Assert.assertFalse(schema9.equals(schema10));
  Assert.assertFalse(schema11.equals(schema12));
  schema1.getTimeFieldSpec().setDefaultNullValue(defaultNullValue);
  schema3.getTimeFieldSpec().setDefaultNullValue(defaultNullValue);
  schema5.getTimeFieldSpec().setDefaultNullValue(defaultNullValue);
  schema7.getTimeFieldSpec().setDefaultNullValue(defaultNullValue);
  schema9.getTimeFieldSpec().setDefaultNullValue(defaultNullValue);
  schema11.getTimeFieldSpec().setDefaultNullValue(defaultNullValue);
  Assert.assertEquals(schema1,schema2);
  Assert.assertEquals(schema3,schema4);
  Assert.assertEquals(schema5,schema6);
  Assert.assertEquals(schema7,schema8);
  Assert.assertEquals(schema9,schema10);
  Assert.assertEquals(schema11,schema12);
}
