{
  SegmentV1V2ToV3FormatConverter converter=new SegmentV1V2ToV3FormatConverter();
  converter.convert(segmentDirectory);
  File v3Location=SegmentDirectoryPaths.segmentDirectoryFor(segmentDirectory,SegmentVersion.v3);
  Assert.assertTrue(v3Location.exists());
  Assert.assertTrue(v3Location.isDirectory());
  Assert.assertTrue(new File(v3Location,V1Constants.STAR_TREE_INDEX_FILE).exists());
  SegmentMetadataImpl metadata=new SegmentMetadataImpl(v3Location);
  Assert.assertEquals(metadata.getVersion(),SegmentVersion.v3.toString());
  Assert.assertTrue(new File(v3Location,V1Constants.SEGMENT_CREATION_META).exists());
  new File(v3Location,V1Constants.STAR_TREE_INDEX_FILE).delete();
  new File(segmentDirectory,V1Constants.STAR_TREE_INDEX_FILE).delete();
  FileTime afterConversionTime=Files.getLastModifiedTime(v3Location.toPath());
  IndexSegment indexSegment=Loaders.IndexSegment.load(segmentDirectory,ReadMode.mmap,v3LoadingConfig);
  Assert.assertNotNull(indexSegment);
  Assert.assertEquals(indexSegment.getSegmentName(),metadata.getName());
  Assert.assertEquals(SegmentVersion.v3,SegmentVersion.valueOf(indexSegment.getSegmentMetadata().getVersion()));
  FileTime afterLoadTime=Files.getLastModifiedTime(v3Location.toPath());
  Assert.assertEquals(afterConversionTime,afterLoadTime);
}
