{
  DateTime startTime=ISODateTimeFormat.dateTimeParser().parseDateTime(startIsoTime);
  DateTime endTime=ISODateTimeFormat.dateTimeParser().parseDateTime(endIsoTime);
  String filters=null;
  List<AnomalyResult> results=new ArrayList<>();
  if (StringUtils.isNotBlank(filterJson)) {
    String filtersDecoded=URLDecoder.decode(filterJson,"UTF-8");
    if (!filtersDecoded.equals("{}")) {
      filters=ThirdEyeUtils.getSortedFiltersFromJson(filtersDecoded);
    }
  }
  if (StringUtils.isBlank(metrics)) {
    if (StringUtils.isBlank(filters)) {
      results=dao.findAllByCollectionAndTime(collection,startTime,endTime);
    }
 else {
      results=dao.findAllByCollectionTimeAndFilters(collection,startTime,endTime,filters);
    }
  }
 else {
    String[] metricList=metrics.split(",");
    for (    String metric : metricList) {
      List<AnomalyResult> metricResults;
      if (StringUtils.isBlank(filters)) {
        metricResults=dao.findAllByCollectionTimeAndMetric(collection,metric,startTime,endTime);
      }
 else {
        metricResults=dao.findAllByCollectionTimeMetricAndFilters(collection,metric,startTime,endTime,filters);
      }
      results.addAll(metricResults);
    }
  }
  return results;
}
