{
  StarTreeConfig config=new StarTreeConfig.Builder().setCollection("dummy").setMaxRecordStoreEntries(4).setMetricNames(Arrays.asList("M")).setDimensionNames(Arrays.asList("A","B","C")).build();
  StarTree starTree=new StarTreeImpl(config);
  starTree.open();
  for (int i=0; i < 100; i++) {
    StarTreeRecordImpl.Builder builder=new StarTreeRecordImpl.Builder();
    builder.setDimensionValue("A","A" + (i % 2));
    builder.setDimensionValue("B","B" + (i % 4));
    builder.setDimensionValue("C","C" + (i % 8));
    builder.setMetricValue("M",1);
    builder.setTime((long)i);
    starTree.add(builder.build());
  }
  StarTreeQuery baseQuery=new StarTreeQueryImpl.Builder().setDimensionValue("A",StarTreeConstants.ALL).setDimensionValue("B","*").setDimensionValue("C","*").build();
  List<StarTreeQuery> queries=StarTreeUtils.expandQueries(starTree,baseQuery);
  Assert.assertEquals(queries.size(),2);
  Map<String,List<String>> filter=new HashMap<String,List<String>>();
  filter.put("A",Arrays.asList("A0"));
  List<StarTreeQuery> filteredQueries=StarTreeUtils.filterQueries(queries,filter);
  Assert.assertEquals(filteredQueries.size(),1);
  Assert.assertEquals(filteredQueries.get(0).getDimensionValues().get("A"),"A0");
  starTree.close();
}
