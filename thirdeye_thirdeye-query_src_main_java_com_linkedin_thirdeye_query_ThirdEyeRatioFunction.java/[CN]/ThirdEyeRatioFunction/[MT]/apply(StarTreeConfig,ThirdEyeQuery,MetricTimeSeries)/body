{
  List<String> metricNames=new ArrayList<>(timeSeries.getSchema().getNames());
  List<MetricType> metricTypes=new ArrayList<>(timeSeries.getSchema().getTypes());
  String ratioName=toString();
  metricNames.add(ratioName);
  metricTypes.add(MetricType.DOUBLE);
  MetricSchema newSchema=new MetricSchema(metricNames,metricTypes);
  MetricTimeSeries newTimeSeries=new MetricTimeSeries(newSchema);
  for (  Long time : timeSeries.getTimeWindowSet()) {
    MetricType denominatorType=null;
    for (int i=0; i < timeSeries.getSchema().getNumMetrics(); i++) {
      String name=timeSeries.getSchema().getMetricName(i);
      newTimeSeries.increment(time,name,timeSeries.get(time,name));
      if (name.equals(denominator)) {
        denominatorType=timeSeries.getSchema().getMetricType(i);
      }
    }
    Number n=timeSeries.get(time,numerator);
    Number d=timeSeries.get(time,denominator);
    if (!NumberUtils.isZero(d,denominatorType)) {
      double r=n.doubleValue() / d.doubleValue();
      newTimeSeries.increment(time,ratioName,r);
    }
  }
  return newTimeSeries;
}
