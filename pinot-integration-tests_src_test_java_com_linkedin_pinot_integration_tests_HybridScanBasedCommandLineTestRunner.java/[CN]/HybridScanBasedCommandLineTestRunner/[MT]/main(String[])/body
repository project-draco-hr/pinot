{
  if (args.length == 0) {
    usage();
  }
  int expectedArgsLen=5;
  int ix=0;
  while (args[ix].startsWith("-")) {
    if (args[ix].equals("--record")) {
      CustomHybridClusterScanComparisonIntegrationTest._recordScanResponses=true;
    }
 else     if (args[ix].equals("--llc")) {
      CustomHybridClusterScanComparisonIntegrationTest._useLlc=true;
    }
 else {
      usage();
    }
    ix++;
    expectedArgsLen++;
  }
  if (args.length != expectedArgsLen) {
    usage();
  }
  final String tableName=args[ix++];
  final String schemaFilePath=args[ix++];
  final String segQueryDirPath=args[ix++];
  final String invIndexCols=args[ix++];
  final String sortedCol=args[ix++];
  CustomHybridClusterScanComparisonIntegrationTest.setParams(tableName,schemaFilePath,segQueryDirPath,invIndexCols,sortedCol);
  TestListenerAdapter tla=new TestListenerAdapter();
  TestNG testng=new TestNG();
  testng.setTestClasses(new Class[]{CustomHybridClusterScanComparisonIntegrationTest.class});
  testng.addListener(tla);
  testng.run();
  System.out.println("Passed tests: " + tla.getPassedTests());
  if (!tla.getSkippedTests().isEmpty()) {
    System.out.println("Skipped tests: " + tla.getSkippedTests());
  }
  System.out.println(tla.toString());
  if (!tla.getFailedTests().isEmpty()) {
    System.err.println("Failed tests:" + tla.getFailedTests());
    System.exit(1);
  }
  System.exit(0);
}
