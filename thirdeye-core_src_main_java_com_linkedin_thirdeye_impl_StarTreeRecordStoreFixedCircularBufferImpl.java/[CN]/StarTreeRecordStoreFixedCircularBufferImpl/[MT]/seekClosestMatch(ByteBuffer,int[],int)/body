{
  int idx=-1;
  int otherScore=-1;
  int bucketStartIdx=seekBucket(buffer,targetBucket);
  buffer.clear();
  buffer.position(bucketStartIdx);
  int[] currentDimensions=new int[targetDimensions.length];
  while (buffer.position() < buffer.limit()) {
    int currentIdx=buffer.position();
    int currentBucket=buffer.getInt();
    if (currentBucket != targetBucket) {
      break;
    }
    int currentScore=0;
    boolean matches=true;
    for (int i=0; i < dimensionNames.size(); i++) {
      currentDimensions[i]=buffer.getInt();
      if (currentDimensions[i] == targetDimensions[i]) {
        currentScore+=0;
      }
 else       if (currentDimensions[i] == StarTreeConstants.OTHER_VALUE) {
        currentScore+=1;
      }
 else {
        matches=false;
      }
    }
    if (matches && (otherScore < 0 || currentScore < otherScore)) {
      otherScore=currentScore;
      idx=currentIdx;
    }
    buffer.getLong();
    for (    String metricName : metricNames) {
      buffer.getLong();
    }
  }
  return idx;
}
