{
synchronized (sync) {
    int[] targetDimensions=new int[dimensionNames.size()];
    for (int i=0; i < dimensionNames.size(); i++) {
      String dimensionName=dimensionNames.get(i);
      String dimensionValue=record.getDimensionValues().get(dimensionName);
      Integer valueId=forwardIndex.get(dimensionName).get(dimensionValue);
      if (valueId == null) {
        valueId=StarTreeConstants.OTHER_VALUE;
      }
      targetDimensions[i]=valueId;
    }
    int bucket=(int)(record.getTime() % timeBuckets.size());
    int idx=search(buffer,bucket,targetDimensions);
    if (idx < 0) {
      idx=seekClosestMatch(buffer,targetDimensions,bucket);
      if (idx < 0) {
        throw new IllegalArgumentException("No match could be found for record " + record);
      }
    }
    buffer.clear();
    buffer.position(idx);
    buffer.getInt();
    for (    String dimensionName : dimensionNames) {
      buffer.getInt();
    }
    buffer.mark();
    long currentTime=buffer.getLong();
    long[] metricValues=new long[metricNames.size()];
    for (int i=0; i < metricNames.size(); i++) {
      long baseValue=buffer.getLong();
      if (record.getTime().equals(currentTime)) {
        metricValues[i]=baseValue + record.getMetricValues().get(metricNames.get(i));
      }
 else {
        metricValues[i]=record.getMetricValues().get(metricNames.get(i));
      }
    }
    buffer.reset();
    buffer.putLong(record.getTime());
    for (    long metricValue : metricValues) {
      buffer.putLong(metricValue);
    }
  }
}
