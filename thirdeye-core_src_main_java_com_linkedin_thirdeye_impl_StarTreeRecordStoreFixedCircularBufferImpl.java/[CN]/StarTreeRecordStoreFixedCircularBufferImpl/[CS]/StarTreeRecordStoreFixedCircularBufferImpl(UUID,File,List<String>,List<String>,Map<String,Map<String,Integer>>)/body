{
  this.nodeId=nodeId;
  this.file=file;
  this.dimensionNames=dimensionNames;
  this.metricNames=metricNames;
  this.forwardIndex=forwardIndex;
  this.reverseIndex=new HashMap<String,Map<Integer,String>>();
  this.dimensionValues=new HashMap<String,Set<String>>();
  this.timeBuckets=new LinkedList<Integer>();
  this.sync=new Object();
  this.isOpen=new AtomicBoolean();
  for (  Map.Entry<String,Map<String,Integer>> e1 : forwardIndex.entrySet()) {
    reverseIndex.put(e1.getKey(),new HashMap<Integer,String>());
    for (    Map.Entry<String,Integer> e2 : e1.getValue().entrySet()) {
      reverseIndex.get(e1.getKey()).put(e2.getValue(),e2.getKey());
    }
  }
  this.entrySize=getEntrySize(dimensionNames,metricNames);
}
