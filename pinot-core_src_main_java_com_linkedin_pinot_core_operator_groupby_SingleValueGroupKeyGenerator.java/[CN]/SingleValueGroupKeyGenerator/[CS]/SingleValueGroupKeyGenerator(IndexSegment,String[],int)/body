{
  _groupByColumns=groupByColumns;
  _singleValIterators=new BlockSingleValIterator[groupByColumns.length];
  _dictionaries=new Dictionary[groupByColumns.length];
  _cardinalities=new int[groupByColumns.length];
  _isSingleValueArray=new boolean[groupByColumns.length];
  for (int i=0; i < groupByColumns.length; i++) {
    DataSource dataSource=indexSegment.getDataSource(_groupByColumns[i]);
    _singleValIterators[i]=(BlockSingleValIterator)dataSource.nextBlock().getBlockValueSet().iterator();
    _dictionaries[i]=dataSource.getDictionary();
    _cardinalities[i]=dataSource.getDataSourceMetadata().cardinality();
    _isSingleValueArray[i]=(dataSource.getDataSourceMetadata().isSingleValue()) ? true : false;
  }
  _numUniqueGroupKeys=0;
  if (maxNumGroupKeys <= ResultHolderFactory.INITIAL_RESULT_HOLDER_CAPACITY) {
    _storageType=STORAGE_TYPE.ARRAY_BASED;
    _uniqueGroupKeysFlag=new boolean[maxNumGroupKeys];
  }
 else {
    _storageType=STORAGE_TYPE.MAP_BASED;
    _groupKeyToId=new Long2IntOpenHashMap();
    _groupKeyToId.defaultReturnValue(INVALID_ID);
  }
  _reusableGroupByValuesArray=new int[groupByColumns.length];
}
