{
  rootDir=new File(System.getProperty("java.io.tmpdir"),TestStarTreeRecordStoreCircularBufferImpl.class.getSimpleName());
  nodeId=UUID.randomUUID();
  if (rootDir.exists()) {
    FileUtils.forceDelete(rootDir);
  }
  FileUtils.forceMkdir(rootDir);
  Map<String,Integer> aValues=new HashMap<String,Integer>();
  aValues.put(StarTreeConstants.STAR,StarTreeConstants.STAR_VALUE);
  aValues.put(StarTreeConstants.OTHER,StarTreeConstants.OTHER_VALUE);
  aValues.put("A0",2);
  aValues.put("A1",3);
  aValues.put("A2",4);
  aValues.put("A3",5);
  aValues.put(StarTreeConstants.OTHER,StarTreeConstants.OTHER_VALUE);
  aValues.put(StarTreeConstants.STAR,StarTreeConstants.STAR_VALUE);
  Map<String,Integer> bValues=new HashMap<String,Integer>();
  bValues.put(StarTreeConstants.STAR,StarTreeConstants.STAR_VALUE);
  bValues.put(StarTreeConstants.OTHER,StarTreeConstants.OTHER_VALUE);
  bValues.put("B0",2);
  bValues.put("B1",3);
  bValues.put("B2",4);
  bValues.put(StarTreeConstants.OTHER,StarTreeConstants.OTHER_VALUE);
  bValues.put(StarTreeConstants.STAR,StarTreeConstants.STAR_VALUE);
  Map<String,Integer> cValues=new HashMap<String,Integer>();
  cValues.put(StarTreeConstants.STAR,StarTreeConstants.STAR_VALUE);
  cValues.put(StarTreeConstants.OTHER,StarTreeConstants.OTHER_VALUE);
  cValues.put("C0",2);
  cValues.put("C1",3);
  cValues.put(StarTreeConstants.OTHER,StarTreeConstants.OTHER_VALUE);
  cValues.put(StarTreeConstants.STAR,StarTreeConstants.STAR_VALUE);
  forwardIndex.put("A",aValues);
  forwardIndex.put("B",bValues);
  forwardIndex.put("C",cValues);
  new ObjectMapper().writeValue(new File(rootDir,nodeId + StarTreeConstants.INDEX_FILE_SUFFIX),forwardIndex);
  Properties config=new Properties();
  config.setProperty("rootDir",rootDir.getAbsolutePath());
  config.setProperty("numTimeBuckets",Integer.toString(numTimeBuckets));
  recordStoreFactory=new StarTreeRecordStoreFactoryCircularBufferImpl();
  recordStoreFactory.init(dimensionNames,metricNames,metricTypes,config);
}
