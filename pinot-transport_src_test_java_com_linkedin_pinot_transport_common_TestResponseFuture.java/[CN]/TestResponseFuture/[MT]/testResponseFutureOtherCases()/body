{
  ServerInstance s=new ServerInstance("localhost",8080);
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    f.cancel(false);
    String message="dummy Message";
    setResponse(f,message);
    runner.waitForDone();
    Assert.assertTrue(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    f.cancel(false);
    String message="dummy Message";
    setResponse(f,message);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    runner.waitForDone();
    Assert.assertTrue(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    f.cancel(false);
    f.onError(new Exception("dummy"));
    runner.waitForDone();
    Assert.assertTrue(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    f.cancel(false);
    f.onError(new Exception("dummy"));
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    runner.waitForDone();
    Assert.assertTrue(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    Exception expectedError=new Exception("error processing");
    f.onError(expectedError);
    f.cancel(false);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertEquals(runner.getError(),expectedError,"Error");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    Exception expectedError=new Exception("error processing");
    f.onError(expectedError);
    f.cancel(false);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertEquals(runner.getError(),expectedError,"Error");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    String message="dummy Message";
    setResponse(f,message);
    f.cancel(false);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertEquals(runner.getMessage(),message,"Response Check:");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    String message="dummy Message";
    setResponse(f,message);
    f.cancel(false);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertEquals(runner.getMessage(),message,"Response Check:");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    String message="dummy Message";
    setResponse(f,message);
    f.onError(new Exception("dummy"));
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertEquals(runner.getMessage(),message,"Response Check:");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    String message="dummy Message";
    setResponse(f,message);
    f.onError(new Exception("dummy"));
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertEquals(runner.getMessage(),message,"Response Check:");
    Assert.assertNull(runner.getError(),"No Error :");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    Exception expectedError=new Exception("error processing");
    f.onError(expectedError);
    String message="dummy Message";
    setResponse(f,message);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertEquals(runner.getError(),expectedError,"Error");
    executor.shutdown();
  }
{
    ResponseFuture f=new ResponseFuture(s);
    ResponseFutureClientRunner runner=new ResponseFutureClientRunner(f);
    Exception expectedError=new Exception("error processing");
    f.onError(expectedError);
    String message="dummy Message";
    setResponse(f,message);
    ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
    executor.execute(runner);
    runner.waitForAboutToGet();
    Thread.sleep(100);
    runner.waitForDone();
    Assert.assertFalse(runner.isCancelled(),"Cancelled ?");
    Assert.assertTrue(runner.isDone(),"Is Done ? ");
    Assert.assertNull(runner.getMessage(),"No Reponse :");
    Assert.assertEquals(runner.getError(),expectedError,"Error");
    executor.shutdown();
  }
}
