{
  List<String> keys=new ArrayList<String>();
  int numFutures=3;
  List<KeyedFuture<String,String>> futureList=new ArrayList<KeyedFuture<String,String>>();
  String expectedMessage=null;
  for (int i=0; i < numFutures; i++) {
    String key="key_" + i;
    keys.add(key);
    AsyncResponseFuture<String,String> future=new AsyncResponseFuture<String,String>(key,"");
    futureList.add(future);
  }
  SelectingFuture<String,String> compositeFuture=new SelectingFuture<String,String>("test");
  compositeFuture.start(futureList);
  ResponseCompositeFutureClientRunnerListener runner=new ResponseCompositeFutureClientRunnerListener(compositeFuture);
  ResponseCompositeFutureClientRunnerListener listener=new ResponseCompositeFutureClientRunnerListener(compositeFuture);
  compositeFuture.addListener(listener,null);
  ThreadPoolExecutor executor=new ThreadPoolExecutor(1,1,1,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>());
  executor.execute(runner);
  runner.waitForAboutToGet();
  Thread.sleep(100);
  for (int i=0; i < numFutures; i++) {
    String message="dummy Message_" + i;
    AsyncResponseFuture<String,String> future=(AsyncResponseFuture<String,String>)futureList.get(i);
    future.onSuccess(message);
  }
  expectedMessage="dummy Message_0";
  runner.waitForDone();
  Assert.assertFalse(runner.isCancelled(),"Composite Cancelled ?");
  Assert.assertTrue(runner.isDone(),"Composite Is Done ? ");
  Assert.assertNull(runner.getError(),"Composite No Error :");
  Assert.assertEquals(runner.getMessage(),expectedMessage,"Response");
  Assert.assertFalse(futureList.get(0).isCancelled(),"First response not cancelled");
  Assert.assertTrue(futureList.get(1).isCancelled(),"Second response cancelled");
  Assert.assertTrue(futureList.get(2).isCancelled(),"Third response cancelled");
  Assert.assertNull(futureList.get(0).getError());
  Assert.assertNull(futureList.get(1).getError());
  Assert.assertNull(futureList.get(2).getError());
  Assert.assertEquals(futureList.get(0).getOne(),runner.getMessage());
  Assert.assertNull(futureList.get(1).get());
  Assert.assertNull(futureList.get(2).get());
  executor.shutdown();
}
