{
  if (args.length != 6 && args.length != 7) {
    throw new IllegalArgumentException("usage: host port collection metricFunction startTime endTime [groupBy]");
  }
  String host=args[0];
  int port=Integer.valueOf(args[1]);
  String collection=args[2];
  String metricFunction=args[3];
  DateTime startTime=ISODateTimeFormat.dateTimeParser().parseDateTime(args[4]);
  DateTime endTime=ISODateTimeFormat.dateTimeParser().parseDateTime(args[5]);
  ThirdEyeRequestBuilder requestBuilder=new ThirdEyeRequestBuilder().setCollection(collection).setStartTimeInclusive(startTime).setEndTime(endTime).setMetricFunction(metricFunction);
  if (args.length == 7) {
    requestBuilder.setGroupBy(args[6]);
  }
  ThirdEyeClient client=new DefaultThirdEyeClientFactory().getClient(host,port);
  try {
    Map<DimensionKey,MetricTimeSeries> result=client.execute(requestBuilder.build());
    for (    Map.Entry<DimensionKey,MetricTimeSeries> entry : result.entrySet()) {
      System.out.println(entry.getKey() + " #=> " + entry.getValue());
    }
  }
  finally {
    client.close();
  }
}
