{
  TimeGranularity dataGranularity=timeFieldSpec.getDataGranularity();
  long startMillis=start.getMillis();
  long endMillis=endExclusive.getMillis();
  long dataGranularityMillis=dataGranularity.toMillis();
  long startAlignmentDelta=startMillis % dataGranularityMillis;
  if (startAlignmentDelta != 0) {
    long startMillisAligned=startMillis + dataGranularityMillis - startAlignmentDelta;
    start=new DateTime(startMillisAligned);
  }
  long endAligmentDelta=endMillis % dataGranularityMillis;
  if (endAligmentDelta != 0) {
    long endMillisAligned=endMillis - endAligmentDelta;
    endExclusive=new DateTime(endMillisAligned);
  }
  String startQueryTime;
  String endQueryTimeExclusive;
  String timeField=timeFieldSpec.getColumnName();
  String timeFormat=timeFieldSpec.getFormat();
  if (timeFormat == null || TimeSpec.SINCE_EPOCH_FORMAT.equals(timeFormat)) {
    long startInConvertedUnits=dataGranularity.convertToUnit(start.getMillis());
    long endInConvertedUnits=dataGranularity.convertToUnit(endExclusive.getMillis());
    startQueryTime=String.valueOf(startInConvertedUnits);
    endQueryTimeExclusive=String.valueOf(endInConvertedUnits);
  }
 else {
    DateTimeFormatter dateTimeFormatter=DateTimeFormat.forPattern(timeFormat).withZoneUTC();
    startQueryTime=dateTimeFormatter.print(start);
    endQueryTimeExclusive=dateTimeFormatter.print(endExclusive);
  }
  if (startQueryTime.equals(endQueryTimeExclusive)) {
    return String.format(" %s = %s",timeField,startQueryTime);
  }
 else {
    return String.format(" %s >= %s AND %s < %s",timeField,startQueryTime,timeField,endQueryTimeExclusive);
  }
}
