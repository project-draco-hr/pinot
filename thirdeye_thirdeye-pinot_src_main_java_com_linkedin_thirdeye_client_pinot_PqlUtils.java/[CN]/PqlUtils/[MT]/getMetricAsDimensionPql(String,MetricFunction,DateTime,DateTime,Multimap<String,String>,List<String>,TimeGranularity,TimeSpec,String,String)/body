{
  StringBuilder sb=new StringBuilder();
  String selectionClause=getMetricAsDimensionSelectionClause(metricFunction,metricValuesColumn);
  sb.append("SELECT ").append(selectionClause).append(" FROM ").append(collection);
  String betweenClause=getBetweenClause(startTime,endTimeExclusive,dataTimeSpec);
  sb.append(" WHERE ").append(betweenClause);
  String metricWhereClause=getMetricWhereClause(metricFunction,metricNamesColumn);
  sb.append(metricWhereClause);
  String dimensionWhereClause=getDimensionWhereClause(filterSet);
  if (StringUtils.isNotBlank(dimensionWhereClause)) {
    sb.append(" AND ").append(dimensionWhereClause);
  }
  String groupByClause=getDimensionGroupByClause(groupBy,timeGranularity,dataTimeSpec);
  if (StringUtils.isNotBlank(groupByClause)) {
    sb.append(" ").append(groupByClause);
    sb.append(" TOP ").append(DEFAULT_TOP);
  }
  return sb.toString();
}
