{
  TimeSpec timeSpec=new TimeSpec("T",new TimeGranularity(1,TimeUnit.HOURS),new TimeGranularity(1,TimeUnit.HOURS),new TimeGranularity(128,TimeUnit.HOURS));
  StarTreeConfig.Builder builder=new StarTreeConfig.Builder();
  builder.setCollection("myCollection").setDimensionNames(Arrays.asList("A","B","C")).setMetricNames(Arrays.asList("M")).setMetricTypes(Arrays.asList("INT")).setTime(timeSpec).setSplit(new SplitSpec(1000,null)).setRecordStoreFactoryClass(StarTreeRecordStoreFactoryLogBufferImpl.class.getCanonicalName()).setRecordStoreFactoryConfig(new Properties());
  Assert.assertEquals(builder.getCollection(),"myCollection");
  Assert.assertEquals(builder.getDimensionNames(),Arrays.asList("A","B","C"));
  Assert.assertEquals(builder.getMetricNames(),Arrays.asList("M"));
  Assert.assertEquals(builder.getTime().getColumnName(),"T");
  Assert.assertEquals(builder.getSplit().getThreshold(),1000);
  Assert.assertEquals(builder.getRecordStoreFactoryClass(),StarTreeRecordStoreFactoryLogBufferImpl.class.getCanonicalName());
  StarTreeConfig config=builder.build();
  Assert.assertEquals(config.getCollection(),"myCollection");
  Assert.assertEquals(config.getDimensionNames(),Arrays.asList("A","B","C"));
  Assert.assertEquals(config.getMetricNames(),Arrays.asList("M"));
  Assert.assertEquals(config.getTime().getColumnName(),"T");
  Assert.assertEquals(config.getSplit().getThreshold(),1000);
  Assert.assertEquals(config.getRecordStoreFactoryClass(),StarTreeRecordStoreFactoryLogBufferImpl.class.getCanonicalName());
}
