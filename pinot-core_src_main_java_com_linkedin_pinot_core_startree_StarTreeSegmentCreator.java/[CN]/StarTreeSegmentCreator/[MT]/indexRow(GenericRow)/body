{
  currentMatchingNodes.clear();
  StarTreeTableRow tableRow=extractValues(row);
  findMatchingLeaves(starTreeBuilder.getTree(),tableRow.getDimensions(),currentMatchingNodes);
  for (  StarTreeIndexNode node : currentMatchingNodes) {
    Map<Integer,Integer> pathValues=node.getPathValues();
    if (!pathValues.containsValue(StarTreeIndexNode.all())) {
      StarTreeTableRange range=starTreeBuilder.getDocumentIdRange(node.getNodeId());
      StarTreeTable subTable=starTreeBuilder.getTable().view(range.getStartDocumentId(),range.getDocumentCount());
      StarTreeTableRange aggregateAdjustedRange=starTreeBuilder.getAggregateAdjustedDocumentIdRange(node.getNodeId());
      Integer nextMatchingDocumentId=nextDocumentIds.get(node.getNodeId());
      if (nextMatchingDocumentId == null) {
        nextMatchingDocumentId=aggregateAdjustedRange.getStartDocumentId();
      }
      nextDocumentIds.put(node.getNodeId(),nextMatchingDocumentId + 1);
      for (      final String column : dictionaryCreatorMap.keySet()) {
        Object columnValueToIndex=row.getValue(column);
        if (schema.getFieldSpecFor(column).isSingleValueField()) {
          int dictionaryIndex=dictionaryCreatorMap.get(column).indexOfSV(columnValueToIndex);
          ((SingleValueForwardIndexCreator)forwardIndexCreatorMap.get(column)).index(nextMatchingDocumentId,dictionaryIndex);
          if (config.isCreateInvertedIndexEnabled()) {
            invertedIndexCreatorMap.get(column).add(nextMatchingDocumentId,dictionaryIndex);
          }
        }
 else {
          int[] dictionaryIndices=dictionaryCreatorMap.get(column).indexOfMV(columnValueToIndex);
          ((MultiValueForwardIndexCreator)forwardIndexCreatorMap.get(column)).index(nextMatchingDocumentId,dictionaryIndices);
          if (config.isCreateInvertedIndexEnabled()) {
            invertedIndexCreatorMap.get(column).add(nextMatchingDocumentId,dictionaryIndices);
          }
        }
      }
    }
  }
}
