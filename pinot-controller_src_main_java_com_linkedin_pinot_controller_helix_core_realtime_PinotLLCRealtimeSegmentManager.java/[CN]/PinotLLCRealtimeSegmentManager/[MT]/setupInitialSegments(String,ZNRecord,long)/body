{
  final Map<String,List<String>> idealStateEntries=new HashMap<String,List<String>>(4);
  final Map<String,List<String>> partitionMap=partitionAssignment.getListFields();
  final int nPartitions=partitionMap.size();
  List<String> paths=new ArrayList<>(nPartitions);
  List<ZNRecord> records=new ArrayList<>(nPartitions);
  final long now=System.currentTimeMillis();
  final int seqNum=0;
  for (int i=0; i < nPartitions; i++) {
    final List instances=partitionMap.get(Integer.toString(i));
    LLCRealtimeSegmentZKMetadata metadata=new LLCRealtimeSegmentZKMetadata();
    String rawTableName=TableNameBuilder.extractRawTableName(realtimeTableName);
    LLCSegmentName llcSegmentName=new LLCSegmentName(rawTableName,i,seqNum,now);
    final String segName=llcSegmentName.getSegmentName();
    metadata.setCreationTime(now);
    metadata.setStartOffset(startOffset);
    metadata.setNumReplicas(instances.size());
    metadata.setTableName(realtimeTableName);
    metadata.setSegmentName(segName);
    metadata.setStatus(CommonConstants.Segment.Realtime.Status.IN_PROGRESS);
    ZNRecord record=metadata.toZNRecord();
    final String znodePath=PinotRealtimeSegmentManager.getSegmentsPath() + "/" + realtimeTableName+ "/"+ segName;
    paths.add(znodePath);
    records.add(record);
    idealStateEntries.put(segName,instances);
  }
  updateHelixIdealState(realtimeTableName,idealStateEntries,paths,records);
}
