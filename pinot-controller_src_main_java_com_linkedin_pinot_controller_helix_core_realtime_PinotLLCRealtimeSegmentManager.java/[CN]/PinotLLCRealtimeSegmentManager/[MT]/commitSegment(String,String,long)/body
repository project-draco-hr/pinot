{
  final long now=System.currentTimeMillis();
  final String realtimeTableName=TableNameBuilder.REALTIME_TABLE_NAME_BUILDER.forTable(rawTableName);
  final LLCRealtimeSegmentZKMetadata oldSegMetadata=getRealtimeSegmentZKMetadata(realtimeTableName,committingSegmentNameStr);
  final LLCSegmentName oldSegmentName=new LLCSegmentName(committingSegmentNameStr);
  final int partitionId=oldSegmentName.getPartitionId();
  final int oldSeqNum=oldSegmentName.getSequenceNumber();
  oldSegMetadata.setEndOffset(nextOffset);
  oldSegMetadata.setStatus(CommonConstants.Segment.Realtime.Status.DONE);
  oldSegMetadata.setEndTime(now);
  final ZNRecord oldZnRecord=oldSegMetadata.toZNRecord();
  final String oldZnodePath=PinotRealtimeSegmentManager.getSegmentsPath() + "/" + realtimeTableName+ "/"+ committingSegmentNameStr;
  final ZNRecord partitionAssignment=getKafkaPartitionAssignment(realtimeTableName);
  List<String> newInstances=partitionAssignment.getListField(Integer.toString(partitionId));
  final Map<String,List<String>> idealStateEntries=new HashMap<>(1);
  final int newSeqNum=oldSeqNum + 1;
  final long newStartOffset=nextOffset;
  LLCSegmentName newHolder=new LLCSegmentName(oldSegmentName.getTableName(),partitionId,newSeqNum,now);
  final String newSegmentNameStr=newHolder.getSegmentName();
  final LLCRealtimeSegmentZKMetadata newSegMetadata=new LLCRealtimeSegmentZKMetadata();
  newSegMetadata.setCreationTime(System.currentTimeMillis());
  newSegMetadata.setStartOffset(newStartOffset);
  newSegMetadata.setNumReplicas(newInstances.size());
  newSegMetadata.setTableName(realtimeTableName);
  newSegMetadata.setSegmentName(newSegmentNameStr);
  newSegMetadata.setStatus(CommonConstants.Segment.Realtime.Status.IN_PROGRESS);
  final ZNRecord newZnRecord=newSegMetadata.toZNRecord();
  final String newZnodePath=PinotRealtimeSegmentManager.getSegmentsPath() + "/" + realtimeTableName+ "/"+ newSegmentNameStr;
  idealStateEntries.put(newSegmentNameStr,newInstances);
  List<String> paths=new ArrayList<>(2);
  paths.add(oldZnodePath);
  paths.add(newZnodePath);
  List<ZNRecord> records=new ArrayList<>(2);
  records.add(oldZnRecord);
  records.add(newZnRecord);
  writeSegmentsToPropertyStore(paths,records);
  updateHelixIdealState(realtimeTableName,newInstances,committingSegmentNameStr,newSegmentNameStr);
  return true;
}
