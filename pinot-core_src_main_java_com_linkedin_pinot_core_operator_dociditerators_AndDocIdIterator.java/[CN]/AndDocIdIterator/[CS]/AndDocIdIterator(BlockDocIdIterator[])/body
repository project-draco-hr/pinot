{
  int numIndexBasedIterators=0;
  int numScanBasedIterators=0;
  for (int i=0; i < blockDocIdIterators.length; i++) {
    if (blockDocIdIterators[i] instanceof IndexBasedDocIdIterator) {
      numIndexBasedIterators=numIndexBasedIterators + 1;
    }
 else     if (blockDocIdIterators[i] instanceof ScanBasedDocIdIterator) {
      numScanBasedIterators=numScanBasedIterators + 1;
    }
  }
  if (numIndexBasedIterators > 0 && numScanBasedIterators > 0) {
    hasScanBasedIterators=true;
    int nonScanIteratorsSize=blockDocIdIterators.length - numScanBasedIterators;
    this.docIdIterators=new BlockDocIdIterator[nonScanIteratorsSize];
    this.scanBasedDocIdIterators=new ScanBasedDocIdIterator[numScanBasedIterators];
    int nonScanBasedIndex=0;
    int scanBasedIndex=0;
    for (int i=0; i < blockDocIdIterators.length; i++) {
      if (blockDocIdIterators[i] instanceof ScanBasedDocIdIterator) {
        this.scanBasedDocIdIterators[scanBasedIndex++]=(ScanBasedDocIdIterator)blockDocIdIterators[i];
      }
 else {
        this.docIdIterators[nonScanBasedIndex++]=blockDocIdIterators[i];
      }
    }
  }
 else {
    hasScanBasedIterators=false;
    this.docIdIterators=blockDocIdIterators;
  }
  this.docIdPointers=new int[docIdIterators.length];
  Arrays.fill(docIdPointers,-1);
}
