{
  rows=numDocs;
  final int headerSize=numDocs * SIZE_OF_INT * NUM_COLS_IN_HEADER;
  raf=new RandomAccessFile(file,"rw");
  this.isMmap=isMMap;
  if (isMMap) {
    headerSectionBuffer=raf.getChannel().map(FileChannel.MapMode.READ_ONLY,0,headerSize);
  }
 else {
    headerSectionBuffer=ByteBuffer.allocateDirect(headerSize);
    raf.getChannel().read(headerSectionBuffer);
  }
  headerSectionReader=new FixedByteWidthRowColDataFileReader(headerSectionBuffer,numDocs,NUM_COLS_IN_HEADER,new int[]{SIZE_OF_INT,SIZE_OF_INT});
  final int startIndex=headerSectionReader.getInt(numDocs - 1,0);
  final int length=headerSectionReader.getInt(numDocs - 1,1);
  totalNumValues=startIndex + length;
  final int dataSizeInBytes=((totalNumValues * columnSizeInBits) + 7) / 8;
  if (isMMap) {
    dataSectionBuffer=raf.getChannel().map(FileChannel.MapMode.READ_ONLY,headerSize,dataSizeInBytes);
  }
 else {
    dataSectionBuffer=ByteBuffer.allocateDirect(dataSizeInBytes);
    raf.getChannel().read(dataSectionBuffer,headerSize);
    raf.close();
  }
  dataSectionReader=FixedBitWidthRowColDataFileReader.forByteBuffer(dataSectionBuffer,totalNumValues,1,new int[]{columnSizeInBits},signed);
}
