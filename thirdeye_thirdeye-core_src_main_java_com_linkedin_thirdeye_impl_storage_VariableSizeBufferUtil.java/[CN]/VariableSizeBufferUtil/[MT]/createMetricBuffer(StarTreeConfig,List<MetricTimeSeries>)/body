{
  ByteBuffer metricBuffer;
  int metricSizePerEntry=MetricSchema.fromMetricSpecs(config.getMetrics()).getRowSizeInBytes();
  int totalTimeValues=0;
  for (  MetricTimeSeries timeSeries : timeSeriesList) {
    totalTimeValues+=timeSeries.getTimeWindowSet().size();
  }
  int offsetBufferSize=timeSeriesList.size() * (4 + 4);
  int metricBufferSize=totalTimeValues * (Long.SIZE / 8 + metricSizePerEntry);
  metricBuffer=ByteBuffer.allocate(offsetBufferSize + metricBufferSize);
  int index=offsetBufferSize;
  for (  MetricTimeSeries timeSeries : timeSeriesList) {
    metricBuffer.putInt(index);
    metricBuffer.putInt(timeSeries.getTimeWindowSet().size());
    index=index + (timeSeries.getTimeWindowSet().size() * (Long.SIZE / 8 + metricSizePerEntry));
  }
  for (  MetricTimeSeries timeSeries : timeSeriesList) {
    StorageUtils.addToMetricStore(config,metricBuffer,timeSeries);
  }
  metricBuffer.rewind();
  return metricBuffer;
}
