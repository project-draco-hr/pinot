{
  buffer.rewind();
  int startOffsetOfFirstEntry=buffer.getInt();
  int SIZE_OF_ENTRY=8;
  int numberOfEntries=startOffsetOfFirstEntry / SIZE_OF_ENTRY;
  List<MetricTimeSeries> allSeries=new ArrayList<MetricTimeSeries>(numberOfEntries);
  for (int i=0; i < numberOfEntries; i++) {
    MetricTimeSeries series=new MetricTimeSeries(schema);
    buffer.position(i * (SIZE_OF_ENTRY));
    int startOffset=buffer.getInt();
    int length=buffer.getInt();
    buffer.position(startOffset);
    for (int j=0; j < length; j++) {
      long time=buffer.getLong();
      for (      String metricName : schema.getNames()) {
        Number metricValue=NumberUtils.readFromBuffer(buffer,schema.getMetricType(metricName));
        series.set(time,metricName,metricValue);
      }
    }
    allSeries.add(series);
  }
  return allSeries;
}
