{
  final String pql=request.getString("pql");
  final long requestId=_requestIdGenerator.incrementAndGet();
  LOGGER.debug("Query string for requestId {}: {}",requestId,pql);
  boolean isTraceEnabled=false;
  if (request.has("trace")) {
    try {
      isTraceEnabled=Boolean.parseBoolean(request.getString("trace"));
      LOGGER.info("Trace is set to: {} for query {}",isTraceEnabled,pql);
    }
 catch (    Exception e) {
      LOGGER.warn("Invalid trace value: {} for query {}",request.getString("trace"),pql,e);
    }
  }
 else {
  }
  final long startTime=System.nanoTime();
  final BrokerRequest brokerRequest;
  try {
    brokerRequest=REQUEST_COMPILER.compileToBrokerRequest(pql);
    if (isTraceEnabled) {
      brokerRequest.setEnableTrace(true);
    }
    brokerRequest.setResponseFormat(ResponseType.BROKER_RESPONSE_TYPE_NATIVE.name());
  }
 catch (  Exception e) {
    BrokerResponse brokerResponse=new BrokerResponseNative();
    brokerResponse.setExceptions(Arrays.asList(QueryException.getException(QueryException.PQL_PARSING_ERROR,e)));
    _brokerMetrics.addMeteredGlobalValue(BrokerMeter.REQUEST_COMPILATION_EXCEPTIONS,1);
    LOGGER.info("Parsing error on query:{}",pql,e);
    return brokerResponse;
  }
  _brokerMetrics.addMeteredQueryValue(brokerRequest,BrokerMeter.QUERIES,1);
  final long requestCompilationTime=System.nanoTime() - startTime;
  _brokerMetrics.addPhaseTiming(brokerRequest,BrokerQueryPhase.REQUEST_COMPILATION,requestCompilationTime);
  final ScatterGatherStats scatterGatherStats=new ScatterGatherStats();
  try {
    validateRequest(brokerRequest);
  }
 catch (  Exception e) {
    BrokerResponse brokerResponse=new BrokerResponseNative();
    brokerResponse.setExceptions(Arrays.asList(QueryException.getException(QueryException.QUERY_VALIDATION_ERROR,e)));
    LOGGER.error("Validation error on query: {}",pql);
    return brokerResponse;
  }
  final BrokerResponse resp=_brokerMetrics.timeQueryPhase(brokerRequest,BrokerQueryPhase.QUERY_EXECUTION,new Callable<BrokerResponse>(){
    @Override public BrokerResponse call() throws Exception {
      final BucketingSelection bucketingSelection=getBucketingSelection(brokerRequest);
      return (BrokerResponse)processBrokerRequest(brokerRequest,bucketingSelection,scatterGatherStats,requestId);
    }
  }
);
  long queryProcessingTimeInNanos=System.nanoTime() - startTime;
  long queryProcessingTimeInMillis=TimeUnit.MILLISECONDS.convert(queryProcessingTimeInNanos,TimeUnit.NANOSECONDS);
  resp.setTimeUsedMs(queryProcessingTimeInMillis);
  LOGGER.debug("Broker Response : {}",resp);
  LOGGER.info("ResponseTimes for requestId:{}, table:{}, total time:{}, scanned docs:{}, total docs:{}, scatterGatherStats: {} query: {}",requestId,brokerRequest.getQuerySource().getTableName(),queryProcessingTimeInMillis,resp.getNumDocsScanned(),resp.getTotalDocs(),scatterGatherStats,pql);
  return resp;
}
