{
  if (null == buffer)   return;
  if (!buffer.isDirect())   return;
  final int bufferSize=buffer.capacity();
  DIRECT_BYTE_BUFFER_USAGE.addAndGet(-bufferSize);
  LOGGER.info("Releasing byte buffer of size {} with context {}, currently allocated {} MB",bufferSize,BUFFER_TO_CONTEXT_MAP.get(buffer),DIRECT_BYTE_BUFFER_USAGE.get() / BYTES_IN_MEGABYTE);
  try {
    Method cleanerMethod=buffer.getClass().getMethod("cleaner");
    Method cleanMethod=Class.forName("sun.misc.Cleaner").getMethod("clean");
    cleanerMethod.setAccessible(true);
    cleanMethod.setAccessible(true);
    Object cleaner=cleanerMethod.invoke(buffer);
    if (cleaner != null) {
      cleanMethod.invoke(cleaner);
    }
  }
 catch (  Exception e) {
    LOGGER.warn("Caught (ignored) exception while unloading byte buffer",e);
  }
}
