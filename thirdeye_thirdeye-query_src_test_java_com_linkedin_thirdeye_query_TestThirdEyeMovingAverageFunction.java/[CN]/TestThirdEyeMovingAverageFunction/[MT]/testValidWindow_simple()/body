{
  MetricTimeSeries timeSeries=new MetricTimeSeries(metricSchema);
  for (int i=0; i < 21; i++) {
    timeSeries.increment(i,"L",1);
    timeSeries.increment(i,"D",1.0);
  }
  MetricTimeSeries derived=new ThirdEyeMovingAverageFunction(new TimeGranularity(7,TimeUnit.HOURS)).apply(config,query,timeSeries);
  Assert.assertEquals(derived.getTimeWindowSet().size(),14);
  Assert.assertEquals(derived.getSchema().getNames().size(),2);
  System.out.println(derived);
  for (  Long time : derived.getTimeWindowSet()) {
    Assert.assertEquals(derived.get(time,"L").doubleValue(),1.0,0.001);
  }
}
