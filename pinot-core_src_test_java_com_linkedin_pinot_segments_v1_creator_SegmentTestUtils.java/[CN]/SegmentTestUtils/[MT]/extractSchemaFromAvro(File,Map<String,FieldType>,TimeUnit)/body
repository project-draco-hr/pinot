{
  DataFileStream<GenericRecord> dataStream=new DataFileStream<GenericRecord>(new FileInputStream(avroFile),new GenericDatumReader<GenericRecord>());
  Schema schema=new Schema();
  for (  final Field field : dataStream.getSchema().getFields()) {
    final String columnName=field.name();
    if (fieldTypeMap.get(field.name()) == FieldType.TIME) {
      final TimeGranularitySpec gSpec=new TimeGranularitySpec(getColumnType(dataStream.getSchema().getField(columnName)),granularity,field.name());
      final TimeFieldSpec fSpec=new TimeFieldSpec(gSpec);
      schema.addField(columnName,fSpec);
    }
 else     if (fieldTypeMap.get(field.name()) == FieldType.DIMENSION) {
      final FieldSpec fieldSpec=new DimensionFieldSpec();
      fieldSpec.setName(columnName);
      fieldSpec.setFieldType(fieldTypeMap.get(field.name()));
      fieldSpec.setDataType(getColumnType(dataStream.getSchema().getField(columnName)));
      fieldSpec.setSingleValueField(isSingleValueField(dataStream.getSchema().getField(columnName)));
      fieldSpec.setDelimiter(",");
      schema.addField(columnName,fieldSpec);
    }
 else {
      final FieldSpec fieldSpec=new MetricFieldSpec();
      fieldSpec.setName(columnName);
      fieldSpec.setFieldType(fieldTypeMap.get(field.name()));
      fieldSpec.setDataType(getColumnType(dataStream.getSchema().getField(columnName)));
      fieldSpec.setSingleValueField(isSingleValueField(dataStream.getSchema().getField(columnName)));
      fieldSpec.setDelimiter(",");
      schema.addField(columnName,fieldSpec);
    }
  }
  dataStream.close();
  return schema;
}
