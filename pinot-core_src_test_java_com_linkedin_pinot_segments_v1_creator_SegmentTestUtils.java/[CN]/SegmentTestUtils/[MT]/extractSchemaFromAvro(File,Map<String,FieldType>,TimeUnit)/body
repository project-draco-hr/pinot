{
  DataFileStream<GenericRecord> dataStream=new DataFileStream<>(new FileInputStream(avroFile),new GenericDatumReader<GenericRecord>());
  Schema schema=new Schema();
  for (  final Field field : dataStream.getSchema().getFields()) {
    final String columnName=field.name();
    FieldType fieldType=fieldTypeMap.get(columnName);
    Preconditions.checkNotNull(fieldType);
switch (fieldType) {
case TIME:
      final TimeGranularitySpec gSpec=new TimeGranularitySpec(getColumnType(field),granularity,columnName);
    final TimeFieldSpec fSpec=new TimeFieldSpec(gSpec);
  schema.addField(fSpec);
continue;
case DIMENSION:
final FieldSpec dimensionFieldSpec=new DimensionFieldSpec(columnName,getColumnType(field),isSingleValueField(field));
schema.addField(dimensionFieldSpec);
continue;
case METRIC:
final FieldSpec metricFieldSpec=new MetricFieldSpec(columnName,getColumnType(field));
schema.addField(metricFieldSpec);
continue;
default :
throw new UnsupportedOperationException("Unsupported field type: " + fieldType);
}
}
dataStream.close();
return schema;
}
