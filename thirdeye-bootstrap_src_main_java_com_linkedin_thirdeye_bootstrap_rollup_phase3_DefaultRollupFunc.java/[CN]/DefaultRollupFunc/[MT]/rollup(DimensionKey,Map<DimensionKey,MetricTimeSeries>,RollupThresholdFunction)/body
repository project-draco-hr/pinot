{
  int minCount=rawDimensionKey.getDimensionsValues().length + 1;
  DimensionKey selectedRollup=null;
  LOG.info("Start find roll up for {}",rawDimensionKey);
  for (  Entry<DimensionKey,MetricTimeSeries> entry : possibleRollups.entrySet()) {
    DimensionKey key=entry.getKey();
    LOG.info("Trying {}",key);
    String[] dimensionsValues=key.getDimensionsValues();
    if (func.isAboveThreshold(entry.getValue())) {
      LOG.debug("passed threshold");
      int count=0;
      for (      String val : dimensionsValues) {
        if ("?".equalsIgnoreCase(val)) {
          count+=1;
        }
      }
      LOG.info("count:{} mincount:{}",count,minCount);
      if (count < minCount) {
        minCount=count;
        selectedRollup=key;
        LOG.info("setting selectedrollup:{}",selectedRollup);
      }
    }
  }
  if (selectedRollup == null) {
    StringBuilder sb=new StringBuilder();
    for (    Entry<DimensionKey,MetricTimeSeries> entry : possibleRollups.entrySet()) {
      sb.append(entry.getKey());
      sb.append("=");
      sb.append(entry.getValue());
      sb.append("\n");
    }
    LOG.error("cannot find roll up for {} possiblerollups:{}",rawDimensionKey,sb.toString());
  }
  return selectedRollup;
}
