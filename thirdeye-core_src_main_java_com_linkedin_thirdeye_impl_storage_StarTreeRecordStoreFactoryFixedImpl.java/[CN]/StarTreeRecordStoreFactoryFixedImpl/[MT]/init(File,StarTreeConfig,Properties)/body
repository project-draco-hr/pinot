{
synchronized (sync) {
    if (isInit) {
      return;
    }
    this.rootDir=rootDir;
    this.isInit=true;
    this.starTreeConfig=starTreeConfig;
    File dimensionStore=new File(rootDir,DIMENSION_STORE);
    FileUtils.forceMkdir(dimensionStore);
    File[] dimensionIndexFiles=dimensionStore.listFiles(INDEX_FILE_FILTER);
    if (dimensionIndexFiles != null) {
      for (      File indexFile : dimensionIndexFiles) {
        loadDimensionIndex(indexFile);
      }
    }
    File metricStore=new File(rootDir,METRIC_STORE);
    FileUtils.forceMkdir(metricStore);
    File[] metricIndexFiles=metricStore.listFiles(INDEX_FILE_FILTER);
    if (metricIndexFiles != null) {
      for (      File indexFile : metricIndexFiles) {
        loadMetricIndex(indexFile);
      }
    }
    loadDimensionBuffers(dimensionIndex.values());
    for (    List<MetricIndexEntry> entryGroup : metricIndex.values()) {
      loadMetricBuffers(entryGroup);
    }
    RefreshWatcher refreshWatcher=new RefreshWatcher();
    Path dimensionPath=FileSystems.getDefault().getPath(rootDir.getAbsolutePath(),DIMENSION_STORE);
    refreshWatcher.register(dimensionPath);
    LOG.info("Registered watch on {}",dimensionPath);
    Path metricPath=FileSystems.getDefault().getPath(rootDir.getAbsolutePath(),METRIC_STORE);
    refreshWatcher.register(metricPath);
    LOG.info("Registered watch on {}",metricPath);
    Thread watcherThread=new Thread(refreshWatcher);
    watcherThread.setDaemon(true);
    watcherThread.start();
    LOG.info("Started file system watcher in {}",rootDir);
  }
}
