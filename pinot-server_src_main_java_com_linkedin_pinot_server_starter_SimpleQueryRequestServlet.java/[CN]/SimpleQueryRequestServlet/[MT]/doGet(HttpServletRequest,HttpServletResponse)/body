{
  String function=req.getParameter("function");
  String metric=req.getParameter("metric");
  String filterColumn=req.getParameter("filterColumn");
  String filterVal=req.getParameter("filterVal");
  String res=req.getParameter("resource");
  String table=req.getParameter("table");
  logger.info("found all params as : " + req.getParameterMap());
  BrokerRequest brokerRequest=new BrokerRequest();
  QuerySource querySource=new QuerySource();
  querySource.setResourceName(res);
  querySource.setTableName(table);
  brokerRequest.setQuerySource(querySource);
  AggregationInfo aggregationInfo=new AggregationInfo();
  aggregationInfo.setAggregationType(function);
  Map<String,String> aggregationParams=new HashMap<String,String>();
  aggregationParams.put("column",metric);
  aggregationInfo.setAggregationParams(aggregationParams);
  List<AggregationInfo> aggregationInfos=new ArrayList<AggregationInfo>();
  aggregationInfos.add(aggregationInfo);
  brokerRequest.setAggregationsInfo(aggregationInfos);
  FilterQueryTree filterQueryTree;
  if (filterColumn.contains(",")) {
    String[] filterColumns=filterColumn.split(",");
    String[] filterValues=filterVal.split(",");
    List<FilterQueryTree> nested=new ArrayList<FilterQueryTree>();
    for (int i=0; i < filterColumns.length; i++) {
      List<String> vals=new ArrayList<String>();
      vals.add(filterValues[i]);
      FilterQueryTree d=new FilterQueryTree(i + 1,filterColumns[i],vals,FilterOperator.EQUALITY,null);
      nested.add(d);
    }
    filterQueryTree=new FilterQueryTree(0,null,null,FilterOperator.AND,nested);
  }
 else {
    List<String> vals=new ArrayList<String>();
    vals.add(filterVal);
    filterQueryTree=new FilterQueryTree(0,filterColumn,vals,FilterOperator.EQUALITY,null);
  }
  RequestUtils.generateFilterFromTree(filterQueryTree,brokerRequest);
  logger.info("*********************** issueing query : " + brokerRequest);
  String response="NOT_WORKING_RIGHT_NOW MAKE CHANGES TO THE SERVLET";
  try {
  }
 catch (  Exception e) {
    response=e.getMessage();
    e.printStackTrace();
  }
  logger.info("************************************** came back with : " + response);
  resp.getOutputStream().print(response);
  resp.getOutputStream().flush();
  resp.getOutputStream().close();
  resp.setStatus(200);
  return;
}
