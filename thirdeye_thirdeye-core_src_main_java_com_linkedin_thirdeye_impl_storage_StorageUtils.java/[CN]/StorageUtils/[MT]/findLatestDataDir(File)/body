{
  File[] dataDirs=collectionDir.listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.startsWith(StorageUtils.getDataDirPrefix());
    }
  }
);
  if (dataDirs == null) {
    return null;
  }
  Arrays.sort(dataDirs,new Comparator<File>(){
    @Override public int compare(    File f1,    File f2){
      String[] f1Tokens=f1.getName().split("_");
      String[] f2Tokens=f2.getName().split("_");
      if ("LATEST".equals(f1Tokens[3])) {
        return -1;
      }
 else       if ("LATEST".equals(f2Tokens[3])) {
        return 1;
      }
      DateTime f1MaxTime=StarTreeConstants.DATE_TIME_FORMATTER.parseDateTime(f1Tokens[3]);
      DateTime f2MaxTime=StarTreeConstants.DATE_TIME_FORMATTER.parseDateTime(f2Tokens[3]);
      return (int)(f1MaxTime.getMillis() - f2MaxTime.getMillis());
    }
  }
);
  return dataDirs[dataDirs.length - 1];
}
