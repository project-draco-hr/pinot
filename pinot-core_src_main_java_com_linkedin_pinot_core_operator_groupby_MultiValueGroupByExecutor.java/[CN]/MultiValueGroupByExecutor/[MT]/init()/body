{
  if (_inited) {
    return;
  }
  _groupKeyGenerator=new MultiValueGroupKeyGenerator(_indexSegment,_groupBy);
  _aggrFuncContextList=new ArrayList<AggregationFunctionContext>();
  _columnToDictArrayMap=new HashMap<String,int[]>();
  _columnToValueArrayMap=new HashMap<String,double[]>();
  for (  AggregationInfo aggregationInfo : _aggregationsInfoList) {
    String[] columns=aggregationInfo.getAggregationParams().get("column").trim().split(",");
    for (    String column : columns) {
      if (!_columnToDictArrayMap.containsKey(column)) {
        _columnToDictArrayMap.put(column,new int[DocIdSetPlanNode.MAX_DOC_PER_CALL]);
        _columnToValueArrayMap.put(column,new double[DocIdSetPlanNode.MAX_DOC_PER_CALL]);
      }
    }
    AggregationFunctionContext aggregationFunctionContext=new AggregationFunctionContext(_indexSegment,aggregationInfo.getAggregationType(),columns);
    _aggrFuncContextList.add(aggregationFunctionContext);
  }
  _resultHolderArray=new ResultHolder[_aggrFuncContextList.size()];
  for (int i=0; i < _aggrFuncContextList.size(); i++) {
    AggregationFunctionContext aggregationFunctionContext=_aggrFuncContextList.get(i);
    AggregationFunction aggregationFunction=aggregationFunctionContext.getAggregationFunction();
    _resultHolderArray[i]=ResultHolderFactory.getResultHolder(aggregationFunction,Integer.MAX_VALUE);
  }
  _inited=true;
}
