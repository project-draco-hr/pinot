{
  Map<UUID,List<Long>> metadata=new HashMap<UUID,List<Long>>();
  File[] files=inputDir.listFiles();
  if (files != null) {
    int bufferSize=0;
    for (    File file : files) {
      bufferSize+=file.length();
    }
    ByteBuffer buffer=ByteBuffer.allocate(bufferSize);
    for (    File file : files) {
      List<Long> nodeMetadata=new ArrayList<Long>(4);
      byte[] bytes=FileUtils.readFileToByteArray(file);
      nodeMetadata.add((long)buffer.position());
      nodeMetadata.add((long)bytes.length);
      UUID nodeId;
      if (hasTime) {
        String[] tokens=file.getName().split("_");
        nodeId=UUID.fromString(tokens[0]);
        String[] timeTokens=tokens[1].split(":");
        nodeMetadata.add(Long.valueOf(timeTokens[0]));
        nodeMetadata.add(Long.valueOf(timeTokens[1]));
      }
 else {
        nodeId=UUID.fromString(file.getName());
      }
      metadata.put(nodeId,nodeMetadata);
      buffer.put(bytes);
    }
    buffer.flip();
    FileChannel fileChannel=new RandomAccessFile(outputFile,"rw").getChannel();
    fileChannel.write(buffer);
    fileChannel.close();
  }
  return metadata;
}
