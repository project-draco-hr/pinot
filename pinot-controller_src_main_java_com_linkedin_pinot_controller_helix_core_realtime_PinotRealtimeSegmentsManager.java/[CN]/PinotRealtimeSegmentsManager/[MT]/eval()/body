{
  Map<String,IdealState> idealStateMap=new HashMap<String,IdealState>();
  for (  String resource : pinotClusterManager.getAllRealtimeResources()) {
    idealStateMap.put(resource,pinotClusterManager.getHelixAdmin().getResourceIdealState(pinotClusterManager.getHelixClusterName(),resource));
  }
  List<String> listOfSegmentsToAdd=new ArrayList<String>();
  for (  String resource : idealStateMap.keySet()) {
    IdealState state=idealStateMap.get(resource);
    if (state.getPartitionSet().size() == 0) {
      List<String> instancesInResource=pinotClusterManager.getHelixAdmin().getInstancesInClusterWithTag(pinotClusterManager.getHelixClusterName(),resource);
      RealtimeDataResourceZKMetadata realtimeDRMetadata=pinotClusterManager.getRealtimeDataResourceZKMetadata(resource);
      String tableName=realtimeDRMetadata.getTableList().get(0);
      for (      String instanceId : instancesInResource) {
        InstanceZKMetadata instanceZKMetadata=pinotClusterManager.getInstanceZKMetadata(instanceId);
        String groupId=instanceZKMetadata.getGroupId(resource);
        String partitionId=instanceZKMetadata.getPartition(resource);
        listOfSegmentsToAdd.add(SegmentNameBuilder.Realtime.build(resource,tableName,instanceId,groupId,partitionId,String.valueOf(System.currentTimeMillis())));
      }
    }
 else {
      Set<String> instancesToAssignRealtimeSegment=new HashSet<String>();
      instancesToAssignRealtimeSegment.addAll(pinotClusterManager.getHelixAdmin().getInstancesInClusterWithTag(pinotClusterManager.getHelixClusterName(),resource));
      for (      String partition : state.getPartitionSet()) {
        RealtimeSegmentZKMetadata realtimeSegmentZKMetadata=ZKMetadataProvider.getRealtimeSegmentZKMetadata(pinotClusterManager.getPropertyStore(),SegmentNameBuilder.Realtime.extractResourceName(partition),partition);
        if (realtimeSegmentZKMetadata.getStatus() == Status.IN_PROGRESS) {
          String instanceName=SegmentNameBuilder.Realtime.extractInstanceName(partition);
          instancesToAssignRealtimeSegment.remove(instanceName);
        }
      }
      for (      String instanceId : instancesToAssignRealtimeSegment) {
        InstanceZKMetadata instanceZKMetadata=pinotClusterManager.getInstanceZKMetadata(instanceId);
        String groupId=instanceZKMetadata.getGroupId(resource);
        String partitionId=instanceZKMetadata.getPartition(resource);
        RealtimeDataResourceZKMetadata realtimeDRMetadata=pinotClusterManager.getRealtimeDataResourceZKMetadata(resource);
        String tableName=realtimeDRMetadata.getTableList().get(0);
        listOfSegmentsToAdd.add(SegmentNameBuilder.Realtime.build(resource,tableName,instanceId,groupId,partitionId,String.valueOf(System.currentTimeMillis())));
      }
    }
  }
  LOGGER.info("computed list of new segments to add : " + Arrays.toString(listOfSegmentsToAdd.toArray()));
  for (  String segmentId : listOfSegmentsToAdd) {
    String resourceName=SegmentNameBuilder.Realtime.extractResourceName(segmentId);
    String tableName=SegmentNameBuilder.Realtime.extractTableName(segmentId);
    String instanceName=SegmentNameBuilder.Realtime.extractInstanceName(segmentId);
    if (!idealStateMap.get(resourceName).getPartitionSet().contains(segmentId)) {
      RealtimeSegmentZKMetadata realtimeSegmentMetadataToAdd=new RealtimeSegmentZKMetadata();
      realtimeSegmentMetadataToAdd.setResourceName(BrokerRequestUtils.getHybridResourceName(resourceName));
      realtimeSegmentMetadataToAdd.setTableName(tableName);
      realtimeSegmentMetadataToAdd.setSegmentType(SegmentType.REALTIME);
      realtimeSegmentMetadataToAdd.setStatus(Status.IN_PROGRESS);
      realtimeSegmentMetadataToAdd.setSegmentName(segmentId);
      ZKMetadataProvider.setRealtimeSegmentZKMetadata(pinotClusterManager.getPropertyStore(),realtimeSegmentMetadataToAdd);
      IdealState s=PinotResourceIdealStateBuilder.addNewRealtimeSegmentToIdealState(segmentId,idealStateMap.get(resourceName),instanceName);
      pinotClusterManager.getHelixAdmin().setResourceIdealState(pinotClusterManager.getHelixClusterName(),resourceName,PinotResourceIdealStateBuilder.addNewRealtimeSegmentToIdealState(segmentId,s,instanceName));
    }
  }
}
