{
  final String helixClusterName="testingRealtime";
  ZkClient client=new ZkClient("localhost:2181");
  if (client.exists("/" + helixClusterName)) {
    client.deleteRecursive("/" + helixClusterName);
  }
  client.close();
  PinotHelixResourceManager pinotManager=new PinotHelixResourceManager("localhost:2181",helixClusterName,"localhost_21212","/tmp");
  pinotManager.start();
  PinotRealtimeSegmentsManager segmentsManager=new PinotRealtimeSegmentsManager(pinotManager);
  segmentsManager.start();
  int c=0;
  String[] resources={"resource1_O","resource1_R","resource2_O","resource2_R","resource3_R","resource4_O","resource4_R","resource5_O"};
  for (  String resourceName : resources) {
    pinotManager.getPropertyStore().create("/" + resourceName,new ZNRecord(resourceName),AccessOption.PERSISTENT);
    System.out.println("****************** : " + resourceName);
    if (resourceName.indexOf("_O") != -1) {
      String segmentPath=PinotHelixUtils.constructPropertyStorePathForSegment(resourceName,resourceName + "_Segment_" + c);
      final ZNRecord record=new ZNRecord(resourceName + "_Segment_" + c);
      record.setSimpleField(V1Constants.SEGMENT_DOWNLOAD_URL,"http://some");
      record.setSimpleField(V1Constants.SEGMENT_PUSH_TIME,String.valueOf(System.currentTimeMillis()));
      pinotManager.getPropertyStore().create("/" + resourceName + "/"+ resourceName+ "_Segment_"+ c,record,AccessOption.PERSISTENT);
    }
  }
  Thread.sleep(1000);
}
