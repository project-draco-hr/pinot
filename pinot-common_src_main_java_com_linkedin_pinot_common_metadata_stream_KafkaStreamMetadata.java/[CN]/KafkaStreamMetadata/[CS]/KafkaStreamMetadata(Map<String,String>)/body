{
  _zkBrokerUrl=streamConfigMap.get(StringUtil.join(".",Helix.DataSource.STREAM_PREFIX,Helix.DataSource.Realtime.Kafka.HighLevelConsumer.ZK_CONNECTION_STRING));
  _consumerType=ConsumerType.valueOf(streamConfigMap.get(StringUtil.join(".",CommonConstants.Helix.DataSource.STREAM_PREFIX,CommonConstants.Helix.DataSource.Realtime.Kafka.CONSUMER_TYPE)));
  _kafkaTopicName=streamConfigMap.get(StringUtil.join(".",CommonConstants.Helix.DataSource.STREAM_PREFIX,CommonConstants.Helix.DataSource.Realtime.Kafka.TOPIC_NAME));
  _decoderClass=streamConfigMap.get(StringUtil.join(".",CommonConstants.Helix.DataSource.STREAM_PREFIX,CommonConstants.Helix.DataSource.Realtime.Kafka.DECODER_CLASS));
  for (  String key : streamConfigMap.keySet()) {
    if (key.startsWith(CommonConstants.Helix.DataSource.STREAM_PREFIX + ".")) {
      _streamConfigMap.put(key,streamConfigMap.get(key));
    }
    if (key.startsWith(StringUtil.join(".",CommonConstants.Helix.DataSource.STREAM_PREFIX,CommonConstants.Helix.DataSource.Realtime.Kafka.DECODER_PROPS_PREFIX))) {
      _decoderProperties.put(CommonConstants.Helix.DataSource.Realtime.Kafka.getDecoderPropertyKey(key),streamConfigMap.get(key));
    }
  }
}
