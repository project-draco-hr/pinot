{
  NettyClientMetrics metric=new NettyClientMetrics(null,"abc");
  final String response_prefix="response_";
  final String response=generatePayload(response_prefix,1024 * 1024 * 2);
  MyServer server=new MyServer(response);
  Thread.sleep(1000);
  EventLoopGroup eventLoopGroup=new NioEventLoopGroup();
  NettyTCPClientConnection clientConn=new NettyTCPClientConnection(server.getServerInstance(),eventLoopGroup,new HashedWheelTimer(),metric);
  try {
    LOGGER.info("About to connect the client !!");
    boolean connected=clientConn.connect();
    LOGGER.info("Client connected !!");
    Assert.assertTrue(connected,"connected");
    Thread.sleep(1000);
    String request_prefix="request_";
    String request=generatePayload(request_prefix,1024 * 1024 * 2);
    LOGGER.info("Sending the request !!");
    ResponseFuture serverRespFuture=clientConn.sendRequest(Unpooled.wrappedBuffer(request.getBytes()),1L,5000L);
    LOGGER.info("Request  sent !!");
    ByteBuf serverResp=serverRespFuture.getOne();
    byte[] b2=new byte[serverResp.readableBytes()];
    serverResp.readBytes(b2);
    String gotResponse=new String(b2);
    Assert.assertEquals(gotResponse,response,"Response Check at client");
    Assert.assertEquals(server.getHandler().getRequest(),request,"Request Check at server");
  }
  finally {
    if (null != clientConn) {
      clientConn.close();
    }
    server.shutdown();
  }
}
