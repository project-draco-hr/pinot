{
  NettyClientMetrics metric=new NettyClientMetrics(null,"abc");
  Timer timer=new HashedWheelTimer();
  MyServer server=new MyServer();
  Thread.sleep(1000);
  EventLoopGroup eventLoopGroup=new NioEventLoopGroup();
  NettyTCPClientConnection clientConn=new NettyTCPClientConnection(server.getServerInstance(),eventLoopGroup,timer,metric);
  try {
    LOGGER.info("About to connect the client !!");
    boolean connected=clientConn.connect();
    LOGGER.info("Client connected !!");
    Assert.assertTrue(connected,"connected");
    Thread.sleep(1000);
    String request="dummy request";
    LOGGER.info("Sending the request !!");
    ResponseFuture serverRespFuture=clientConn.sendRequest(Unpooled.wrappedBuffer(request.getBytes()),1L,5000L);
    LOGGER.info("Request  sent !!");
    ByteBuf serverResp=serverRespFuture.getOne();
    byte[] b2=new byte[serverResp.readableBytes()];
    serverResp.readBytes(b2);
    String gotResponse=new String(b2);
    Assert.assertEquals(gotResponse,server.getResponseStr(),"Response Check at client");
    Assert.assertEquals(server.getHandler().getRequest(),request,"Request Check at server");
    System.out.println(metric);
  }
  finally {
    if (null != clientConn) {
      clientConn.close();
    }
    if (null != server.getServerConn()) {
      server.getServerConn().shutdownGracefully();
    }
  }
}
