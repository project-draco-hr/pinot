{
  List<Double> values=new ArrayList<Double>();
  _min=Double.MAX_VALUE;
  _max=Double.MIN_VALUE;
  _sum=0;
  double meanSum=0.0;
  for (  T hist : _histograms) {
    if (hist instanceof Histogram) {
      Histogram h=(Histogram)hist;
      _min=Math.min(_min,h.min());
      _max=Math.max(_max,h.max());
      _sum+=h.sum();
      meanSum+=h.mean();
    }
 else {
      AggregatedHistogram<Sampling> h=(AggregatedHistogram<Sampling>)hist;
      _min=Math.min(_min,h.min());
      _max=Math.max(_max,h.max());
      _sum+=h.sum();
      meanSum+=h.mean();
    }
    double[] val=hist.getSnapshot().getValues();
    for (    double d : val) {
      values.add(d);
    }
  }
  if (_histograms.size() > 0) {
    _mean=meanSum / _histograms.size();
  }
  if (values.size() > 0) {
    double[] vals=new double[values.size()];
    int i=0;
    for (    Double d : values) {
      vals[i++]=d;
    }
    _snapshot=new Snapshot(vals);
  }
}
