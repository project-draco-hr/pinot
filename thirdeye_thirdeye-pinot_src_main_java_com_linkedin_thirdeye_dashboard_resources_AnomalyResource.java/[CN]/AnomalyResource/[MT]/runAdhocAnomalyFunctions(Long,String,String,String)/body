{
  if (id == null) {
    throw new IllegalArgumentException("id is a required query param");
  }
  AnomalyFunctionDTO anomalyFunctionSpec=anomalyFunctionDAO.findById(id);
  if (anomalyFunctionSpec == null) {
    throw new IllegalStateException("No anomalyFunctionSpec with id " + id);
  }
  if (StringUtils.isEmpty(windowStartIso) || StringUtils.isEmpty(windowEndIso)) {
    int windowSize=anomalyFunctionSpec.getWindowSize();
    TimeUnit windowUnit=anomalyFunctionSpec.getWindowUnit();
    int delaySize=anomalyFunctionSpec.getWindowDelay();
    TimeUnit delayUnit=anomalyFunctionSpec.getWindowDelayUnit();
    DateTime now=new DateTime();
    DateTime windowEnd=now.minus(TimeUnit.MILLISECONDS.convert(delaySize,delayUnit));
    windowEndIso=windowEnd.toString();
    DateTime windowStart=windowEnd.minus(TimeUnit.MILLISECONDS.convert(windowSize,windowUnit));
    windowStartIso=windowStart.toString();
  }
  detectionResourceHttpUtils.runAdhocAnomalyFunction(String.valueOf(id),windowStartIso,windowEndIso);
  return Response.noContent().build();
}
