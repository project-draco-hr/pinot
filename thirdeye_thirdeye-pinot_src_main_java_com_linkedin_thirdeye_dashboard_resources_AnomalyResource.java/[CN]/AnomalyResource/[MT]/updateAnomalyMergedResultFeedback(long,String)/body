{
  try {
    MergedAnomalyResultDTO result=anomalyMergedResultDAO.findById(anomalyResultId);
    if (result == null) {
      throw new IllegalArgumentException("AnomalyResult not found with id " + anomalyResultId);
    }
    ObjectMapper mapper=new ObjectMapper();
    AnomalyFeedbackDTO feedbackRequest=mapper.readValue(payload,AnomalyFeedbackDTO.class);
    AnomalyFeedbackDTO feedback=result.getFeedback();
    if (feedback == null) {
      feedback=new AnomalyFeedbackDTO();
      result.setFeedback(feedback);
    }
    if (feedbackRequest.getStatus() == null) {
      feedback.setStatus(FeedbackStatus.NEW);
    }
 else {
      feedback.setStatus(feedbackRequest.getStatus());
    }
    feedback.setComment(feedbackRequest.getComment());
    feedback.setFeedbackType(feedbackRequest.getFeedbackType());
    anomalyMergedResultDAO.update(result);
  }
 catch (  IOException e) {
    throw new IllegalArgumentException("Invalid payload " + payload,e);
  }
}
