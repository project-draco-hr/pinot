{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetHasSelection()).compareTo(other.isSetHasSelection());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHasSelection()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hasSelection,other.hasSelection);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHasFilter()).compareTo(other.isSetHasFilter());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHasFilter()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hasFilter,other.hasFilter);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHasAggregation()).compareTo(other.isSetHasAggregation());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHasAggregation()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hasAggregation,other.hasAggregation);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHasGroup_by()).compareTo(other.isSetHasGroup_by());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHasGroup_by()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hasGroup_by,other.hasGroup_by);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
