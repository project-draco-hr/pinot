{
  JSONArray flowGroupByResults=flowJson.getJSONArray(AGGREGATION_RESULTS);
  JSONArray refGroupByResults=refJson.getJSONArray(AGGREGATION_RESULTS);
  int numFlowGroupBy=flowGroupByResults.length();
  int numRefGroupBy=refGroupByResults.length();
  Map<String,Integer> functionMap=new HashMap<>();
  for (int i=0; i < numRefGroupBy; ++i) {
    JSONObject refAggr=refGroupByResults.getJSONObject(i);
    String refFunction=refAggr.getString(FUNCTION).toLowerCase();
    functionMap.put(refFunction,i);
  }
  for (int i=0; i < numFlowGroupBy; ++i) {
    JSONObject flowAggr=flowGroupByResults.getJSONObject(i);
    String flowFunction=flowAggr.getString(FUNCTION).toLowerCase();
    if (!functionMap.containsKey(flowFunction)) {
      LOGGER.error("Missing group by function in ref response: {}",flowFunction);
      return false;
    }
    JSONObject refAggr=refGroupByResults.getJSONObject(functionMap.get(flowFunction));
    if (!compareGroupByColumns(flowAggr,refAggr)) {
      return false;
    }
    if (!compareAggregationValues(flowAggr,refAggr)) {
      return false;
    }
  }
  return true;
}
