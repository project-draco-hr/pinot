{
  JSONArray flowResult=flowAggr.getJSONArray(GROUP_BY_RESULT);
  JSONArray refResult=refAggr.getJSONArray(GROUP_BY_RESULT);
  Map<GroupByOperator,Double> refMap=new HashMap<>();
  for (int i=0; i < refResult.length(); ++i) {
    List<Object> group=jsonArrayToList(refResult.getJSONObject(i).getJSONArray(GROUP));
    GroupByOperator groupByOperator=new GroupByOperator(group);
    refMap.put(groupByOperator,refResult.getJSONObject(i).getDouble(VALUE));
  }
  for (int i=0; i < flowResult.length(); ++i) {
    List<Object> group=jsonArrayToList(flowResult.getJSONObject(i).getJSONArray(GROUP));
    GroupByOperator groupByOperator=new GroupByOperator(group);
    double flowValue=flowResult.getJSONObject(i).getDouble(VALUE);
    if (!refMap.containsKey(groupByOperator)) {
      LOGGER.error("Missing group by value for group: {}",group);
      return false;
    }
    double refValue=refMap.get(groupByOperator);
    if (!fuzzyEqual(flowValue,refValue)) {
      LOGGER.error("Aggregation group by value mis-match: Flow: {}, Ref: {}",flowValue,refValue);
      return false;
    }
  }
  return true;
}
