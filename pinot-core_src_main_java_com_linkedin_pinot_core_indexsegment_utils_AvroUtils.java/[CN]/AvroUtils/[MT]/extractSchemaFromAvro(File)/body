{
  final Schema schema=new Schema();
  final DataFileStream<GenericRecord> dataStreamReader=getAvroReader(avroFile);
  final org.apache.avro.Schema avroSchema=dataStreamReader.getSchema();
  for (  final Field field : avroSchema.getFields()) {
    FieldSpec spec=null;
    if (field.name().contains("count") || field.name().contains("met")) {
      spec=new MetricFieldSpec();
      spec.setName(field.name());
      spec.setDataType(AvroRecordReader.getColumnType(field));
      spec.setFieldType(FieldType.metric);
    }
 else     if (field.name().contains("day") || field.name().equals("daysSinceEpoch")) {
      spec=new TimeFieldSpec();
      spec.setName(field.name());
      spec.setDataType(AvroRecordReader.getColumnType(field));
      spec.setFieldType(FieldType.time);
    }
 else {
      spec=new DimensionFieldSpec();
      spec.setName(field.name());
      spec.setDataType(AvroRecordReader.getColumnType(field));
      spec.setFieldType(FieldType.dimension);
    }
    schema.addSchema(spec.getName(),spec);
  }
  dataStreamReader.close();
  return schema;
}
