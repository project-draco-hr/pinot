{
  if (node.isLeaf()) {
    node.getRecordStore().update(record);
    boolean valid=true;
    if (!node.getDimensionValue().equals(StarTreeConstants.STAR)) {
      for (      String name : node.getAncestorDimensionNames()) {
        if (!record.getDimensionValues().get(name).equals(node.getAncestorDimensionValues().get(name))) {
          valid=false;
        }
      }
      if (!record.getDimensionValues().get(node.getDimensionName()).equals(node.getDimensionValue())) {
        valid=false;
      }
    }
    if (valid) {
      LOG.info("Added record:{} to node:{}",StarTreeUtils.toDimensionString(record,config.getDimensionNames()),node.getPath());
    }
 else {
      LOG.error("INVALID: Added record:{} to node:{}",StarTreeUtils.toDimensionString(record,config.getDimensionNames()),node.getPath());
    }
    if (shouldSplit(node)) {
synchronized (node) {
        if (shouldSplit(node)) {
          Set<String> blacklist=new HashSet<String>();
          blacklist.addAll(node.getAncestorDimensionNames());
          blacklist.add(node.getDimensionName());
          String splitDimensionName=null;
          if (config.getSplitOrder() == null) {
            splitDimensionName=node.getRecordStore().getMaxCardinalityDimension(blacklist);
          }
 else {
            for (            String dimensionName : config.getSplitOrder()) {
              if (!blacklist.contains(dimensionName)) {
                splitDimensionName=dimensionName;
                break;
              }
            }
          }
          if (splitDimensionName != null) {
            node.split(splitDimensionName);
          }
        }
      }
    }
  }
 else {
    String childDimensionName=node.getChildDimensionName();
    String childDimensionValue=record.getDimensionValues().get(childDimensionName);
    StarTreeNode target=node.getChild(childDimensionValue);
    if (target == null) {
      boolean mapToOtherNode=false;
      if (mapToOtherNode) {
        target=node.getOtherNode();
        String otherDimensionNames=childDimensionName;
        StarTreeRecord aliasOtherRecord=record.aliasOther(otherDimensionNames);
        add(target,aliasOtherRecord);
      }
 else {
        target=node.addChildNode(childDimensionValue);
        add(target,record);
      }
    }
 else {
      add(target,record);
    }
    add(node.getStarNode(),record.relax(childDimensionName));
  }
}
