{
  OfflineDataResourceZKMetadata offlineDataResourceMetadata=new OfflineDataResourceZKMetadata();
  offlineDataResourceMetadata.setResourceName(resource.getResourceName());
  offlineDataResourceMetadata.addToTableList(resource.getTableName());
  offlineDataResourceMetadata.setTimeColumnName(resource.getTimeColumnName());
  offlineDataResourceMetadata.setTimeType(resource.getTimeType());
  offlineDataResourceMetadata.setNumDataInstances(resource.getNumberOfDataInstances());
  offlineDataResourceMetadata.setNumDataReplicas(resource.getNumberOfCopies());
  offlineDataResourceMetadata.setNumBrokerInstance(resource.getNumberOfBrokerInstances());
  offlineDataResourceMetadata.setBrokerTag(resource.getBrokerTagName());
  offlineDataResourceMetadata.setPushFrequency(resource.getPushFrequency());
  offlineDataResourceMetadata.setSegmentAssignmentStrategy(resource.getSegmentAssignmentStrategy());
  Map<String,String> metadataMap=new HashMap<String,String>();
  if (resource.getMetadata() != null) {
    Iterator<String> fieldNameIter=resource.getMetadata().fieldNames();
    while (fieldNameIter.hasNext()) {
      String fieldName=fieldNameIter.next();
      metadataMap.put(StringUtil.join(".",CommonConstants.Helix.DataSource.METADATA,fieldName),resource.getMetadata().get(fieldName).textValue());
    }
  }
  offlineDataResourceMetadata.setMetadata(metadataMap);
  try {
    offlineDataResourceMetadata.setRetentionTimeUnit(TimeUnit.valueOf(resource.getRetentionTimeUnit()));
    offlineDataResourceMetadata.setRetentionTimeValue(Integer.parseInt(resource.getRetentionTimeValue()));
  }
 catch (  Exception e) {
    LOGGER.warn("No retention config for - " + resource);
  }
  return offlineDataResourceMetadata;
}
