{
  this.indexSegment=indexSegment;
  this.brokerRequest=brokerRequest;
  this.implementationType=implementationType;
  this.projectionPlanNode=getProjectionPlanNode();
  this.aggregationFunctionGroupByPlanNodes=new ArrayList<>();
  for (int i=0; i < brokerRequest.getAggregationsInfo().size(); ++i) {
    AggregationInfo aggregationInfo=brokerRequest.getAggregationsInfo().get(i);
    boolean hasDictionary=AggregationFunctionUtils.isAggregationFunctionWithDictionary(aggregationInfo,indexSegment);
    aggregationFunctionGroupByPlanNodes.add(new BaseAggregationFunctionGroupByPlanNode(aggregationInfo,brokerRequest.getGroupBy(),projectionPlanNode,implementationType,hasDictionary));
  }
}
