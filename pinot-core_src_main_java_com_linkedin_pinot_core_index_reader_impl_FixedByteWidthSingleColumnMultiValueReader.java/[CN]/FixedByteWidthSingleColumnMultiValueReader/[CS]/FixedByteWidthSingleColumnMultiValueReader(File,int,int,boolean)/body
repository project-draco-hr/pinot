{
  int headerSize=numDocs * SIZE_OF_INT * NUM_COLS_IN_HEADER;
  this.isMMap=isMMap;
  raf=new RandomAccessFile(file,"rw");
  if (isMMap) {
    headerSectionByteBuffer=raf.getChannel().map(FileChannel.MapMode.READ_ONLY,0,headerSize);
  }
 else {
    headerSectionByteBuffer=ByteBuffer.allocateDirect((int)headerSize);
    raf.getChannel().read(headerSectionByteBuffer);
  }
  headerSectionReader=new FixedByteWidthRowColDataFileReader(headerSectionByteBuffer,numDocs,NUM_COLS_IN_HEADER,new int[]{SIZE_OF_INT,SIZE_OF_INT});
  int startIndex=headerSectionReader.getInt(numDocs - 1,0);
  int length=headerSectionReader.getInt(numDocs - 1,1);
  int totalNumValues=startIndex + length;
  int dataSize=totalNumValues * columnSizeInBytes;
  if (isMMap) {
    dataSectionByteBuffer=raf.getChannel().map(FileChannel.MapMode.READ_ONLY,headerSize,dataSize);
  }
 else {
    dataSectionByteBuffer=ByteBuffer.allocateDirect((int)dataSize);
    raf.getChannel().read(dataSectionByteBuffer,headerSize);
    raf.close();
  }
  dataSectionReader=new FixedByteWidthRowColDataFileReader(dataSectionByteBuffer,totalNumValues,1,new int[]{columnSizeInBytes});
}
