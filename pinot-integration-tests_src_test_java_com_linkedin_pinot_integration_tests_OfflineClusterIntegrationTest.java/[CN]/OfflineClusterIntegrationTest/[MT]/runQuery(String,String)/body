{
  try {
    Statement statement=_connection.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
    statement.execute(sqlQuery);
    ResultSet rs=statement.getResultSet();
    JSONObject response=postQuery(pqlQuery);
    JSONObject aggregationResults=response.getJSONArray("aggregationResults").getJSONObject(0);
    if (aggregationResults.has("value")) {
      String value=aggregationResults.getString("value");
      rs.first();
      String sqlValue=rs.getString(1);
      if (value != null && sqlValue != null) {
        value=value.replaceAll("\\..*","");
        sqlValue=sqlValue.replaceAll("\\..*","");
      }
 else {
      }
    }
 else     if (aggregationResults.has("groupByResult")) {
      JSONArray groupByResults=aggregationResults.getJSONArray("groupByResult");
      if (groupByResults.length() != 0) {
        int groupKeyCount=groupByResults.getJSONObject(0).getJSONArray("group").length();
        Map<String,String> actualValues=new HashMap<String,String>();
        for (int resultIndex=0; resultIndex < groupByResults.length(); ++resultIndex) {
          JSONArray group=groupByResults.getJSONObject(resultIndex).getJSONArray("group");
          String groupKey="";
          for (int groupKeyIndex=0; groupKeyIndex < groupKeyCount; groupKeyIndex++) {
            groupKey+=group.getString(groupKeyIndex) + "\t";
          }
          actualValues.put(groupKey,Integer.toString((int)Double.parseDouble(groupByResults.getJSONObject(resultIndex).getString("value"))));
        }
        Map<String,String> correctValues=new HashMap<String,String>();
        rs.beforeFirst();
        while (rs.next()) {
          String groupKey="";
          for (int groupKeyIndex=0; groupKeyIndex < groupKeyCount; groupKeyIndex++) {
            groupKey+=rs.getString(groupKeyIndex + 1) + "\t";
          }
          correctValues.put(groupKey,rs.getString(groupKeyCount + 1));
        }
      }
 else {
      }
    }
  }
 catch (  JSONException exception) {
  }
  System.out.println();
}
