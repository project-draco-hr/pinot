{
  if (getChildren().size() == 2) {
    try {
      LiteralAstNode left=(LiteralAstNode)getChildren().get(0);
      LiteralAstNode right=(LiteralAstNode)getChildren().get(1);
      return new FilterQueryTree(_identifier,Collections.singletonList("[" + left.getValueAsString() + "\t\t"+ right.getValueAsString()+ "]"),FilterOperator.RANGE,null);
    }
 catch (    ClassCastException e) {
      throw new Pql2CompilationException("BETWEEN clause was expecting two literal AST nodes, got " + getChildren().get(0) + " and "+ getChildren().get(1));
    }
  }
 else {
    throw new Pql2CompilationException("BETWEEN clause does not have two children nodes");
  }
}
