{
  this.cols=1;
  colOffSets=new int[columnSizesInBytes.length];
  rowSize=0;
  for (int i=0; i < columnSizesInBytes.length; i++) {
    colOffSets[i]=rowSize;
    rowSize+=columnSizesInBytes[i];
  }
  final int totalSize=rowSize * rows;
  _buffer=PinotDataBuffer.allocateDirect(totalSize);
  reader=new FixedByteSingleValueMultiColReader(_buffer,rows,cols,columnSizesInBytes);
  writer=new FixedByteSingleValueMultiColWriter(_buffer,rows,cols,columnSizesInBytes);
}
