{
  for (int i=0; i < 4; i++) {
    String brokerTag="colocated_" + i;
    final JSONObject payload=ControllerRequestBuilderUtil.buildBrokerTenantCreateRequestJSON(brokerTag,5);
    final String res=sendPostRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forTenantCreate(),payload.toString());
    LOGGER.trace(res);
    Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,brokerTag + "_BROKER").size(),5);
    Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,CommonConstants.Helix.UNTAGGED_BROKER_INSTANCE).size(),15 - i * 5);
  }
  for (int i=0; i < 4; i++) {
    String brokerTag="colocated_" + i;
    final String res=sendDeleteRequest(ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forBrokerTenantDelete(brokerTag));
    LOGGER.trace(res);
    Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,brokerTag + "_BROKER").size(),0);
    Assert.assertEquals(_helixAdmin.getInstancesInClusterWithTag(HELIX_CLUSTER_NAME,CommonConstants.Helix.UNTAGGED_BROKER_INSTANCE).size(),i * 5 + 5);
  }
}
