{
  MetricSchema schema=timeSeries.getSchema();
  MetricTimeSeries movingAverage=ThirdEyeFunctionUtils.copyBlankSeriesDouble(metricNames,schema);
  List<Long> sortedTimes=new ArrayList<Long>(timeSeries.getTimeWindowSet());
  Collections.sort(sortedTimes);
  long collectionWindow=config.getTime().getBucket().getUnit().convert(window.getSize(),window.getUnit()) / config.getTime().getBucket().getSize();
  for (int i=(int)collectionWindow; i < sortedTimes.size(); i++) {
    long time=sortedTimes.get(i);
    for (int j=(int)(i - collectionWindow + 1); j <= i; j++) {
      for (int k=0; k < schema.getNumMetrics(); k++) {
        long includedTime=sortedTimes.get(j);
        String metricName=schema.getMetricName(k);
        Number metricValue=timeSeries.get(includedTime,metricName);
        if (metricNames.contains(metricName)) {
          movingAverage.increment(time,metricName,metricValue);
        }
      }
    }
  }
  for (  Long time : movingAverage.getTimeWindowSet()) {
    for (    String metricName : schema.getNames()) {
      if (metricNames.contains(metricName)) {
        Number sum=movingAverage.get(time,metricName);
        Number average=NumberUtils.divide(sum,collectionWindow,schema.getMetricType(metricName));
        movingAverage.set(time,metricName,average);
      }
    }
  }
  return movingAverage;
}
