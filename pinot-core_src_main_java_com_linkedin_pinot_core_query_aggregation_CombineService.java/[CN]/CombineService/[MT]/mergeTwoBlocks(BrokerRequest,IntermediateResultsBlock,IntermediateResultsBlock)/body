{
  if (blockToMerge == null) {
    return;
  }
  if (mergedBlock == null) {
    mergedBlock=blockToMerge;
    return;
  }
  mergedBlock.setNumDocsScanned(mergedBlock.getNumDocsScanned() + blockToMerge.getNumDocsScanned());
  mergedBlock.setTotalRawDocs(mergedBlock.getTotalRawDocs() + blockToMerge.getTotalRawDocs());
  if (brokerRequest.isEnableTrace()) {
  }
  mergedBlock.setExceptionsList(combineExceptions(mergedBlock.getExceptions(),blockToMerge.getExceptions()));
  if (brokerRequest.isSetAggregationsInfo()) {
    if (brokerRequest.isSetGroupBy()) {
      mergedBlock.setAggregationGroupByResult(combineAggregationGroupByResults1(brokerRequest,mergedBlock.getAggregationGroupByOperatorResult(),blockToMerge.getAggregationGroupByOperatorResult()));
    }
 else {
      List<AggregationFunction> aggregationFunctions=AggregationFunctionFactory.getAggregationFunction(brokerRequest);
      mergedBlock.setAggregationFunctions(aggregationFunctions);
      mergedBlock.setAggregationResults(combineAggregationResults(brokerRequest,mergedBlock.getAggregationResult(),blockToMerge.getAggregationResult()));
    }
  }
 else {
    DataTableBuilder.DataSchema mergedBlockSchema=mergedBlock.getSelectionDataSchema();
    DataTableBuilder.DataSchema blockToMergeSchema=blockToMerge.getSelectionDataSchema();
    Collection<Serializable[]> mergedResultSet=mergedBlock.getSelectionResult();
    Collection<Serializable[]> toMergeResultSet=blockToMerge.getSelectionResult();
    if (mergedBlockSchema != null && !mergedBlockSchema.equals(blockToMergeSchema)) {
      if (mergedResultSet.size() == 0 && toMergeResultSet.size() > 0) {
        mergedBlock.setSelectionDataSchema(blockToMergeSchema);
      }
 else {
        LOGGER.warn("Schema inconsistency. merged block schema: {}, block to merge schema: {}. Dropping block to merge",mergedBlockSchema,blockToMergeSchema);
        return;
      }
    }
    if (brokerRequest.getSelections().isSetSelectionSortSequence()) {
      SelectionOperatorService selectionService=new SelectionOperatorService(brokerRequest.getSelections(),mergedBlockSchema);
      mergedBlock.setSelectionResult(selectionService.merge(mergedResultSet,toMergeResultSet));
    }
 else {
      mergedBlock.setSelectionResult(SelectionOperatorUtils.merge(mergedResultSet,toMergeResultSet,brokerRequest.getSelections().getSize()));
    }
  }
}
