{
  if (buffer == null || buffer.length == 0) {
    return null;
  }
  ByteArrayInputStream bais=new ByteArrayInputStream(buffer);
  DataInputStream dis=new DataInputStream(bais);
  try {
    int length;
    length=dis.readInt();
    String[] columnNames=new String[length];
    DataType[] columnTypes=new DataType[length];
    for (int i=0; i < length; i++) {
      int size=dis.readInt();
      byte[] bytes=new byte[size];
      dis.read(bytes);
      columnNames[i]=new String(bytes);
    }
    for (int i=0; i < length; i++) {
      int size=dis.readInt();
      byte[] bytes=new byte[size];
      dis.read(bytes);
      columnTypes[i]=DataType.valueOf(new String(bytes));
    }
    DataSchema schema=new DataSchema(columnNames,columnTypes);
    return schema;
  }
 catch (  IOException e) {
    LOGGER.error("Exception deserializing DataSchema",e);
    return new DataSchema(new String[]{},new DataType[]{});
  }
}
