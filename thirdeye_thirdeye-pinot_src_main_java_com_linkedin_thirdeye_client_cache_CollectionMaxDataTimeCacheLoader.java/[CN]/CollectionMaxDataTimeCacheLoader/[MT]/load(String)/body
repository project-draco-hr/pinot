{
  LOGGER.info("Loading maxDataTime cache {}",collection);
  int options=AccessOption.PERSISTENT;
  String offlineTablePropertyStorePath="/SEGMENTS/" + collection + "_OFFLINE";
  String realtimeTablePropertyStorePath="/SEGMENTS/" + collection + "_REALTIME";
  long maxTime=0;
  List<Stat> stats=new ArrayList<>();
  List<ZNRecord> zkSegmentDataList=new ArrayList<>();
  ;
  if (propertyStore != null) {
    if (propertyStore.exists(realtimeTablePropertyStorePath,options)) {
      zkSegmentDataList.addAll(propertyStore.getChildren(realtimeTablePropertyStorePath,stats,options));
    }
    if (propertyStore.exists(offlineTablePropertyStorePath,options)) {
      zkSegmentDataList.addAll(propertyStore.getChildren(offlineTablePropertyStorePath,stats,options));
    }
    if (zkSegmentDataList != null && !zkSegmentDataList.isEmpty()) {
      for (      ZNRecord record : zkSegmentDataList) {
        try {
          long endTime=Long.parseLong(record.getSimpleField("segment.end.time"));
          TimeUnit timeUnit=TimeUnit.valueOf(record.getSimpleField("segment.time.unit"));
          long endTimeMillis=timeUnit.toMillis(endTime);
          if (endTimeMillis > maxTime) {
            maxTime=endTimeMillis;
          }
        }
 catch (        Exception e) {
          LOGGER.warn("Exception parsing metadata:{}",record,e);
        }
      }
    }
  }
  if (maxTime == 0) {
    maxTime=System.currentTimeMillis();
  }
  return maxTime;
}
