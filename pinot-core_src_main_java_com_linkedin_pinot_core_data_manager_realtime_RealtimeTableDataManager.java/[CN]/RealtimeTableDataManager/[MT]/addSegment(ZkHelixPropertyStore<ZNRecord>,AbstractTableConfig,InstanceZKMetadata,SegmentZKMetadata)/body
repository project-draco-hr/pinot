{
  this._helixPropertyStore=propertyStore;
  String segmentId=segmentZKMetadata.getSegmentName();
  if (segmentZKMetadata instanceof RealtimeSegmentZKMetadata) {
    if (new File(_indexDir,segmentId).exists() && ((RealtimeSegmentZKMetadata)segmentZKMetadata).getStatus() == Status.DONE) {
      if (!_segmentsMap.containsKey(segmentId)) {
synchronized (getGlobalLock()) {
          if (!_segmentsMap.containsKey(segmentId)) {
            IndexSegment segment=ColumnarSegmentLoader.load(new File(_indexDir,segmentId),_readMode,_indexLoadingConfigMetadata);
            _segmentsMap.put(segmentId,new OfflineSegmentDataManager(segment));
            markSegmentAsLoaded(segmentId);
            _referenceCounts.put(segmentId,new AtomicInteger(1));
          }
        }
      }
    }
 else {
      if (!_segmentsMap.containsKey(segmentId)) {
synchronized (getGlobalLock()) {
          if (!_segmentsMap.containsKey(segmentId)) {
            PinotHelixPropertyStoreZnRecordProvider propertyStoreHelper=PinotHelixPropertyStoreZnRecordProvider.forSchema(propertyStore);
            ZNRecord record=propertyStoreHelper.get(tableConfig.getValidationConfig().getSchemaName());
            LOGGER.info("found schema {} ",tableConfig.getValidationConfig().getSchemaName());
            SegmentDataManager manager=new RealtimeSegmentDataManager((RealtimeSegmentZKMetadata)segmentZKMetadata,tableConfig,instanceZKMetadata,this,_indexDir.getAbsolutePath(),_readMode,Schema.fromZNRecord(record));
            LOGGER.info("Initialize RealtimeSegmentDataManager - " + segmentId);
            _segmentsMap.put(segmentId,manager);
            _loadingSegments.add(segmentId);
            _referenceCounts.put(segmentId,new AtomicInteger(1));
          }
        }
      }
    }
  }
}
