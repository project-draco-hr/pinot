{
  _resourceDataManagerConfig=resourceDataManagerConfig;
  _resourceName=_resourceDataManagerConfig.getResourceName();
  LOGGER=LoggerFactory.getLogger(_resourceName + "-RealtimeResourceDataManager");
  _currentNumberOfSegments=Metrics.newCounter(RealtimeTableDataManager.class,_resourceName + "-" + CommonConstants.Metric.Server.CURRENT_NUMBER_OF_SEGMENTS);
  _currentNumberOfDocuments=Metrics.newCounter(RealtimeTableDataManager.class,_resourceName + "-" + CommonConstants.Metric.Server.CURRENT_NUMBER_OF_DOCUMENTS);
  _numDeletedSegments=Metrics.newCounter(RealtimeTableDataManager.class,_resourceName + "-" + CommonConstants.Metric.Server.NUMBER_OF_DELETED_SEGMENTS);
  _resourceDataDir=_resourceDataManagerConfig.getDataDir();
  if (!new File(_resourceDataDir).exists()) {
    new File(_resourceDataDir).mkdirs();
  }
  _numberOfResourceQueryExecutorThreads=_resourceDataManagerConfig.getNumberOfResourceQueryExecutorThreads();
  if (_numberOfResourceQueryExecutorThreads > 0) {
    _queryExecutorService=Executors.newFixedThreadPool(_numberOfResourceQueryExecutorThreads,new NamedThreadFactory("parallel-query-executor-" + _resourceName));
  }
 else {
    _queryExecutorService=Executors.newCachedThreadPool(new NamedThreadFactory("parallel-query-executor-" + _resourceName));
  }
  _readMode=ReadMode.valueOf(_resourceDataManagerConfig.getReadMode());
  _indexLoadingConfigMetadata=_resourceDataManagerConfig.getIndexLoadingConfigMetadata();
  LOGGER.info("Initialized RealtimeResourceDataManager: resource : " + _resourceName + " with :\n\tData Directory: "+ _resourceDataDir+ "\n\tRead Mode : "+ _readMode+ "\n\tQuery Exeutor with "+ ((_numberOfResourceQueryExecutorThreads > 0) ? _numberOfResourceQueryExecutorThreads : "cached")+ " threads");
}
