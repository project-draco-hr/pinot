{
  this.collectionsRef=new AtomicReference<>();
  this.controllerClient=HttpClients.createDefault();
  this.controllerHost=new HttpHost(pinotThirdEyeClientConfig.getControllerHost(),pinotThirdEyeClientConfig.getControllerPort());
  blacklist=new ArrayList<>();
  whitelist=new ArrayList<>();
  String whitelistCollections=config.getWhitelistCollections();
  String blacklistCollections=config.getBlacklistCollections();
  if (whitelistCollections != null && !whitelistCollections.isEmpty()) {
    whitelist=Lists.newArrayList(whitelistCollections.split(","));
  }
  if (blacklistCollections != null && !blacklistCollections.isEmpty()) {
    blacklist=Lists.newArrayList(blacklistCollections.split(","));
  }
  ScheduledExecutorService service=Executors.newSingleThreadScheduledExecutor();
  service.scheduleAtFixedRate(new Runnable(){
    @Override public void run(){
      try {
        loadCollections();
      }
 catch (      Exception e) {
        LOGGER.error("Exception while loading collections",e);
      }
    }
  }
,0,1,TimeUnit.HOURS);
}
