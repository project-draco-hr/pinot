{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetId()).compareTo(other.isSetId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.id,other.id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn()).compareTo(other.isSetColumn());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column,other.column);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetValue()).compareTo(other.isSetValue());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetValue()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.value,other.value);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOperator()).compareTo(other.isSetOperator());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOperator()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.operator,other.operator);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNestedFilterQueryIds()).compareTo(other.isSetNestedFilterQueryIds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNestedFilterQueryIds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.nestedFilterQueryIds,other.nestedFilterQueryIds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
